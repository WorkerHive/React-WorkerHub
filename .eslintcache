[{"/home/workhub/work/React-WorkerHub/src/graph/ipfs/index.js":"1","/home/workhub/work/React-WorkerHub/src/index.js":"2","/home/workhub/work/React-WorkerHub/src/controllers/DashboardController/index.js":"3","/home/workhub/work/React-WorkerHub/src/reducers/auth.js":"4","/home/workhub/work/React-WorkerHub/src/components/sidebar/index.js":"5","/home/workhub/work/React-WorkerHub/src/components/dialogs/file-upload-dialog/index.js":"6","/home/workhub/work/React-WorkerHub/src/reducers/equipment.js":"7","/home/workhub/work/React-WorkerHub/src/reducers/team.js":"8","/home/workhub/work/React-WorkerHub/src/components/dialogs/file-dialog/index.js":"9","/home/workhub/work/React-WorkerHub/src/components/dialogs/file-preview-dialog/index.js":"10","/home/workhub/work/React-WorkerHub/src/reducers/files.js":"11","/home/workhub/work/React-WorkerHub/src/components/dialogs/converter-dialog/index.js":"12","/home/workhub/work/React-WorkerHub/src/reducers/calendar.js":"13","/home/workhub/work/React-WorkerHub/src/components/dialogs/plan-dialog/index.js":"14","/home/workhub/work/React-WorkerHub/src/reportWebVitals.js":"15","/home/workhub/work/React-WorkerHub/src/components/dialogs/mutable-dialog/index.js":"16","/home/workhub/work/React-WorkerHub/src/components/foreign-input/index.js":"17","/home/workhub/work/React-WorkerHub/src/reducers/contacts.js":"18","/home/workhub/work/React-WorkerHub/src/reducers/admin.js":"19","/home/workhub/work/React-WorkerHub/src/reducers/dashboard.js":"20","/home/workhub/work/React-WorkerHub/src/views/Equipment/index.tsx":"21","/home/workhub/work/React-WorkerHub/src/views/Team/index.tsx":"22","/home/workhub/work/React-WorkerHub/src/views/KnowledgeBase/index.tsx":"23","/home/workhub/work/React-WorkerHub/src/views/Files/index.tsx":"24","/home/workhub/work/React-WorkerHub/src/views/Contacts/index.tsx":"25","/home/workhub/work/React-WorkerHub/src/views/Calendar/index.tsx":"26","/home/workhub/work/React-WorkerHub/src/views/ProjectView/index.tsx":"27","/home/workhub/work/React-WorkerHub/src/views/Projects/index.tsx":"28","/home/workhub/work/React-WorkerHub/src/views/Settings/index.tsx":"29","/home/workhub/work/React-WorkerHub/src/views/Admin/index.tsx":"30","/home/workhub/work/React-WorkerHub/src/views/Login/index.tsx":"31","/home/workhub/work/React-WorkerHub/src/views/Login/hub-setup.tsx":"32","/home/workhub/work/React-WorkerHub/src/tabs/project/team.tsx":"33","/home/workhub/work/React-WorkerHub/src/actions/teamActions.ts":"34","/home/workhub/work/React-WorkerHub/src/reducers/projects.js":"35","/home/workhub/work/React-WorkerHub/src/nodes/MongoDBServerNode.tsx":"36","/home/workhub/work/React-WorkerHub/src/actions/authActions.ts":"37","/home/workhub/work/React-WorkerHub/src/actions/contactActions.ts":"38","/home/workhub/work/React-WorkerHub/src/tabs/project/files.tsx":"39","/home/workhub/work/React-WorkerHub/src/actions/projectActions.ts":"40","/home/workhub/work/React-WorkerHub/src/graph/index.ts":"41","/home/workhub/work/React-WorkerHub/src/actions/knowledgeActions.ts":"42","/home/workhub/work/React-WorkerHub/src/views/Dashboard/index.tsx":"43","/home/workhub/work/React-WorkerHub/src/nodes/ProjectItemNode.tsx":"44","/home/workhub/work/React-WorkerHub/src/actions/adminActions.ts":"45","/home/workhub/work/React-WorkerHub/src/actions/types.ts":"46","/home/workhub/work/React-WorkerHub/src/actions/fileActions.ts":"47","/home/workhub/work/React-WorkerHub/src/nodes/TypeDefNode.tsx":"48","/home/workhub/work/React-WorkerHub/src/reducers/knowledge.js":"49","/home/workhub/work/React-WorkerHub/src/tabs/project/settings.tsx":"50","/home/workhub/work/React-WorkerHub/src/nodes/MSSQLServerNode.tsx":"51","/home/workhub/work/React-WorkerHub/src/graph/yjs/context.tsx":"52","/home/workhub/work/React-WorkerHub/src/actions/calendarActions.ts":"53","/home/workhub/work/React-WorkerHub/src/App.tsx":"54","/home/workhub/work/React-WorkerHub/src/actions/equipmentActions.ts":"55","/home/workhub/work/React-WorkerHub/src/graph/ipfs/p2p-stack.js":"56","/home/workhub/work/React-WorkerHub/src/nodes/MSSQLNode.tsx":"57","/home/workhub/work/React-WorkerHub/src/tabs/project/calendar.tsx":"58","/home/workhub/work/React-WorkerHub/src/components/dialogs/calendar-dialog/index.tsx":"59","/home/workhub/work/React-WorkerHub/src/configureStore.ts":"60","/home/workhub/work/React-WorkerHub/src/tabs/project/index.tsx":"61","/home/workhub/work/React-WorkerHub/src/tabs/project/plan.tsx":"62","/home/workhub/work/React-WorkerHub/src/components/plan/tree/branch.tsx":"63","/home/workhub/work/React-WorkerHub/src/components/plan/tree/index.tsx":"64"},{"size":4660,"mtime":1610257598096,"results":"65","hashOfConfig":"66"},{"size":832,"mtime":1608515322756,"results":"67","hashOfConfig":"66"},{"size":4293,"mtime":1610257428344,"results":"68","hashOfConfig":"66"},{"size":660,"mtime":1608496395660,"results":"69","hashOfConfig":"66"},{"size":3399,"mtime":1610155852169,"results":"70","hashOfConfig":"66"},{"size":4086,"mtime":1608501889945,"results":"71","hashOfConfig":"66"},{"size":1131,"mtime":1608482181286,"results":"72","hashOfConfig":"66"},{"size":1124,"mtime":1608482181286,"results":"73","hashOfConfig":"66"},{"size":2015,"mtime":1608482181282,"results":"74","hashOfConfig":"66"},{"size":2684,"mtime":1610256764259,"results":"75","hashOfConfig":"66"},{"size":406,"mtime":1608482181286,"results":"76","hashOfConfig":"66"},{"size":2257,"mtime":1609574330289,"results":"77","hashOfConfig":"66"},{"size":517,"mtime":1608482181286,"results":"78","hashOfConfig":"66"},{"size":8391,"mtime":1610256798278,"results":"79","hashOfConfig":"66"},{"size":362,"mtime":1608482181286,"results":"80","hashOfConfig":"66"},{"size":4335,"mtime":1610152537465,"results":"81","hashOfConfig":"66"},{"size":2323,"mtime":1609643190599,"results":"82","hashOfConfig":"66"},{"size":1215,"mtime":1609643855599,"results":"83","hashOfConfig":"66"},{"size":1083,"mtime":1609821465909,"results":"84","hashOfConfig":"66"},{"size":521,"mtime":1608482181286,"results":"85","hashOfConfig":"66"},{"size":2992,"mtime":1610268146706,"results":"86","hashOfConfig":"66"},{"size":3479,"mtime":1610179989518,"results":"87","hashOfConfig":"66"},{"size":4950,"mtime":1610251282779,"results":"88","hashOfConfig":"66"},{"size":3208,"mtime":1610268195974,"results":"89","hashOfConfig":"66"},{"size":4002,"mtime":1610251199609,"results":"90","hashOfConfig":"66"},{"size":3165,"mtime":1610262293010,"results":"91","hashOfConfig":"66"},{"size":7235,"mtime":1610275448425,"results":"92","hashOfConfig":"66"},{"size":4089,"mtime":1610268125143,"results":"93","hashOfConfig":"66"},{"size":4406,"mtime":1610180261292,"results":"94","hashOfConfig":"66"},{"size":4991,"mtime":1610276920972,"results":"95","hashOfConfig":"66"},{"size":3738,"mtime":1610245010990,"results":"96","hashOfConfig":"66"},{"size":2081,"mtime":1610245134640,"results":"97","hashOfConfig":"66"},{"size":186,"mtime":1610250868162,"results":"98","hashOfConfig":"66"},{"size":2466,"mtime":1610238578563,"results":"99","hashOfConfig":"66"},{"size":922,"mtime":1608482181286,"results":"100","hashOfConfig":"66"},{"size":2040,"mtime":1610255823010,"results":"101","hashOfConfig":"66"},{"size":1326,"mtime":1610238542726,"results":"102","hashOfConfig":"66"},{"size":3397,"mtime":1610238555666,"results":"103","hashOfConfig":"66"},{"size":1456,"mtime":1610251033357,"results":"104","hashOfConfig":"66"},{"size":2253,"mtime":1610244274119,"results":"105","hashOfConfig":"66"},{"size":2161,"mtime":1610242271378,"results":"106","hashOfConfig":"66"},{"size":2087,"mtime":1610244241491,"results":"107","hashOfConfig":"66"},{"size":1095,"mtime":1610256854020,"results":"108","hashOfConfig":"66"},{"size":4472,"mtime":1610255892870,"results":"109","hashOfConfig":"66"},{"size":5659,"mtime":1610277087792,"results":"110","hashOfConfig":"66"},{"size":1684,"mtime":1610173829392,"results":"111","hashOfConfig":"66"},{"size":2790,"mtime":1610238571347,"results":"112","hashOfConfig":"66"},{"size":550,"mtime":1610255853394,"results":"113","hashOfConfig":"66"},{"size":874,"mtime":1609574330297,"results":"114","hashOfConfig":"66"},{"size":778,"mtime":1610251135130,"results":"115","hashOfConfig":"66"},{"size":1900,"mtime":1610255835042,"results":"116","hashOfConfig":"66"},{"size":256,"mtime":1610239693120,"results":"117","hashOfConfig":"66"},{"size":1890,"mtime":1610238550790,"results":"118","hashOfConfig":"66"},{"size":1918,"mtime":1610263212060,"results":"119","hashOfConfig":"66"},{"size":2076,"mtime":1610238559382,"results":"120","hashOfConfig":"66"},{"size":717,"mtime":1608597658823,"results":"121","hashOfConfig":"66"},{"size":4326,"mtime":1610255900562,"results":"122","hashOfConfig":"66"},{"size":2309,"mtime":1610250487336,"results":"123","hashOfConfig":"66"},{"size":9220,"mtime":1610262332709,"results":"124","hashOfConfig":"66"},{"size":662,"mtime":1610263355222,"results":"125","hashOfConfig":"66"},{"size":262,"mtime":1610274974546,"results":"126","hashOfConfig":"66"},{"size":5539,"mtime":1610276283762,"results":"127","hashOfConfig":"66"},{"size":2408,"mtime":1610276128662,"results":"128","hashOfConfig":"66"},{"size":3632,"mtime":1610277898235,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},"1vgojqa",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"188"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"188"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"188"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"188"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"192"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"245"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"192"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"188"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/workhub/work/React-WorkerHub/src/graph/ipfs/index.js",["306","307","308"],"import React from 'react';\nimport IPFS from 'ipfs';\nimport { decode } from 'uint8-to-base64'\nimport { P2PStack } from './p2p-stack';\nimport { withContext } from \"with-context\";\nimport isElectron from 'is-electron'\nexport const IPFSContext = React.createContext({})\n\nexport const withIPFS = withContext(IPFSContext, \"ipfs\")\n\nexport const IPFSProvider = (props) => {\n\n    const [ isReady, setReady ] = React.useState(false)\n    const [ ipfs, setIPFS ] = React.useState(null)\n    let host = isElectron() ? `${localStorage.getItem('workhub-api')}.workhub.services` : window.location.hostname;\n\n    if(host == \"localhost\") host = `${localStorage.getItem('workhub-api')}.workhub.services`\n\n    React.useEffect(() => {\n        async function startIPFS(){\n            let node = ipfs;\n            if(ipfs){\n                console.info(\"=> IPFS Already Started\")\n            }else{\n                console.time('IPFS Started')\n\n                try{\n                    node = await IPFS.create({\n                        repo: 'workhub',\n                        config: {\n                            Addresses: {\n                                Swarm: [`/dns4/${host}/tcp/6969/wss/p2p-webrtc-star`],\n                                Bootstrap: []\n                            }\n                        },\n                        relay: {enabled: true, hop: {enabled: true}},\n                        libp2p: P2PStack(decode(props.swarmKey))\n                    })\n                    console.log(await node.id())\n                }catch(e){\n                    console.error(e)\n                }\n                console.timeEnd('IPFS Started')\n            }\n            setIPFS(node)\n            setReady(node != null)\n\n        }    \n        if(props.swarmKey) startIPFS()\n        return function cleanup(){\n            if(ipfs && ipfs.stop){\n                console.log('Stopping IPFS')\n                ipfs.stop().catch(err => console.error(err))\n                ipfs = null\n            }\n        }\n    }, [props.swarmKey])\n\n    return (\n        <IPFSContext.Provider value={{node: ipfs, isReady}}>\n            {props.children}\n        </IPFSContext.Provider>\n    )\n}\n\n/*export const useIPFS = (swarmKey) => {\n    console.log(\"SWARM KEY\", swarmKey)\n    swarmKey = decode(swarmKey)\n\n    React.useEffect(() => {\n        async function startIPFS(){\n            if(ipfs){\n                console.log('IPFS Already Started')\n            }else{\n                console.time('IPFS Started')\n                try{\n                    ipfs = await IPFS.create({\n                        repo: 'workhub',\n                        config: {\n                            Addresses: {\n                                Swarm: [\n                                   //'/ip4/127.0.0.1/tcp/9090/ws/p2p-webrtc-star'\n                                 '/dns4/thetechcompany.workhub.services/tcp/6969/ws/p2p-webrtc-star'\n                                ],\n                            }\n                        },\n                        relay: {enabled: true, hop: {enabled: true}},\n                        libp2p: P2PStack(swarmKey)\n                    })\n                    \n                    console.timeEnd('IPFS Started')\n\n                    setInterval(async () => {\n                        if(ipfs) console.log(await ipfs.swarm.peers())\n                    }, 2000)\n                }catch(err){\n                    console.error('IPFS init error: ', err)\n                    ipfs = null;\n                }\n            }\n        }\n\n        if(swarmKey) startIPFS()\n      /*  return function cleanup(){\n            if(ipfs && ipfs.stop){\n                console.log('Stopping IPFS')\n                ipfs.stop().catch(err => console.error(err))\n                ipfs = null\n            }\n        }\n    }, [ipfs])\n    return {ipfs}\n}*/\n\nexport const IPFSStack = async (swarmKey = 'L2tleS9zd2FybS9wc2svMS4wLjAvCi9iYXNlMTYvCmJlMGI3MmJkNGRmODAwNzkwYjU5ZWZhNzA3YjcxNzExYWIwYjNhNGI0OTAyMWNiNDUwMGQxMDZkMWUwZGVmNTg=') => {\n    console.log(\"IPFS Node Starting\")\n\n    let node = await IPFS.create({\n        repo: 'workhub-' + new Date().getTime(),\n        config: {\n          Addresses: {\n            Swarm: [\n                `/dns4/${localStorage.getItem('workhub-api')}.workhub.services/tcp/6969/wss/p2p-webrtc-star`,\n               '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star'\n            ],\n            Bootstrap: []\n          }\n        },\n      })\n    console.log(\"IPFS Node Started\")\n    console.log(await node.id())\n    //  node.swarm.connect('/dns4/thetechcompany.workhub.services/tcp/6969/ws/p2p-webrtc-star')\n    console.log(await node.swarm.localAddrs())\n    return node;\n}",["309","310"],"/home/workhub/work/React-WorkerHub/src/index.js",[],"/home/workhub/work/React-WorkerHub/src/controllers/DashboardController/index.js",["311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332"],"/home/workhub/work/React-WorkerHub/src/reducers/auth.js",[],["333","334"],"/home/workhub/work/React-WorkerHub/src/components/sidebar/index.js",["335","336","337","338"],"import React from 'react';\n\nimport {\n    Drawer,\n    Typography,\n    List,\n    ListItem,\n    IconButton,\n    Divider,\n    Paper\n} from '@material-ui/core';\n\nimport {\n  Contacts,\n    Notifications,\n    AccountTree,\n    Dashboard,\n    CalendarToday,\n    SupervisorAccount,\n    BusinessCenter,\n    Description,\n    EmojiNature,\n    Settings,\n    LocalLibrary,\n    ChevronLeft,\n    ChevronRight\n  } from '@material-ui/icons';\n\nimport { withRouter } from 'react-router-dom'\n\nimport WorkhubLogo from '../../assets/teal.png';\n\nfunction Sidebar(props){\n  const [ minimized, setMinimized ] = React.useState(true);\n    const menu = [\n        {\n          icon: <Dashboard />,\n          label: \"Dashboard\",\n          path: \"\"\n        },\n        {\n          icon: <CalendarToday />,\n          label: \"Calendar\",\n          path: \"/calendar\"\n        },\n        {\n          icon: <AccountTree />,\n          label: \"Projects\",\n          path: \"/projects\"\n        },\n        {\n          icon: <SupervisorAccount />,\n          label: \"Team\",\n          path: \"/team\"\n        },\n        {\n          icon: <BusinessCenter /> ,\n          label: \"Equipment\",\n          path: \"/equipment\"\n        },\n        {\n          icon: <Description />,\n          label: \"Files\",\n          path: \"/files\"\n        },\n        {\n          icon: <LocalLibrary />,\n          label: \"Documentation\",\n          path: '/kb'\n        },\n        {\n          icon: <Contacts />,\n          label: \"Contacts\",\n          path: \"/contacts\"\n        },\n        {\n          icon: <EmojiNature />,\n          label: \"Workflows\",\n          path: '/workflows'\n        }\n      ]\n\n    return (\n      <Paper style={{display: 'flex', backgroundColor: '#4f45e2',color:'rgb(222, 222, 222)', flexDirection: 'column', width: minimized ? 64 : 200, transition: 'width 200ms ease-in'}}>\n        <List style={{flex: 1, maxWidth: minimized ? 64 : 200, transition: 'max-width 200ms ease-in'}}> \n        <ListItem style={{position: 'relative', color: 'teal', padding: 12, fontSize: 20, justifyContent: minimized ? 'center': 'flex-start'}}>\n           <img src={WorkhubLogo} style={{height: 33, marginRight: minimized ? 0 : 8}} /> \n\n           {!minimized && <Typography>Workhub</Typography>}\n\n           <IconButton size=\"small\" style={{backgroundColor: 'green', zIndex: 9, position: 'absolute', right: -12, bottom: -12}} onClick={() => setMinimized(!minimized)}>\n              {minimized ? <ChevronRight style={{color: 'rgb(222,222,222)'}}/> : <ChevronLeft style={{color: 'rgb(222,222,222)'}} />}  \n           </IconButton>\n          \n        </ListItem>\n        <Divider />\n        {menu.map((x, ix) => (\n            <ListItem \n            className={menu.map((x) => x.path).indexOf(window.location.pathname.split(props.match.url)[1]) == ix ? 'selected menu-item': 'menu-item'}\n            onClick={() => props.history.push(`${props.match.url}${x.path}`)}\n            button >\n              {x.icon} \n              {!minimized && x.label}\n            </ListItem>\n        ))}\n        </List>\n        <Divider />\n        <ListItem style={{justifyContent: minimized ? 'center' : \"initial\"}} button onClick={() => props.history.push(`${props.match.url}/settings`)}>\n            <Settings style={{marginRight: minimized ? 0 : 12}} />\n            {!minimized && <Typography>Settings</Typography>}\n        </ListItem>\n        </Paper>\n    )\n}\n\nexport default withRouter(Sidebar)",["339","340"],"/home/workhub/work/React-WorkerHub/src/components/dialogs/file-upload-dialog/index.js",[],["341","342"],"/home/workhub/work/React-WorkerHub/src/reducers/equipment.js",[],["343","344"],"/home/workhub/work/React-WorkerHub/src/reducers/team.js",[],"/home/workhub/work/React-WorkerHub/src/components/dialogs/file-dialog/index.js",[],"/home/workhub/work/React-WorkerHub/src/components/dialogs/file-preview-dialog/index.js",["345","346","347","348"],"import React from 'react';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    Typography\n} from '@material-ui/core';\n\nimport Spinner from 'react-spinkit'\n\n\nimport { GLBCard, PDFCard } from '@workerhive/react-ui'\n\nimport { connect } from 'react-redux';\nimport { withIPFS } from '../../../graph/ipfs';\n\nimport './index.css';\n\nfunction FilePreviewDialog(props){\n\n    const file = props.file || {}\n    const [data, setData] = React.useState(null)\n\n    const renderContent = () => {\n        if(data){\n            switch(file.extension){\n                case 'pdf':\n                    return (\n                        <PDFCard data={data}/>\n                    )\n                case 'glb':\n                    return (\n                        <GLBCard data={data}/>\n                    )\n                case 'png':\n                    return (\n                        <img style={{width: '33%', height: '100%'}} src={data} />\n                    )\n                default:\n                    return null;\n            }\n        }else{\n            return (\n                <div className=\"preview-loading\">\n                    <Spinner name=\"double-bounce\"/>\n                    <Typography variant=\"h6\" style={{fontWeight: 'bold'}}>Loading please wait...</Typography>\n                </div>\n            \n            )\n        }\n    }\n\n    React.useEffect( async () => {\n        if(data) URL.revokeObjectURL(data)\n\n        if(props.file && props.ipfs && props.ipfs.isReady){\n            console.log(\"Fetching\", props.file.cid)\n            let file =  props.ipfs.node.cat(props.file.cid)\n            let data = Buffer.from('')\n            for await (const chunk of file){\n              data = Buffer.concat([data, chunk])\n            }\n            console.log(\"Setting data\")\n            setData(URL.createObjectURL(new Blob([data])))\n        }\n    }, [props.file, props.ipfs])\n\n    const onClose = () => {\n        if(data) {\n            URL.revokeObjectURL(data)\n            setData(null)\n        }\n        if(props.onClose) props.onClose();\n    }\n\n    return (\n        <Dialog fullWidth maxWidth={data ? \"lg\" : 'md'} open={props.open}  onClose={onClose}>\n            <DialogTitle>{file.filename}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', minHeight: 300, maxHeight: (data) ? 639 : 300, transition: 'max-height 200ms ease-out', alignItems: 'center'}}>\n                {renderContent()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default withIPFS(FilePreviewDialog)",["349","350"],"/home/workhub/work/React-WorkerHub/src/reducers/files.js",[],"/home/workhub/work/React-WorkerHub/src/components/dialogs/converter-dialog/index.js",["351","352","353"],"import React from 'react';\n\nimport {\n    Forward\n} from '@material-ui/icons'\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    TextField\n} from '@material-ui/core';\n\nimport { getConverters, convertFile } from '../../../actions/fileActions';\n\nexport default function ConverterDialog(props){\n    const [ outputFormat, setOutputFormat ] = React.useState('')\n\n    const [ formats, setFormats ] = React.useState([])\n\n    React.useEffect(() => {\n   /*     getConverters().then((converters) => {\n            setFormats(converters.map((x) => ({\n                from: x.sourceFormat,\n                to: [x.targetFormat]\n            })))\n        })*/\n    }, [])\n\n    const convert = () => {\n        convertFile(props.selected.id, outputFormat.toLowerCase())\n        props.onClose();\n        setOutputFormat('')\n        \n    }\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>Convert {props.selected && props.selected.name}</DialogTitle>\n            <DialogContent style={{display: 'flex', alignItems: 'center'}}>\n                <TextField \n                    fullWidth \n                    disabled\n                    label=\"From\" \n                    value={props.selected && props.selected.extension.toUpperCase()}/>\n                <Forward style={{marginLeft: 8, marginRight: 8}}/>\n                <FormControl fullWidth>\n                    <InputLabel>To</InputLabel>\n                    <Select value={outputFormat} onChange={(e) => {\n                        setOutputFormat(e.target.value) \n                    }} fullWidth>\n                        {props.selected && (formats.filter((a) => a.from == props.selected.extension)[0] || {to: []}).to.map((x) => (\n                            <MenuItem value={x}>{x.toUpperCase()}</MenuItem>\n\n                        ))}\n                    </Select>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Cancel</Button>\n                <Button onClick={convert} color=\"primary\" variant=\"contained\">Start</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}",["354","355"],"/home/workhub/work/React-WorkerHub/src/reducers/calendar.js",[],"/home/workhub/work/React-WorkerHub/src/components/dialogs/plan-dialog/index.js",["356","357"],"import React from 'react';\n\nimport {\n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogTitle,\n    TextField,\n    Button,\n    Typography,\n    Menu,\n    MenuItem,\n    List,\n    ListItem,\n    Divider\n} from '@material-ui/core';\n\nimport {\n    Check\n} from '@material-ui/icons';\n\nimport {TeamCircles, FileDrop} from '@workerhive/react-ui';\nimport { KeyboardDateTimePicker } from '@material-ui/pickers'\nimport jwt_decode from 'jwt-decode';\nimport { connect } from 'react-redux'\nimport { withEditor } from '@workerhive/hive-flow';\nimport { attachFile, uploadFile } from '../../../actions/fileActions';\nimport moment from 'moment';\n\nimport './index.css';\n\nfunction PlanDialog(props){\n    const [ ID, setID ] = React.useState('')\n    const [ title, setTitle ] = React.useState('')\n    const [ description, setDescription ] = React.useState('')\n    const [ dueDate, setDueDate ] = React.useState(null);\n    const [ members, setMembers ] = React.useState([])\n    const [ attachments, setAttachments ] = React.useState([])\n\n    const [ memberAnchor, setMemberAnchor ] = React.useState(null);\n\n    React.useEffect(() => {\n        if(props.plan && props.plan.data){\n            if(props.plan.id) setID(props.plan.id)\n            if(props.plan.data.label) setTitle(props.plan.data.label)\n            if(props.plan.data.description) setDescription(props.plan.data.description)\n            console.log(\"MEMBERS\", props.plan.members)\n            if(props.plan.members) setMembers(Array.isArray(props.plan.members) ? props.plan.members : [])\n            if(props.plan.attachments) setAttachments(props.plan.data.attachments || [])\n            if(props.plan.data.dueDate) setDueDate(moment(new Date(props.plan.data.dueDate * 1000)))\n        }\n    }, [props.plan])\n\n    const onClose = () => {\n        setMembers([])\n        setID('')\n        setTitle('')\n        setDescription('')\n        setDueDate(null)\n        setAttachments([])\n        props.onClose()\n    }\n\n    const onSave = () => {\n        let plan = {\n            id: ID,\n            title: title,\n            description: description,\n            members: [...new Set(members)] || [],\n            dueDate: dueDate && dueDate.valueOf() / 1000,\n        }\n\n        \n        \n        if(props.onSave){\n            props.onSave(plan)\n            onClose();\n        }\n    }\n\n    const onDelete = () => {\n        if(props.onDelete && ID)props.onDelete(ID)\n        onClose();\n    }\n\n    const addFilesToPlan = (files) => {\n        if(files.length > 0){\n            for(var i = 0; i < files.length; i++){\n                props.uploadFile(files[i], (newFile) => {\n                    props.editor.attachFile(newFile.filename, newFile.cid)\n                    props.editor.updateNode(ID, (node) => {\n                        return {data: {\n                            attachments: (node.data.attachments || []).concat([{name: newFile.filename, cid: newFile.cid}])\n                        }}\n                    })\n                    setAttachments(attachments.concat([{\n                        name: newFile.filename,\n                        cid: newFile.cid\n                    }]))\n                })\n            }\n            console.log(files)\n        }\n    }\n\n    const toggleMembersMenu = (e) => {\n\n        setMemberAnchor(!memberAnchor ? e.currentTarget : null)\n\n    }\n\n    const toggleUser = (user) => {\n        console.log(ID)\n\n        \n        \n        let m = members.slice();\n        console.log(m, user, m.indexOf(user))\n        if(m.indexOf(user) > -1){\n            m.splice(m.indexOf(user), 1)\n            console.log(\"Removing \", )\n        }else{\n            m.push(user)\n        }\n            console.log([...new Set(m)])\n            setMembers([...new Set(m)])\n            //return {members: [...new Set(m)]}\n        \n    \n    }\n\n    return (\n\n        <Dialog fullWidth open={props.open} onClose={onClose}>\n            <FileDrop onDrop={addFilesToPlan} noClick>\n            {(isDragActive) => (\n                <>\n            <div>{isDragActive && (\n                <div style={{\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    top: 0,\n                    zIndex: 9,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    backgroundColor: 'rgba(255, 255, 255, 0.5)'\n                }} className=\"file-opacity\">\n                    <Typography variant=\"h6\" style={{fontWeight: 'bold'}}>Drop files here</Typography>\n                </div>\n            )}</div>\n            <DialogTitle>\n                <TextField value={title} onChange={(e) => setTitle(e.target.value)} fullWidth label=\"Title\" />\n            </DialogTitle>\n            <DialogContent className=\"plan-dialog__content\">\n                <div className=\"plan-info\">\n                    <TextField \n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        fullWidth \n                        label=\"Description\" \n                        rows={4} multiline rowsMax={6} />\n                    \n                    <div>\n                        <Typography style={{fontWeight: 'bold', marginTop: 4}} variant=\"subtitle1\">Attachments</Typography>\n                        {attachments.map((x) => (\n                            <div>{x.name}</div>\n                        ))}\n                    </div>\n                    <div>\n                        <Typography variant=\"subtitle1\">Members</Typography>\n                        <TeamCircles members={members} />\n                    </div>\n\n                </div>\n                <div className=\"plan-actions\">\n                    <Button \n                        onClick={() => {\n                            toggleUser(props.user.id)\n                        }}\n                        color={[...members].indexOf(props.user.id) > -1 ? \"\" : \"primary\"}\n                        variant=\"contained\">{[...members].indexOf(props.user.id) > -1 ? \"Leave\" : \"Join\"}</Button>\n                    <Button color=\"primary\" variant=\"contained\" onClick={(e) => {\n                        toggleMembersMenu(e);\n                    }}>Members</Button>\n                    <Menu \n                        onClose={() => setMemberAnchor(null)}\n                        transformOrigin={{vertical: 'top', horizontal: 'center'}}\n                        anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n                        open={memberAnchor} \n                        anchorEl={memberAnchor}>\n                            <Divider />\n                        <div style={{padding: 4}}>\n                        <TextField label=\"Name\" />\n                        </div>\n                        <List>\n                            {props.team.map((x) => (\n                                <ListItem button onClick={() => {\n                                   toggleUser(x.id)\n                                  \n                                }}>{[...members].indexOf(x.id) > -1 && <Check style={{marginRight: 8}}/>} {x.name}</ListItem>\n                            ))}\n                        </List>\n                        \n                    </Menu>\n                    <KeyboardDateTimePicker\n                        style={{marginTop: 4}}\n                        label=\"Due Date\"\n                        value={dueDate}\n                        onChange={(e) => {\n                            setDueDate(e)\n                        }}\n                        format={\"DD/MM/yyyy\"} />\n                    <Button color=\"primary\" variant=\"contained\" style={{marginTop: 4}}>Attachments</Button>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                {ID && (\n                    <Button onClick={onDelete} color=\"secondary\">Delete</Button>\n                )}\n                <Button onClick={onClose}>Cancel</Button>\n                <Button onClick={onSave} color=\"primary\" variant=\"contained\">Save</Button>\n            </DialogActions>\n            </>\n            )}\n        </FileDrop>\n        </Dialog>\n    );\n}\n\nexport default connect((state) => ({\n    user: jwt_decode(state.auth.token),\n    team: state.team.list,\n}), (dispatch) => ({\n    uploadFile: (file, cb) => dispatch(uploadFile(file, cb))\n}))(withEditor(PlanDialog))",["358","359"],"/home/workhub/work/React-WorkerHub/src/reportWebVitals.js",[],["360","361"],"/home/workhub/work/React-WorkerHub/src/components/dialogs/mutable-dialog/index.js",["362","363","364"],"/home/workhub/work/React-WorkerHub/src/components/foreign-input/index.js",[],"/home/workhub/work/React-WorkerHub/src/reducers/contacts.js",[],["365","366"],"/home/workhub/work/React-WorkerHub/src/reducers/admin.js",[],"/home/workhub/work/React-WorkerHub/src/reducers/dashboard.js",[],"/home/workhub/work/React-WorkerHub/src/views/Equipment/index.tsx",["367","368","369","370","371","372"],"import React from 'react';\n\nimport {\n  Paper,\n  List,\n  ListItem,\n  Typography\n} from '@material-ui/core';\n\nimport { Header, MoreMenu, SearchTable, PermissionForm } from '@workerhive/react-ui'\n\nimport { connect } from 'react-redux';\nimport { removeEquipment, getEquipment, updateEquipment, addEquipment } from '../../actions/equipmentActions';\nimport jwt_decode from 'jwt-decode';\nimport './index.css';\n\nexport interface EquipmentProps {\n  getEquipment: Function;\n  updateEquipment: Function;\n  addEquipment: Function;\n  removeEquipment: Function;\n  equipment: Array<any>;\n  permissions: any;\n  type: any;\n  user: any;\n}\n\nfunction Equipment(props :EquipmentProps){\n  const [ selectedTab, setSelectedTab ] = React.useState('');\n\n  const [ selected, setSelected] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getEquipment()\n  }, [])\n\n  return (\n    <>\n    <Header \n    tabs={[...new Set(props.equipment.filter((a) => a.type).map((x) => x.type))]}\n    onTabSelect={(tab) => {\n        setSelectedTab(tab)\n        //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n    }}\n    selectedTab={selectedTab}\n    title={'Equipment'} />\n    <PermissionForm \n      onSave={(data) => {\n        if(data.id){\n          let d = Object.assign({}, data);\n          console.log(data)\n          delete d.id;\n          props.updateEquipment(data.id, d)\n        }else{\n          props.addEquipment(data)\n        }\n      }}\n      onClose={() => setSelected(null)}\n      selected={selected} \n      type={props.type} \n      permissions={props.permissions}>\n    <SearchTable\n      filter={(item, search) => item.name.indexOf(search) > -1}\n      data={props.equipment.filter((a) => {\n        if(!selectedTab) return true;\n        return a.type == selectedTab\n      })}\n      renderItem={(item) => (\n        <div className=\"equipment-item\">\n        <ListItem button onClick={(e) => {\n        }}>\n          <Typography variant=\"subtitle1\" style={{flex: 1}}>{item.name}</Typography>\n        </ListItem>\n          <MoreMenu\n            menu={props.user.admin && [\n              {\n                label: \"Edit\",\n                action: () => setSelected(item)\n              },\n              {\n                label: \"Delete\",\n                color: 'red',\n                action: () => props.removeEquipment(item.id)\n              }\n            ]} />\n        </div>\n\n      )} />\n      </PermissionForm>\n      </>\n  )\n}\nexport default connect((state : any) => ({\n  user: jwt_decode(state.auth.token),\n  equipment: state.equipment.list,\n  type: state.dashboard.types.filter((a) => a.name ==\"Equipment\"),\n  permissions: state.dashboard.permissions.filter((a) => a.type == \"Equipment\")\n}), (dispatch : any) => ({\n  getEquipment: () => dispatch(getEquipment()),\n  addEquipment: (equipment : any) => dispatch(addEquipment(equipment)),\n  updateEquipment: (id : any, equipment : any) => dispatch(updateEquipment(id, equipment)),\n  removeEquipment: (id : any) => dispatch(removeEquipment(id))\n}))(Equipment)\n",["373","374"],"/home/workhub/work/React-WorkerHub/src/views/Team/index.tsx",["375","376","377","378"],"import React from 'react';\n\nimport {\n  Paper,\n  Typography,\n  List,\n  ListItem\n} from '@material-ui/core';\n\nimport {\n  SupervisedUserCircle,\n  SupervisorAccount,\n  Schedule,\n  Edit,\n  Delete,\n  Share\n} from '@material-ui/icons';\n\n\nimport { useMutation } from \"@apollo/client\";\nimport { getSignupLink, removeTeamMember, addTeamMember, updateTeamMember, getTeam } from '../../actions/teamActions';\nimport { PermissionForm, SearchTable, MoreMenu, Header } from '@workerhive/react-ui'\nimport { connect } from 'react-redux';\nimport jwt_decode from 'jwt-decode'\nimport './index.css';\n\nexport interface TeamsProps{\n  getTeam: Function;\n  removeTeamMember: Function;\n  addTeamMember: Function;\n  updateTeamMember: Function;\n  type: any;\n  permissions: any;\n  team: any;\n  user: any;\n}\n\nconst Teams : React.FC<TeamsProps> = (props) => {\n  const [selected, setSelected] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getTeam()\n  }, [])\n\n  console.log(props.user)\n\n  return (\n    <>\n    <Header\n      tabs={[]}\n      onTabSelect={(tab : any) => {\n        // setSelectedTab(tab)\n        //  props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n      }}\n      selectedTab={''}\n      title={\"Team\"} />\n    <PermissionForm\n      onSave={(data : any) => {\n        if (data.id) {\n          let d = Object.assign({}, data);\n          delete d.id;\n          props.updateTeamMember(data.id, d)\n\n        } else {\n          props.addTeamMember(data)\n        }\n      }}\n      onClose={() => setSelected(null)}\n      selected={selected}\n      type={props.type}\n      permissions={props.permissions}>\n      <SearchTable\n        filter={(item : any, search : any) => item.name.indexOf(search) > -1}\n        data={props.team}\n        renderItem={(item : any) => (\n          <div className=\"team-item\">\n            <ListItem button >\n              {item.status === \"pending\" ? <Schedule /> : item.admin ? <SupervisorAccount /> : <SupervisedUserCircle />}\n              <Typography style={{ marginLeft: 12 }}>\n                {item.name}\n              </Typography>\n            </ListItem>\n            <MoreMenu\n              menu={(item.status === \"pending\" ? [\n                {\n                  icon: <Share />,\n                  label: \"Share Signup\",\n                  action: () => {\n                    getSignupLink(item.id).then((link : any) => {\n                      console.log(\"SIGNUP TOKEN\", link)\n                    })\n\n                  }\n                }\n              ] : []).concat(props.user.admin && [{\n                label: \"Edit\",\n                icon: <Edit />,\n                action: () => setSelected(item)\n              },\n              {\n                label: \"Delete\",\n                color: 'red',\n                icon: <Delete />,\n                action: () => props.removeTeamMember(item.id)\n              }])} />\n          </div>\n        )} />\n    </PermissionForm>\n    </>\n  )\n}\n\nexport default connect((state : any) => ({\n  user: jwt_decode(state.auth.token),\n  team: state.team.list,\n  type: state.dashboard.types.filter((a : any) => a.name === \"TeamMember\"),\n  permissions: state.dashboard.permissions.filter((a: any) => a.type === \"TeamMember\")\n}), (dispatch : any) => ({\n  getTeam: () => dispatch(getTeam()),\n  addTeamMember: (member : any) => dispatch(addTeamMember(member)),\n  removeTeamMember: (id : any) => dispatch(removeTeamMember(id)),\n  updateTeamMember: (id : any, member : any) => dispatch(updateTeamMember(id, member))\n}))(Teams)\n",["379","380"],"/home/workhub/work/React-WorkerHub/src/views/KnowledgeBase/index.tsx",["381","382","383","384","385","386","387","388","389","390","391","392","393","394"],"import React from 'react';\n\nimport { \n    Paper\n} from \"@material-ui/core\"\n\nimport {\n    TreeView,\n    TreeItem\n} from \"@material-ui/lab\"\n\nimport Editor from 'rich-markdown-editor';\n\nimport { getKnowledge, addKnowledge, updateKnowledge } from '../../actions/knowledgeActions'\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom'\nimport './index.css';\nimport { ExpandMore, ExpandLess } from '@material-ui/icons';\n\nimport { DocumentEditor, MutableDialog, CRUDTree } from \"@workerhive/react-ui\"\n\nimport _ from 'lodash';\n\nexport interface KnowledgeBaseProps {\n    getKnowledge: Function;\n    addKnowledge: Function;\n    updateKnowledge: Function;\n    match: any;\n    history: any;\n    list: any;\n}\n\nconst KnowledgeBase : React.FC<KnowledgeBaseProps> = (props) => {\n\n    const [ dialogOpen, openDialog ] = React.useState(false);\n    const [ editorData, setEditorData ] = React.useState('')\n    const [ editorMap, setEditorMap ] = React.useState('')\n\n    const [ modalData, setModalData ] = React.useState({})\n\n    const [branches, setBranches ] = React.useState([\n        \"Flows\",\n        \"Graphs\",\n        \"Libraries\"\n    ])\n\n    React.useEffect(() => {\n        props.getKnowledge()\n     //   props.addKnowledge({title: \"Linked Data Graphs\", description: \"The start of an explanation\"})\n    }, [])\n\n    const update = _.debounce((editorData, val) => {\n        console.log(\"DEBOUNCE\")\n        props.updateKnowledge(editorData.id, {content: val})\n    }, 333)\n\n    return (\n        <div className=\"knowledge-base\">\n            <MutableDialog \n                open={dialogOpen}\n                data={modalData}\n                onSave={(data : any) => {\n                    if(data.id){\n                        props.updateKnowledge(data.id, data)\n                    }else{\n                        data.content = \"## \" + data.title;\n                        props.addKnowledge(data)\n                    }\n                    openDialog(false);\n                    console.log(data)\n                }}\n                onClose={() => openDialog(false)} \n                title={\"Knowledge\"}\n                structure={{\n                    title: \"String\",\n                    description: \"String\" \n                }} />\n            <Paper className=\"knowledge-base__menu\">\n                <CRUDTree \n                    onClick={(item : any) => {\n                      //  setEditorData(item)\n                        setEditorMap(item.content)\n                        props.history.push(`${props.match.url}/${item.id}`)\n                        console.log(item)\n                    }}\n                    onEdit={(item : any) => {\n                        setModalData(item)\n                        openDialog(true)\n                    }}\n                    onAdd={(item : any) => {\n                        if(item) setModalData({parent: item.id})\n                        openDialog(true)\n                    }}\n                    value={props.list} />\n            </Paper>\n            <div className=\"knowledge-base__editor\">\n            <Switch>\n                <Route path={`${props.match.url}/:id`} render={(_props) => {\n\n                    let kbItem = props.list.filter((a : any) => a.id == _props.match.params.id)\n\n                    if(kbItem.length > 0 && kbItem[0].content){\n                        kbItem = Object.assign({}, kbItem[0]);\n                        console.log(kbItem)\n                    return (\n                        <div>\n                        <DocumentEditor \n                            data={kbItem}\n                            links={props.list}\n                            onChange={(value : any) => {\n                            if(kbItem.id){\n                                update(kbItem, value)\n                                \n                                setEditorMap(value)\n                            }\n                        }}/>\n                            <div>\n                            {((kbItem && kbItem.content.match(/\\[([^\\[\\]]*)\\]\\((.*?)\\)/gm)) || []).map((x : any) => {\n                                let data = x.match(/\\[([^\\[\\]]*)\\]\\((.*?)\\)/)\n                                return(\n                                    <div>\n                                        {data[1]}\n                                    </div>\n                                )\n                            })}\n                            </div>\n                        </div>\n                        \n\n                    )\n                        }\n                }} />\n            </Switch>\n\n            \n            </div>\n        \n        </div>\n    )\n}\n\nexport default connect((state : any) => ({\n    list: state.knowledge.kb\n}), (dispatch: any) => ({\n    getKnowledge: () => dispatch(getKnowledge()),\n    addKnowledge: (input : any) => dispatch(addKnowledge(input)),\n    updateKnowledge: (id : string, update : any) => dispatch(updateKnowledge(id, update))\n}))(KnowledgeBase)",["395","396"],"/home/workhub/work/React-WorkerHub/src/views/Files/index.tsx",["397","398","399","400","401","402","403"],"/home/workhub/work/React-WorkerHub/src/views/Contacts/index.tsx",["404","405","406","407","408","409"],"import React from 'react';\n\nimport { ListItem, Typography } from '@material-ui/core';\n\nimport { getContactOrganisations, getContacts, addContact, updateContact } from '../../actions/contactActions';\n\nimport { Header, PermissionForm, SearchTable, MoreMenu } from \"@workerhive/react-ui\"\nimport jwt_decode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\n\n\nexport interface ContactProps {\n  location: any;\n  history: any;\n  match: any;\n  user: any;\n  contacts: any;\n  organisations: any;\n  getContacts: Function;\n  updateContact: Function;\n  addContact: Function;\n  permissions: any;\n  type: any;\n  removeProject: Function;\n}\n\nconst Contacts : React.FC<ContactProps> = (props) => {\n\n  const query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n\n\n    const [ selected, setSelected ] = React.useState(null)\n\n    React.useEffect(() => {\n      props.getContacts();\n    //  props.getContactOrganisations();\n    }, [])\n\n    return (\n        <div style={{flex: 1, display: 'flex', flexDirection: 'column'}}>\n              <Header \n                tabs={[\"Contacts\", \"Organisations\"]}\n                onTabSelect={(tab : any) => {\n\n                    query_string.filter = tab;\n                    props.history.push(`${window.location.pathname}?${qs.stringify(query_string)}`)\n\n                    //setSelectedTab(tab)\n                    //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n                }}\n                selectedTab={query_string.filter && query_string.filter.toString().toUpperCase() || 'CONTACTS'}\n                title={\"Contacts\"} />\n            <PermissionForm \n                onClose={() => {   \n                    setSelected(null)\n                }}\n                onSave={(obj : any, data : any) => {\n                    if(obj.id){\n                        let d = Object.assign({}, data);\n                        delete d.id\n                        props.updateContact(obj.id, d)\n                      }else{\n                        props.addContact(data)\n                      }\n                }}\n                selected={selected}\n                permissions={props.permissions}\n                type={props.type}>\n                <SearchTable data={(!query_string.filter || query_string.filter.toString().toLowerCase() == \"contacts\") ? props.contacts : props.organisations || []}\n                 renderItem={(item : any) => [\n                    <div className=\"project-item\">\n                      <ListItem button onClick={() => {\n                        props.history.push(`${props.match.url}/${item.id}`)\n                        }}>\n                        <Typography style={{flex: 1}} variant=\"subtitle1\">{item.name}</Typography>\n                      </ListItem>\n                      <MoreMenu \n                        menu={props.user.admin && [\n                          {\n                            label: \"Edit\",\n                            action: () => setSelected(item)\n                          },\n                          {\n                            label: \"Delete\",\n                            color: 'red',\n                            action: () => props.removeProject(item.id)\n                          }\n                        ]} />\n                    </div>\n                  ]}\n                />\n            </PermissionForm>\n\n        </div>\n    )\n}\n\nexport default connect((state : any) => ({\n    user: jwt_decode(state.auth.token),\n    contacts: state.contacts.list,\n    organisations: state.contacts.organisations,\n    type: state.dashboard.types.filter((a: any) => a.name == \"Contact\"),\n    permissions: state.dashboard.permissions.filter((a: any) => a.type == \"Projects\")\n}), (dispatch : any) => ({\n    addContact: (data :any) => dispatch(addContact(data)),\n    updateContact: (obj: any, data : any) => dispatch(updateContact(obj, data)),\n    getContacts: () => dispatch(getContacts()),\n    getContactOrganisations: () => dispatch(getContactOrganisations()),\n}))(Contacts)","/home/workhub/work/React-WorkerHub/src/views/Calendar/index.tsx",[],"/home/workhub/work/React-WorkerHub/src/views/ProjectView/index.tsx",["410","411","412","413","414"],"/home/workhub/work/React-WorkerHub/src/views/Projects/index.tsx",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435"],"/home/workhub/work/React-WorkerHub/src/views/Settings/index.tsx",["436","437","438","439","440","441","442","443","444","445","446","447"],"import React from 'react';\n\nimport {\n  Paper,\n  Divider,\n  Typography,\n  List,\n  IconButton,\n  Button,\n  ListItem\n} from '@material-ui/core';\n\nimport { MoreVert } from '@material-ui/icons'\n\nimport { CRUDList, AccordionList } from '@workerhive/react-ui'\n\nimport { deleteStore, updateStore, addStore, getStoreTypes, getStores } from '../../actions/adminActions';\nimport { getConverters, installConverter } from '../../actions/fileActions';\nimport { connect } from 'react-redux';\n\nexport interface SettingsProps {\n  getStores: Function;\n  deleteStore: Function;\n  addStore: Function;\n  updateStore: Function;\n  stores: any;\n  history: any;\n  types: any;\n}\n\nconst Settings : React.FC<SettingsProps> = (props) => {\n\n  const [ converters, setConverters ] = React.useState([])\n  const [ stores, setStores ] = React.useState([])\n\n  React.useEffect(() => {\n    getStoreTypes().then((types : any) => {\n      console.log(\"TYOES\", types)\n      setStoreTypes(types);\n    })\n\n    props.getStores();\n  \n    /*getConverters().then((converters) => {\n      console.log(converters)\n      setConverters(converters)\n    })*/\n  }, [])\n\n  const roles = [\n    {\n      name: \"Admin\"\n    },\n    {\n      name: \"Editor\"\n    },\n    {\n      name: \"User\"\n    }\n  ]\n\n  const [ storeTypes, setStoreTypes ] = React.useState([]);\n\n  const settingItems = [\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Add-ons</Typography>,\n      body: <CRUDList title={\"Add-ons\"} data={converters} />\n    },\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Connections</Typography>,\n      body: (\n        <CRUDList \n          title={\"Connections\"} \n          onDelete={(obj : any) => {\n            if(obj && obj.id){\n              props.deleteStore(obj.id)\n            }\n            \n          }}\n          onSave={(ob : any) => {\n            let obj = Object.assign({}, ob)\n            if(!obj.id){\n              props.addStore(obj)\n            }else{\n              const id = obj.id;\n              delete obj.id;\n              console.log(\"UPDATE STORE\", id, obj)\n\n              props.updateStore(id, obj)\n            }\n          }}\n          type={{name: 'String', type: {type: 'Select', items: storeTypes, key: 'id'}, host: 'String', user: 'String', pass: 'Password', dbName: 'String'}} \n          data={props.stores} />\n      )\n    },\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Roles</Typography>,\n      body: <CRUDList title={\"Roles\"} type={{name: 'String', permissions: {type: 'Table', items: props.types}}} data={roles} />\n    },\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Data Flow</Typography>,\n      body: (\n        <div style={{flex: 1, display: 'flex', flexDirection: 'column'}}>\n          <Typography color=\"secondary\">Warning: changing these settings is dangerous don't enter unless you know what you're doing</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => props.history.push(`/dashboard/admin`)}>Go to editor</Button>\n        </div>\n      )\n    },\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Data types</Typography>,\n      body: (\n        <CRUDList title={\"Types\"} type={{name: 'String', def: 'KV'}} data={props.types} \n          onSave={(obj : any) => { \n            console.log(obj) \n          }} />   \n      )\n    }\n  ]\n\n  return (\n    <div style={{flex: 1, marginTop: 12}}>\n      <div style={{display: 'flex', flexDirection: 'column', padding: 8}}>\n        <AccordionList items={settingItems} />\n\n        {/*<List>\n            {converters.map((x) => (\n              <ListItem style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {x.name}\n                {x.installed ? (<Typography>Installed</Typography>): (<Button onClick={() => {\n                  installConverter(x.id)\n                }} color=\"primary\" variant=\"contained\">Install</Button>)}\n              </ListItem>\n            ))}\n              </List>*/}\n    \n      </div>\n      \n    </div>\n  );\n}\n\nexport default connect((state : any) => ({\n  types: state.dashboard.types,\n  stores: state.admin.stores,\n}), (dispatch: any) => ({\n  getStores: () => dispatch(getStores()),\n  addStore: (store : any) => dispatch(addStore(store)),\n  updateStore: (id : any, store : any) => dispatch(updateStore(id, store)),\n  deleteStore: (id : any) => dispatch(deleteStore(id))\n}))(Settings)","/home/workhub/work/React-WorkerHub/src/views/Admin/index.tsx",["448"],"/home/workhub/work/React-WorkerHub/src/views/Login/index.tsx",["449","450","451","452"],"import React from 'react';\n\nimport {\n    TextField,\n    Button,\n    InputAdornment,\n    Paper,\n    Typography,\n    Divider\n} from '@material-ui/core'\n\nimport isElectron from 'is-electron';\nimport { useMutation } from '@apollo/client';\nimport { getNodeConf, login, setToken } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport HubSetup from './hub-setup'\nimport WorkhubLogo from '../../assets/teal.png'\n\nimport './index.css';\n\n\nexport interface LoginProps {\n    getNodeConf: Function;\n    setToken: Function;\n    history: any;\n}\n\nconst Login : React.FC<LoginProps> = (props) => {\n    const [ error, setError ] = React.useState<boolean>(false);\n\n    const [ workhub, setWorkhub ] = React.useState(localStorage.getItem('workhub-api'))\n    const [ username, setUsername ] = React.useState('')\n    const [ password, setPassword ] = React.useState('')\n\n\n    const tryLogin = () => {\n        login(username, password).then((r) => {\n            console.log(r)\n            if(r.token){\n                props.getNodeConf()\n                props.setToken(r.token)\n                props.history.push('/dashboard')\n            }else if(r.error){\n                setError(r.error)\n            }\n        })\n    }\n\n    const renderLogin = () => {\n        return (\n            <div className=\"login-view\">\n                <div className=\"image-banner\">\n           \n                </div>\n                <Paper style={{display: 'flex', flex: 0.3, flexDirection: 'column', padding: 8}}>\n                    <div style={{display: 'flex', alignItems: 'center', paddingBottom: 8}}>\n                        <img style={{height: 70, marginRight: 12}} src={WorkhubLogo} />\n                        <Typography style={{color: 'teal'}} variant=\"h4\">WorkHub</Typography>\n    \n                    </div>\n                    <Divider style={{marginBottom: 22}} />\n    \n                {isElectron() && (\n                    <TextField  \n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">.workhub.services</InputAdornment>\n                        }}\n                        disabled\n                        margin=\"normal\"\n                        value={workhub}\n                        onChange={e => {\n                            setWorkhub(e.target.value)\n                            localStorage.setItem('workhub-api', e.target.value)\n                        }}\n                        label=\"Workhub URL\"\n                        />\n                )}\n                <TextField \n                    margin=\"normal\"\n                    error={error}\n                    label=\"Username\" \n                    value={username} \n                    onChange={(e) => setUsername(e.target.value)}/>\n                <TextField \n                    margin=\"normal\"\n                    error={error}\n                    label=\"Password\" \n                    type=\"password\" \n                    value={password} \n                    onKeyDown={(e) => {if(e.keyCode == 13) {tryLogin()}}}\n                    onChange={(e) => setPassword(e.target.value)}/>\n                <Button \n                    onClick={tryLogin}\n                    style={{marginTop: 33}} \n                    color=\"primary\" \n                    variant=\"contained\">Login</Button>\n                </Paper>\n    \n            </div>\n        )\n    }\n\n    return renderLogin() /*isElectron() && (!workhub || workhub.length < 1) ? (\n        <HubSetup onHub={(url) => {\n            setWorkhub(url)  \n        }}/>\n    ) : renderLogin()*/\n\n   \n}\n\nexport default connect(null, (dispatch : any) => ({\n    setToken: (token : string) => dispatch(setToken(token)),\n    getNodeConf: () => dispatch(getNodeConf())\n}))(Login)",["453","454"],"/home/workhub/work/React-WorkerHub/src/views/Login/hub-setup.tsx",["455"],"import React from 'react';\n\nimport {\n    TextField,\n    InputAdornment,\n    Typography,\n    Button\n} from '@material-ui/core'\n\nimport { withRouter } from 'react-router-dom';\nimport { withGraph } from '../../graph';\n\nimport './hub-setup.css';\n\nconst graph = withGraph();\n\nexport interface HubSetupProps {\n    history: any;\n    onHub?: Function;\n}\n\nconst HubSetup : React.FC<HubSetupProps> = (props) => {\n    const [ hubUrl, setHubUrl ] = React.useState<string>(localStorage.getItem('workhub-api') || '')\n\n    const setURL = (url :string) => {\n        graph.setURL(`https://${url}.workhub.services/graphql`)\n        props.history.push('/')\n    }\n\n    return (\n        <div className=\"hub-setup\">\n            <div className=\"hub-setup__header\">\n                <Typography variant=\"h4\" style={{fontWeight: 'bold'}}>Welcome to workhub</Typography>\n                <Typography variant=\"subtitle1\">Enter your hub url below</Typography>\n            </div>\n            <div className=\"hub-box\">\n                <TextField \n                    placeholder=\"Hub URL\"\n                    value={hubUrl}\n                    onKeyDown={(e) => {\n                        if(e.keyCode == 13){\n                            setURL(hubUrl)\n                        }\n                    }}\n                    onChange={e => {\n                        setHubUrl(e.target.value)\n                        localStorage.setItem('workhub-api', e.target.value)\n                    }}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">.workhub.services</InputAdornment>\n                    }}/>\n                <div className=\"hub-actions\">\n                    <Button onClick={() => {\n                        if(props.onHub) props.onHub(hubUrl)\n                        setURL(hubUrl)\n                    }} disabled={!hubUrl || hubUrl.length < 1} color=\"primary\" variant=\"contained\">\n                        Next\n                    </Button>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default withRouter(HubSetup)","/home/workhub/work/React-WorkerHub/src/tabs/project/team.tsx",[],["456","457"],"/home/workhub/work/React-WorkerHub/src/actions/teamActions.ts",[],["458","459"],"/home/workhub/work/React-WorkerHub/src/reducers/projects.js",[],"/home/workhub/work/React-WorkerHub/src/nodes/MongoDBServerNode.tsx",["460","461"],"import React from 'react'\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\n\nexport const type = 'mongo server'\n\nconst _modal = (props) => {\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField label=\"Connection Name\" value={props.node.data.label} onChange={(e) => {\n            props.editor.updateNode(props.node.id, (node) => {\n                node.data.label = e.target.value;\n                return node;\n            })\n        }}/>\n        <TextField label=\"Host IP:Host Port\" value={props.node.data.host} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.host = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Database Name\" value={props.node.data.db} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.db = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Username\" value={props.node.data.username} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.username = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Password\" type=\"password\" value={props.node.data.password} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.password = e.target.value;\n            return node;\n          })\n        }} />\n    </div>\n  )\n}\n\nexport const modal = withEditor(_modal)\n\nexport interface NodeProps{\n  editor: any;\n  id: any;\n  data: any;\n}\n\nconst _node : React.FC<NodeProps> = (props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <span style={{fontSize: 11}}>MongoDB</span>\n        <span>{props.id && props.data.label || \"MongoDB Server\"}</span>\n     </div>\n    </NodeWrapper>\n    )\n}\n\nexport const node = withEditor(_node)","/home/workhub/work/React-WorkerHub/src/actions/authActions.ts",[],"/home/workhub/work/React-WorkerHub/src/actions/contactActions.ts",[],"/home/workhub/work/React-WorkerHub/src/tabs/project/files.tsx",["462","463","464","465"],"import React from 'react';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport {\n    Fab,\n    List,\n    ListItem\n} from '@material-ui/core';\n\nimport { useMutation } from '@apollo/client';\nimport { YContext } from '../../graph/yjs';\n\nimport { FileBrowser } from '@workerhive/react-ui';\n\nimport { attachFile } from '../../actions/fileActions';\nconst FileDialog = require('../../components/dialogs/file-dialog')\n\nexport interface FileTabProps {\n    y: any;\n    project: any;\n}\n\nexport const FileTab : React.FC<FileTabProps> = (props) => {\n\n    const [ dialogOpen, openDialog ] = React.useState(false)\n    const [ files, setFiles ] = React.useState([])\n\n    React.useEffect(() => {\n        if(props.y){\n            console.log(\"Y\", props.y.toJSON())\n            setFiles(props.y.toJSON()['attachments'] || [])\n        }\n    }, [props.y])\n\n    return (\n        <div style={{flex: 1, display: 'flex', position: 'relative'}}>\n            <FileBrowser loading={false} title={props.project.name} files={files}/>\n            <FileDialog onAttach={(selected : any) => {\n                for(var k in selected){\n                    attachFile(props.project.id, k);\n                    \n                }\n    \n            }} open={dialogOpen} onClose={() => openDialog(false)} />\n            <Fab style={{position: 'absolute', bottom: 12, right: 12}} color=\"primary\" onClick={() => openDialog(true)}>\n                <Add />\n            </Fab>\n\n        </div>\n    )\n}",["466","467"],"/home/workhub/work/React-WorkerHub/src/actions/projectActions.ts",[],["468","469"],"/home/workhub/work/React-WorkerHub/src/graph/index.ts",["470","471","472"],"import React from 'react';\n\nimport { ApolloClient,InMemoryCache, NormalizedCacheObject } from '@apollo/client';\nimport { createUploadLink } from 'apollo-upload-client'\nimport isElectron from 'is-electron';\nlet settings;\n/*if(isElectron()){\n  settings = require('electron-settings')\n} */\n\nlet client : ApolloClient<NormalizedCacheObject>;\n\nexport const withGraph = () => {\n  \n\n  const getURL = () => {\n    let platform = 'web';\n\n    if(!process.env.NODE_ENV || process.env.NODE_ENV === 'development') platform = 'dev';\n    if(isElectron()) platform = 'electron';\n\n    if(window.location.hostname == \"localhost\" && localStorage.getItem('workhub-api')) platform = 'dev';\n\n    switch(platform){\n      case 'web':\n        return '/graphql';\n      case 'dev':\n        return `http://localhost:4002/graphql`\n      case 'electron':\n        return `https://${localStorage.getItem('workhub-api')}.workhub.services/graphql`\n    }\n  }\n\n  let url = getURL()\n\n\n  const startClient = () => {\n    let url = getURL();\n    console.log(url)\n    return new ApolloClient({\n      link: createUploadLink({\n        uri: url\n      }),\n      cache: new InMemoryCache({\n        addTypename: false\n      })\n    })\n  }\n\n  const setURL = (_url : string) => {\n    console.log(\"Set url\", _url)\n    url = _url\n    client = startClient()\n\n    console.log(client, url)\n  }\n\n  if(url) client = startClient();\n\n  return {\n    getClient: () => client,\n    setURL: setURL\n  };\n}\n\n\nconst Graph = () => {\n\n  const getURL = () => {\n    let platform = 'web';\n\n    if(!process.env.NODE_ENV || process.env.NODE_ENV === 'development') platform = 'dev';\n    if(isElectron()) platform = 'electron';\n\n    switch(platform){\n      case 'web':\n        return '/graphql';\n      case 'dev':\n        return 'https://thetechcompany.workhub.services/graphql'\n      case 'electron':\n        return `https://${localStorage.getItem('workhub-api')}.workhub.services/graphql`\n    }\n  }\n\n  try{\n    return new ApolloClient({\n      link: createUploadLink({\n        uri: getURL()\n      }),\n      cache: new InMemoryCache({\n        addTypename: false\n      })\n    })\n  }catch(e){\n    console.log(e)\n  }\n}\n\nexport default Graph;",["473","474"],"/home/workhub/work/React-WorkerHub/src/actions/knowledgeActions.ts",[],["475","476"],"/home/workhub/work/React-WorkerHub/src/views/Dashboard/index.tsx",[],"/home/workhub/work/React-WorkerHub/src/nodes/ProjectItemNode.tsx",["477","478","479","480","481","482","483","484","485","486","487"],"import React from 'react'\n\nimport {\n  Autocomplete\n} from '@material-ui/lab';\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\n\nimport { getColumns, getTables, getViews } from '../actions/adminActions'\nimport async from 'async';\nimport moment from 'moment';\nimport './MSSQLNode.css';\n\nexport const type = 'mssqlAdapter'\n\nexport const modal = withEditor((props) => {\n\n  const [ tables, setTables ] = React.useState([])\n\n  const [ table, setTable ] = React.useState(null)\n\n  const [ columns, setColumns ] = React.useState([])\n\n  React.useEffect(() => {\n    let source = getSource();\n    getTables(source.id).then((tables) => {\n      setTables(tables)\n    })\n    console.log(getSource())\n  }, [])\n\n  const getSource = () => {\n      let links = props.editor.links.filter((a) => a.source == props.node.id)\n      if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.target)[0])\n        if(nodes && nodes.length > 0){\n            return nodes[0]\n        }\n      }\n  }\n\n  const renderFields = () => {\n    let links = props.editor.links.filter((a) => a.target == props.node.id)\n    if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.source)[0])\n        if(nodes && nodes.length > 0){\n            let type = nodes[0].data.typedef;\n            let ret : Array<any> = []\n            for(var k in type){\n                let changeKey = k\n                ret.push(\n                <div style={{marginTop: 4, display: 'flex', alignItems: 'center'}}>\n                    <div style={{width: 100}}>\n                      {k}\n                    </div>: \n                    <select \n                      value={props.node && props.node.data && props.node.data.provides && props.node.data.provides[k]}\n                      onChange={(e) => {\n                    \n                        props.editor.updateNode(props.node.id, (node) => {\n                          if(!node.data.provides) node.data.provides = {}\n                          console.log(e.target.value, \" provides \", changeKey)\n                          node.data.provides[changeKey] = e.target.value;\n                          return node;\n                        })\n                      }}>\n                      {(props.node.data.availableColumns || []).concat([{name: \"N/A\"}]).map((x) => (\n                        <option value={x.name}>\n                          {x.name}\n                        </option>))}\n                      </select>\n                </div>\n                )\n            }\n            return ret;\n        }\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField disabled error={!getSource()} label=\"Connection Name\" value={getSource().data.label}/>\n\n        <Autocomplete \n          value={props.node.data.table}\n          onChange={(e, newVal) => {\n            console.log(e, newVal)\n            if(newVal && newVal.name){\n           // setTable(newVal)\n              props.editor.updateNode(props.node.id, (node) => {\n                node.data.table = newVal;\n                return node;\n              })\n              getColumns(getSource().id, newVal.name).then((r) => {\n                console.log(\"Searching for cols\", newVal.name, r)\n                props.editor.updateNode(props.node.id, (node) => {\n                  node.data.availableColumns = r;\n                  node.data.provides = {}\n                  return node;\n                })\n              })\n            }\n          }}\n          options={tables}\n          getOptionLabel={(x) => x.name}\n          autoHighlight\n          renderInput={(params) => (\n            <TextField {...params} margin=\"normal\" label=\"Table\" />\n          )} />\n        <div style={{marginTop: 8}}>\n        {renderFields()}\n        </div>\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n        <textarea \n          onChange={(e) => props.editor.updateNode(props.id, (node) => {return {data: {label: e.target.value}}})}\n          value={props.data && props.data.label} \n          rows={4}\n          placeholder=\"Project Title\" />\n        <div style={{display: 'flex'}}>\n            {props.data && props.data.dueDate && \"ETA:\"} {props.data && moment(new Date(props.data.dueDate * 1000)).format('DD/MM/yyyy')}\n        </div>\n    </NodeWrapper>\n    )\n})",["488","489"],"/home/workhub/work/React-WorkerHub/src/actions/adminActions.ts",[],"/home/workhub/work/React-WorkerHub/src/actions/types.ts",[],"/home/workhub/work/React-WorkerHub/src/actions/fileActions.ts",[],"/home/workhub/work/React-WorkerHub/src/nodes/TypeDefNode.tsx",["490","491"],"import React from 'react'\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\nimport  ReactJson from 'react-json-view'\nexport const type = 'typeDef'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{flex: 1}}>\n      <ReactJson src={props.node.data.typedef} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"type-def\">\n        {props.id && props.data.label || \"Type Def\"}\n     </div>\n    </NodeWrapper>\n    )\n})","/home/workhub/work/React-WorkerHub/src/reducers/knowledge.js",[],["492","493"],"/home/workhub/work/React-WorkerHub/src/tabs/project/settings.tsx",[],"/home/workhub/work/React-WorkerHub/src/nodes/MSSQLServerNode.tsx",["494","495"],"import React from 'react'\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\n\nexport const type = 'mssql server'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField label=\"Connection Name\" value={props.node.data.label} onChange={(e) => {\n            props.editor.updateNode(props.node.id, (node) => {\n                node.data.label = e.target.value;\n                return node;\n            })\n        }}/>\n        <TextField label=\"Host IP:Host Port\" value={props.node.data.host} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.host = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Database Name\" value={props.node.data.db} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.db = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Username\" value={props.node.data.username} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.username = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Password\" type=\"password\" value={props.node.data.password} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.password = e.target.value;\n            return node;\n          })\n        }} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <span style={{fontSize: 11}}>MSSQL</span>\n        <span>{props.id && props.data.label || \"MSSQL Server\"}</span>\n     </div>\n    </NodeWrapper>\n    )\n})",["496","497"],"/home/workhub/work/React-WorkerHub/src/graph/yjs/context.tsx",[],"/home/workhub/work/React-WorkerHub/src/actions/calendarActions.ts",[],"/home/workhub/work/React-WorkerHub/src/App.tsx",["498"],"/home/workhub/work/React-WorkerHub/src/actions/equipmentActions.ts",[],["499","500"],"/home/workhub/work/React-WorkerHub/src/graph/ipfs/p2p-stack.js",["501"],"import MPLEX from 'libp2p-mplex';\nimport {NOISE} from 'libp2p-noise';\nimport Protector, {generate} from 'libp2p/src/pnet';\nimport WebRTCStar from 'libp2p-webrtc-star'\n\nconst transportKey = WebRTCStar.prototype[Symbol.toStringTag]\n\nexport const P2PStack = (swarmKey) => ({\n    modules: {\n        transport: [WebRTCStar],\n        streamMuxer: [MPLEX],\n        connEncryption: [NOISE],\n        connProtector: new Protector(Buffer.from(swarmKey))\n    },\n    config: {\n        transport: {\n            [transportKey]: {\n                enabled: true\n            }\n        },\n        peerDiscovery: {\n            autoDial: true,\n            [WebRTCStar.tag]: {\n                enabled: true\n            }\n        }\n    }\n})",["502","503"],"/home/workhub/work/React-WorkerHub/src/nodes/MSSQLNode.tsx",["504","505","506","507","508","509","510","511","512","513","514","515","516"],"import React from 'react'\n\nimport {\n  Autocomplete\n} from '@material-ui/lab';\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\n\nimport { getColumns, getTables, getViews } from '../actions/adminActions'\nimport async from 'async';\nimport './MSSQLNode.css';\n\nexport const type = 'mssqlAdapter'\n\nexport const modal = withEditor((props) => {\n\n  const [ tables, setTables ] = React.useState([])\n\n  const [ table, setTable ] = React.useState(null)\n\n  const [ columns, setColumns ] = React.useState([])\n\n  React.useEffect(() => {\n    let source = getSource();\n    getTables(source.id).then((tables) => {\n      setTables(tables)\n    })\n    console.log(getSource())\n  }, [])\n\n  const getSource = () => {\n      let links = props.editor.links.filter((a) => a.source == props.node.id)\n      if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.target)[0])\n        if(nodes && nodes.length > 0){\n            return nodes[0]\n        }\n      }\n  }\n\n  const renderFields = () => {\n    let links = props.editor.links.filter((a) => a.target == props.node.id)\n    if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.source)[0])\n        if(nodes && nodes.length > 0){\n            let type = nodes[0].data.typedef;\n            let ret : Array<any> = []\n            for(var k in type){\n                let changeKey = k\n                ret.push(\n                <div style={{marginTop: 4, display: 'flex', alignItems: 'center'}}>\n                    <div style={{width: 100}}>\n                      {k}\n                    </div>: \n                    <select \n                      value={props.node && props.node.data && props.node.data.provides && props.node.data.provides[k]}\n                      onChange={(e) => {\n                    \n                        props.editor.updateNode(props.node.id, (node) => {\n                          if(!node.data.provides) node.data.provides = {}\n                          console.log(e.target.value, \" provides \", changeKey)\n                          node.data.provides[changeKey] = e.target.value;\n                          return node;\n                        })\n                      }}>\n                      {(props.node.data.availableColumns || []).concat([{name: \"N/A\"}]).map((x) => (\n                        <option value={x.name}>\n                          {x.name}\n                        </option>))}\n                      </select>\n                </div>\n                )\n            }\n            return ret;\n        }\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField disabled error={!getSource()} label=\"Connection Name\" value={getSource().data.label}/>\n\n        <Autocomplete \n          value={props.node.data.table}\n          onChange={(e, newVal) => {\n            console.log(e, newVal)\n            if(newVal && newVal.name){\n           // setTable(newVal)\n              props.editor.updateNode(props.node.id, (node) => {\n                node.data.table = newVal;\n                return node;\n              })\n              getColumns(getSource().id, newVal.name).then((r) => {\n                console.log(\"Searching for cols\", newVal.name, r)\n                props.editor.updateNode(props.node.id, (node) => {\n                  node.data.availableColumns = r;\n                  node.data.provides = {}\n                  return node;\n                })\n              })\n            }\n          }}\n          options={tables}\n          getOptionLabel={(x) => x.name}\n          autoHighlight\n          renderInput={(params) => (\n            <TextField {...params} margin=\"normal\" label=\"Table\" />\n          )} />\n        <div style={{marginTop: 8}}>\n        {renderFields()}\n        </div>\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <div className=\"adapter-header\">\n        {props.id && props.data.label || \"MSSQL Adapter\"}\n        </div>\n        <div className=\"adapter-info\">\n          {props.id && props.data && props.data.table && props.data.table.name}\n        </div>\n     </div>\n    </NodeWrapper>\n    )\n})","/home/workhub/work/React-WorkerHub/src/tabs/project/calendar.tsx",["517","518","519","520"],"import React from 'react';\nimport {YContext} from '../../graph/yjs';\nimport { connect } from 'react-redux';\nimport { setStatus } from '../../actions/authActions';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport * as Y from 'yjs';\nimport './calendar.css';\n\nlet yDoc : any;\n\nconst localizer = momentLocalizer(moment)\n\nexport interface CalendarTabProps{\n  project: any;\n}\n\nconst CalendarTab : React.FC<CalendarTabProps> = (props) => {\n    const {ydoc} = React.useContext(YContext);\n\n    const [ bookings, setBookings ] = React.useState([])\n    const [ nodes, setNodes ] = React.useState([])\n    const [ doc, setDoc ] = React.useState<Y.Map<any>>()\n    const [ docProject, setProject ] = React.useState<any>({})\n\n    const observer = () => {\n        if(yDoc){\n          let obj = yDoc.toJSON()\n          console.log(\"OBSERVE\", obj)\n          if(obj.nodes != null){\n            setNodes(obj.nodes.map((x : any) => Object.assign({}, x)))\n          }\n        \n        }\n      }\n  \n      React.useEffect(() => {\n        console.log(\"YDC\", props)\n        if(props.project && ydoc && props.project.id != docProject.id){\n          if(doc) doc.unobserve(observer);\n  \n          console.log(\"Setting up YDOC\")\n          let _doc = ydoc.getMap(`plan-${props.project.id}`)\n          yDoc = _doc;\n            setDoc(_doc)\n          _doc.observe(observer)\n  \n          setProject(props.project)\n          \n          let init = _doc.toJSON();\n  \n          if(init.nodes != null) setNodes(init.nodes)\n        }\n      }, [props.project, doc])\n\n    return (\n        <div className=\"calendar-tab\">\n            <Calendar\n                localizer={localizer}\n                events={nodes.filter((a : any) => a.data && a.data.dueDate).map((x : any) => ({\n                    id: x.id,\n                    title: x.data.label,\n                    allDay: false,\n                    start: new Date(((x.data.dueDate)*1000) -( 5 * 1000 * 60)),\n                    end: new Date((x.data.dueDate)* 1000)\n                }))}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ flex: 1 }} />\n        </div>\n    )\n}\n\nexport default connect(null, (dispatch : any) => ({\n  setStatus: (status : any) => dispatch(setStatus(status))\n}))(CalendarTab)","/home/workhub/work/React-WorkerHub/src/components/dialogs/calendar-dialog/index.tsx",["521","522","523","524","525","526","527","528","529"],"import React from 'react';\nimport * as Y from 'yjs'\nimport { \n    Dialog,\n    DialogActions,\n    DialogTitle,\n    DialogContent,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    TextField,\n    InputAdornment,\n    Tabs,\n    Tab,\n    List,\n    ListItem,\n    Divider\n} from '@material-ui/core'\n\nimport {\n    Autocomplete\n} from '@material-ui/lab'\n\nimport {\n    Search\n} from '@material-ui/icons';\n\nimport { addBooking } from '../../../actions/calendarActions';\nimport { setStatus } from '../../../actions/authActions';\nimport { KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport { connect } from 'react-redux';\nimport {YContext} from '../../../graph/yjs';\n\nimport moment, { Moment } from 'moment';\n\nlet yDoc; \n\nexport interface CalendarDialogProps {\n    onClose: (e?: any) => void\n    open: boolean\n    projects: any;\n    team: any;\n    equipment: any;\n    y: any;\n}\n\nfunction CalendarDialog(props : CalendarDialogProps){\n    const {ydoc} = React.useContext(YContext)\n    const [ step, setStep ] = React.useState(0)\n    const [ searchTab, setSearchTab ] = React.useState(0)\n    const [ search, setSearch ] = React.useState<string>()\n\n    const [ date, setDate ] = React.useState<Moment>();\n    const [ allDay, setAllDay ] = React.useState(false);\n    const [ startTime, setStart ] = React.useState<Moment>()\n    const [ endTime, setEnd ] = React.useState<Moment>()\n    const [ project, setProject ] = React.useState(null)\n\n    const [ selectedItems, setSelectedItems ] = React.useState({})\n\n    React.useEffect(() => {\n       yDoc = ydoc.getMap('calendar')    \n    }, [])\n\n    const stepButton = () => {\n        if(step == 0){\n            setStep(1)\n        }else{\n            //Book items\n            let equipment : Array<any> = [];\n            let team : Array<any> = [];\n\n            for(var k in selectedItems){\n                if(selectedItems[k].selected){\n                    switch(selectedItems[k].type){\n                        case 'team':\n                            team.push(k)\n                            break\n                        case 'equipment':\n                            equipment.push(k)\n                            break;\n                    }\n                }\n            }\n\n            let sTime : Moment = moment();\n            let eTime :Moment = moment();\n            if(startTime){\n                sTime = moment(date)\n                sTime.set('hour', startTime.get('hour'))\n                sTime.set('minute', startTime.get('minute'))\n\n            }\n            if(endTime){\n                eTime = moment(date)\n            \n                eTime.set('hour', endTime.get('hour'))\n                eTime.set('minute', endTime.get('minute'))\n            }\n\n\n            let booking = new Y.Map();\n            let _booking = {\n                date: date!.valueOf() / 1000,\n                project: project,\n                startTime: `${sTime.valueOf() / 1000}`,\n                endTime: `${eTime.valueOf() / 1000}`,\n                allDay: allDay,\n                items: {\n                    team: team,\n                    equipment: equipment\n                }\n            }\n            \n            booking.set('date', _booking.date)\n            booking.set('project', _booking.project)\n\n            if(yDoc){\n                //yDoc.set('bookings', [])\n                console.log(\"Inserting into yjs\")\n                let obj = yDoc.toJSON()\n                let bookings = obj.bookings || [];\n                console.log(bookings)\n                bookings.push(_booking)\n                yDoc.set('bookings', bookings)\n                console.log(yDoc.toJSON())\n            }\n\n            \n\n            /*props.addBooking({\n                    allDay: allDay,\n                    startTime: startTime && parseInt(sTime.valueOf() / 1000),\n                    endTime: endTime && parseInt(eTime.valueOf() / 1000),\n                    date: date.valueOf() / 1000\n                },\n                project.id,\n                {\n                    equipment: equipment,\n                    team: team\n                })*/\n                props.onClose()\n        }\n    }\n\n    \n    const renderStep = () => {\n        switch(step){\n            case 0:\n                return (\n                <>\n                <Autocomplete \n                    value={project}\n                    onChange={(e, newVal) => setProject(newVal)}\n                    options={props.projects}\n                    getOptionLabel={(project : any) => project!.name} \n                    renderInput={(params) => {\n                        return (\n                            <TextField {...params} label=\"Project\"  />\n                        )\n                    }}/>\n                <KeyboardDatePicker \n                    value={date}\n                    format=\"DD/MM/yyyy\"\n                    onChange={(e : any, newVal) => setDate(e)}\n                    margin=\"normal\" \n                    label=\"Date\" \n                    variant=\"inline\" ></KeyboardDatePicker>\n                <FormControlLabel \n                    control={<Checkbox checked={allDay} onChange={(e) => {\n                        setAllDay(e.target.checked)\n                    }}/>}\n                    label=\"All day\" />\n                {!allDay && <div style={{display: 'flex', marginTop: 8}}>\n                    <KeyboardTimePicker \n                        value={startTime}\n                        onChange={(e : any) => setStart(e)}\n                        label=\"Start Time\"\n                        fullWidth \n                        style={{marginRight: 4}} \n                        variant=\"inline\" ></KeyboardTimePicker>\n                    <KeyboardTimePicker \n                        value={endTime}\n                        onChange={(e : any) => setEnd(e)}\n                        label=\"End Time\"\n                        fullWidth \n                        style={{marginLeft: 4}} \n                        variant=\"inline\" ></KeyboardTimePicker>\n                </div>}\n                </>\n                )\n            case 1:\n                return (\n                    \n                        <List>\n                            {(searchTab == 0 ? props.team : props.equipment).filter((a) => !search || a.name.toLowerCase().indexOf(search.toLowerCase()) > -1).map((x) => (\n                                <ListItem>\n                                    <Checkbox checked={selectedItems[x.id] && selectedItems[x.id].selected || false} onChange={(e) => {\n                                        let s = Object.assign({}, selectedItems);\n                                        s[x.id] = {\n                                            selected: e.target.checked,\n                                            type: searchTab == 0 ? \"team\" :\"equipment\"\n                                        } \n                                        console.log(s)\n                                        setSelectedItems(s)  \n                                    }}/>\n                                    {x.name}\n                                </ListItem>\n                            ))}\n                        </List>\n                    \n                )\n            default:\n                return null;\n        }\n    }\n\n    const renderStepTitle = () => {\n        switch(step){\n            case 1:\n                return (\n                    <>\n                    <TextField\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)} fullWidth InputProps={{\n                        startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment> \n                    }} label=\"Search\" />\n                    <Tabs value={searchTab} onChange={(e, newVal) => {\n                        if(newVal !== searchTab) setSearch('')\n                        setSearchTab(newVal)\n                    }}>\n                        <Tab label=\"Team\" />\n                        <Tab label=\"Equipment\" />\n                    </Tabs>\n                    <Divider />\n                    \n                    </>\n                )\n            case 0:\n                return \"Create a booking\"\n            default:\n                return null\n        }\n    }\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>\n                {renderStepTitle()}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', minHeight: 250}}>\n                {renderStep()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={`${step}` == \"0\" ? props.onClose : () => setStep(0)}>{`${step}` == \"0\" ? \"Cancel\" : \"Back\"}</Button>\n                <Button color=\"primary\" onClick={stepButton} variant=\"contained\">{`${step}` == \"1\" ? \"Book\" : \"Next\"}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default connect((state : any) => ({\n    projects: state.projects.list,\n    team: state.team.list,\n    equipment: state.equipment.list\n}), (dispatch : any) => ({\n    addBooking: (time : any, project : any, booking : any) => dispatch(addBooking(time, project, booking)),\n    setStatus: (status : any) => dispatch(setStatus(status))\n}))(CalendarDialog)","/home/workhub/work/React-WorkerHub/src/configureStore.ts",["530"],"/home/workhub/work/React-WorkerHub/src/tabs/project/index.tsx",[],"/home/workhub/work/React-WorkerHub/src/tabs/project/plan.tsx",["531","532","533","534","535"],"/home/workhub/work/React-WorkerHub/src/components/plan/tree/branch.tsx",["536"],"import React from 'react';\n\nimport {\n    Typography,\n    IconButton\n} from '@material-ui/core'\n\nimport {\n    CheckCircle,\n    Publish,\n    Edit,\n    Add\n} from '@material-ui/icons'\n\nimport {\n    TreeItem\n} from \"@material-ui/lab\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './branch.css';\n\nconst useBranchStyles = makeStyles((theme) => ({\n    treeActions: {\n        opacity: 0,\n    },\n    labelRoot: {\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(1, 0),\n    },\n\n    labelText: {\n        flex: 1,\n        height: 50,\n        display: 'flex',\n        alignItems: 'center'\n    },\n    labelIcon: {\n        marginRight: 8\n    }\n}))\n\nexport default function Branch (props){\n    const classes = useBranchStyles()\n    const { status, ...other } = props;\n\n    const branchActions = [\n        {\n            icon: <Edit />,\n            action: () => {\n                if(props.onEdit)props.onEdit()\n            }\n        },\n        {\n            icon: <Add />,\n            action: () => {\n                if(props.onAdd)props.onAdd();\n            }\n        }\n    ]\n\n    const renderIcon = () => {\n        switch(props.data.status){\n            case 'COMPLETE':\n                return <CheckCircle style={{color: 'green'}}/>\n            case 'IN PROGRESS':\n                return <Publish style={{color: 'orange'}} />\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <TreeItem\n            className={['tree-branch']}\n            label={\n                <div className={'labelRoot'}>\n                    <div className={'labelIcon'}>\n                    {renderIcon()}\n                    </div>\n                   <Typography variant=\"subtitle1\" className={'labelText'}>\n                        {props.data.label} : ({props.childs.length}) children ({props.total}) tasks\n                    </Typography> \n                    <div className={'treeActions'}>\n                        {branchActions.map((x) => (\n                            <IconButton onClick={(e) => {\n                                e.stopPropagation()\n                                x.action()\n                            }}>\n                                {x.icon}\n                            </IconButton>\n                        ))}\n                    </div>\n                </div>\n            }\n            {...other} />\n    )\n}","/home/workhub/work/React-WorkerHub/src/components/plan/tree/index.tsx",["537","538","539","540","541","542"],{"ruleId":"543","severity":1,"message":"544","line":17,"column":13,"nodeType":"545","messageId":"546","endLine":17,"endColumn":15},{"ruleId":"547","severity":1,"message":"548","line":54,"column":17,"nodeType":"549","messageId":"550","endLine":54,"endColumn":21},{"ruleId":"551","severity":1,"message":"552","line":54,"column":24,"nodeType":"553","endLine":54,"endColumn":28},{"ruleId":"554","replacedBy":"555"},{"ruleId":"556","replacedBy":"557"},{"ruleId":"558","severity":1,"message":"559","line":4,"column":3,"nodeType":"549","messageId":"560","endLine":4,"endColumn":9},{"ruleId":"558","severity":1,"message":"561","line":5,"column":3,"nodeType":"549","messageId":"560","endLine":5,"endColumn":7},{"ruleId":"558","severity":1,"message":"562","line":6,"column":3,"nodeType":"549","messageId":"560","endLine":6,"endColumn":10},{"ruleId":"558","severity":1,"message":"563","line":7,"column":3,"nodeType":"549","messageId":"560","endLine":7,"endColumn":11},{"ruleId":"558","severity":1,"message":"564","line":8,"column":3,"nodeType":"549","messageId":"560","endLine":8,"endColumn":8},{"ruleId":"558","severity":1,"message":"565","line":9,"column":3,"nodeType":"549","messageId":"560","endLine":9,"endColumn":13},{"ruleId":"558","severity":1,"message":"566","line":15,"column":3,"nodeType":"549","messageId":"560","endLine":15,"endColumn":16},{"ruleId":"558","severity":1,"message":"567","line":16,"column":3,"nodeType":"549","messageId":"560","endLine":16,"endColumn":14},{"ruleId":"558","severity":1,"message":"568","line":17,"column":3,"nodeType":"549","messageId":"560","endLine":17,"endColumn":12},{"ruleId":"558","severity":1,"message":"569","line":18,"column":3,"nodeType":"549","messageId":"560","endLine":18,"endColumn":16},{"ruleId":"558","severity":1,"message":"570","line":19,"column":3,"nodeType":"549","messageId":"560","endLine":19,"endColumn":20},{"ruleId":"558","severity":1,"message":"571","line":20,"column":3,"nodeType":"549","messageId":"560","endLine":20,"endColumn":17},{"ruleId":"558","severity":1,"message":"572","line":21,"column":3,"nodeType":"549","messageId":"560","endLine":21,"endColumn":14},{"ruleId":"558","severity":1,"message":"573","line":22,"column":3,"nodeType":"549","messageId":"560","endLine":22,"endColumn":11},{"ruleId":"558","severity":1,"message":"574","line":43,"column":21,"nodeType":"549","messageId":"560","endLine":43,"endColumn":32},{"ruleId":"558","severity":1,"message":"575","line":46,"column":8,"nodeType":"549","messageId":"560","endLine":46,"endColumn":16},{"ruleId":"558","severity":1,"message":"576","line":48,"column":8,"nodeType":"549","messageId":"560","endLine":48,"endColumn":19},{"ruleId":"551","severity":1,"message":"577","line":60,"column":19,"nodeType":"578","endLine":67,"endColumn":4},{"ruleId":"551","severity":1,"message":"579","line":67,"column":6,"nodeType":"580","endLine":67,"endColumn":8,"suggestions":"581"},{"ruleId":"558","severity":1,"message":"582","line":69,"column":9,"nodeType":"549","messageId":"560","endLine":69,"endColumn":20},{"ruleId":"583","severity":1,"message":"584","line":70,"column":5,"nodeType":"585","messageId":"586","endLine":84,"endColumn":6},{"ruleId":"558","severity":1,"message":"587","line":87,"column":9,"nodeType":"549","messageId":"560","endLine":87,"endColumn":26},{"ruleId":"554","replacedBy":"588"},{"ruleId":"556","replacedBy":"589"},{"ruleId":"558","severity":1,"message":"559","line":4,"column":5,"nodeType":"549","messageId":"560","endLine":4,"endColumn":11},{"ruleId":"558","severity":1,"message":"566","line":15,"column":5,"nodeType":"549","messageId":"560","endLine":15,"endColumn":18},{"ruleId":"590","severity":1,"message":"591","line":87,"column":12,"nodeType":"592","endLine":87,"endColumn":90},{"ruleId":"543","severity":1,"message":"544","line":99,"column":108,"nodeType":"545","messageId":"546","endLine":99,"endColumn":110},{"ruleId":"554","replacedBy":"593"},{"ruleId":"556","replacedBy":"594"},{"ruleId":"554","replacedBy":"595"},{"ruleId":"556","replacedBy":"596"},{"ruleId":"554","replacedBy":"597"},{"ruleId":"556","replacedBy":"598"},{"ruleId":"558","severity":1,"message":"599","line":17,"column":10,"nodeType":"549","messageId":"560","endLine":17,"endColumn":17},{"ruleId":"590","severity":1,"message":"591","line":40,"column":25,"nodeType":"592","endLine":40,"endColumn":82},{"ruleId":"551","severity":1,"message":"577","line":56,"column":22,"nodeType":"578","endLine":69,"endColumn":6},{"ruleId":"551","severity":1,"message":"600","line":69,"column":8,"nodeType":"580","endLine":69,"endColumn":32,"suggestions":"601"},{"ruleId":"554","replacedBy":"602"},{"ruleId":"556","replacedBy":"603"},{"ruleId":"558","severity":1,"message":"604","line":20,"column":10,"nodeType":"549","messageId":"560","endLine":20,"endColumn":23},{"ruleId":"558","severity":1,"message":"605","line":25,"column":22,"nodeType":"549","messageId":"560","endLine":25,"endColumn":32},{"ruleId":"543","severity":1,"message":"544","line":58,"column":74,"nodeType":"545","messageId":"546","endLine":58,"endColumn":76},{"ruleId":"554","replacedBy":"606"},{"ruleId":"556","replacedBy":"607"},{"ruleId":"558","severity":1,"message":"608","line":12,"column":5,"nodeType":"549","messageId":"560","endLine":12,"endColumn":13},{"ruleId":"558","severity":1,"message":"609","line":27,"column":10,"nodeType":"549","messageId":"560","endLine":27,"endColumn":20},{"ruleId":"554","replacedBy":"610"},{"ruleId":"556","replacedBy":"611"},{"ruleId":"554","replacedBy":"612"},{"ruleId":"556","replacedBy":"613"},{"ruleId":"558","severity":1,"message":"565","line":13,"column":5,"nodeType":"549","messageId":"560","endLine":13,"endColumn":15},{"ruleId":"543","severity":1,"message":"614","line":34,"column":37,"nodeType":"545","messageId":"546","endLine":34,"endColumn":39},{"ruleId":"551","severity":1,"message":"600","line":37,"column":8,"nodeType":"580","endLine":37,"endColumn":20,"suggestions":"615"},{"ruleId":"554","replacedBy":"616"},{"ruleId":"556","replacedBy":"617"},{"ruleId":"618","severity":1,"message":"564","line":4,"column":3,"nodeType":"549","messageId":"560","endLine":4,"endColumn":8},{"ruleId":"618","severity":1,"message":"561","line":5,"column":3,"nodeType":"549","messageId":"560","endLine":5,"endColumn":7},{"ruleId":"551","severity":1,"message":"579","line":35,"column":6,"nodeType":"580","endLine":35,"endColumn":8,"suggestions":"619"},{"ruleId":"543","severity":1,"message":"544","line":66,"column":23,"nodeType":"545","messageId":"546","endLine":66,"endColumn":25},{"ruleId":"543","severity":1,"message":"544","line":96,"column":52,"nodeType":"545","messageId":"546","endLine":96,"endColumn":54},{"ruleId":"543","severity":1,"message":"544","line":97,"column":65,"nodeType":"545","messageId":"546","endLine":97,"endColumn":67},{"ruleId":"554","replacedBy":"555"},{"ruleId":"556","replacedBy":"557"},{"ruleId":"618","severity":1,"message":"564","line":4,"column":3,"nodeType":"549","messageId":"560","endLine":4,"endColumn":8},{"ruleId":"618","severity":1,"message":"561","line":6,"column":3,"nodeType":"549","messageId":"560","endLine":6,"endColumn":7},{"ruleId":"618","severity":1,"message":"620","line":20,"column":10,"nodeType":"549","messageId":"560","endLine":20,"endColumn":21},{"ruleId":"551","severity":1,"message":"579","line":43,"column":6,"nodeType":"580","endLine":43,"endColumn":8,"suggestions":"621"},{"ruleId":"554","replacedBy":"622"},{"ruleId":"556","replacedBy":"623"},{"ruleId":"618","severity":1,"message":"624","line":8,"column":5,"nodeType":"549","messageId":"560","endLine":8,"endColumn":13},{"ruleId":"618","severity":1,"message":"625","line":9,"column":5,"nodeType":"549","messageId":"560","endLine":9,"endColumn":13},{"ruleId":"618","severity":1,"message":"626","line":12,"column":8,"nodeType":"549","messageId":"560","endLine":12,"endColumn":14},{"ruleId":"618","severity":1,"message":"627","line":18,"column":10,"nodeType":"549","messageId":"560","endLine":18,"endColumn":20},{"ruleId":"618","severity":1,"message":"628","line":18,"column":22,"nodeType":"549","messageId":"560","endLine":18,"endColumn":32},{"ruleId":"618","severity":1,"message":"629","line":36,"column":13,"nodeType":"549","messageId":"560","endLine":36,"endColumn":23},{"ruleId":"618","severity":1,"message":"630","line":36,"column":25,"nodeType":"549","messageId":"560","endLine":36,"endColumn":38},{"ruleId":"618","severity":1,"message":"631","line":37,"column":13,"nodeType":"549","messageId":"560","endLine":37,"endColumn":22},{"ruleId":"618","severity":1,"message":"632","line":41,"column":12,"nodeType":"549","messageId":"560","endLine":41,"endColumn":20},{"ruleId":"618","severity":1,"message":"633","line":41,"column":22,"nodeType":"549","messageId":"560","endLine":41,"endColumn":33},{"ruleId":"551","severity":1,"message":"579","line":50,"column":8,"nodeType":"580","endLine":50,"endColumn":10,"suggestions":"634"},{"ruleId":"543","severity":1,"message":"544","line":100,"column":70,"nodeType":"545","messageId":"546","endLine":100,"endColumn":72},{"ruleId":"635","severity":1,"message":"636","line":118,"column":69,"nodeType":"553","messageId":"637","endLine":118,"endColumn":70,"suggestions":"638"},{"ruleId":"635","severity":1,"message":"636","line":119,"column":58,"nodeType":"553","messageId":"637","endLine":119,"endColumn":59,"suggestions":"639"},{"ruleId":"554","replacedBy":"610"},{"ruleId":"556","replacedBy":"611"},{"ruleId":"618","severity":1,"message":"640","line":14,"column":7,"nodeType":"549","messageId":"560","endLine":14,"endColumn":24},{"ruleId":"618","severity":1,"message":"641","line":15,"column":7,"nodeType":"549","messageId":"560","endLine":15,"endColumn":23},{"ruleId":"618","severity":1,"message":"642","line":16,"column":7,"nodeType":"549","messageId":"560","endLine":16,"endColumn":22},{"ruleId":"618","severity":1,"message":"643","line":28,"column":10,"nodeType":"549","messageId":"560","endLine":28,"endColumn":20},{"ruleId":"618","severity":1,"message":"644","line":29,"column":10,"nodeType":"549","messageId":"560","endLine":29,"endColumn":20},{"ruleId":"618","severity":1,"message":"645","line":30,"column":10,"nodeType":"549","messageId":"560","endLine":30,"endColumn":22},{"ruleId":"551","severity":1,"message":"579","line":47,"column":6,"nodeType":"580","endLine":47,"endColumn":8,"suggestions":"646"},{"ruleId":"551","severity":1,"message":"579","line":38,"column":8,"nodeType":"580","endLine":38,"endColumn":10,"suggestions":"647"},{"ruleId":"648","severity":1,"message":"649","line":52,"column":50,"nodeType":"650","messageId":"651","endLine":52,"endColumn":52},{"ruleId":"648","severity":1,"message":"649","line":52,"column":98,"nodeType":"650","messageId":"651","endLine":52,"endColumn":100},{"ruleId":"543","severity":1,"message":"544","line":70,"column":106,"nodeType":"545","messageId":"546","endLine":70,"endColumn":108},{"ruleId":"543","severity":1,"message":"544","line":103,"column":59,"nodeType":"545","messageId":"546","endLine":103,"endColumn":61},{"ruleId":"543","severity":1,"message":"544","line":104,"column":72,"nodeType":"545","messageId":"546","endLine":104,"endColumn":74},{"ruleId":"618","severity":1,"message":"652","line":8,"column":13,"nodeType":"549","messageId":"560","endLine":8,"endColumn":28},{"ruleId":"618","severity":1,"message":"653","line":9,"column":10,"nodeType":"549","messageId":"560","endLine":9,"endColumn":17},{"ruleId":"618","severity":1,"message":"654","line":9,"column":19,"nodeType":"549","messageId":"560","endLine":9,"endColumn":24},{"ruleId":"618","severity":1,"message":"655","line":44,"column":9,"nodeType":"549","messageId":"560","endLine":44,"endColumn":13},{"ruleId":"551","severity":1,"message":"656","line":107,"column":6,"nodeType":"580","endLine":107,"endColumn":21,"suggestions":"657"},{"ruleId":"618","severity":1,"message":"658","line":4,"column":3,"nodeType":"549","messageId":"560","endLine":4,"endColumn":15},{"ruleId":"618","severity":1,"message":"659","line":5,"column":3,"nodeType":"549","messageId":"560","endLine":5,"endColumn":13},{"ruleId":"618","severity":1,"message":"660","line":6,"column":3,"nodeType":"549","messageId":"560","endLine":6,"endColumn":9},{"ruleId":"618","severity":1,"message":"661","line":7,"column":3,"nodeType":"549","messageId":"560","endLine":7,"endColumn":6},{"ruleId":"618","severity":1,"message":"561","line":11,"column":3,"nodeType":"549","messageId":"560","endLine":11,"endColumn":7},{"ruleId":"618","severity":1,"message":"662","line":13,"column":3,"nodeType":"549","messageId":"560","endLine":13,"endColumn":17},{"ruleId":"618","severity":1,"message":"663","line":14,"column":3,"nodeType":"549","messageId":"560","endLine":14,"endColumn":14},{"ruleId":"618","severity":1,"message":"664","line":15,"column":3,"nodeType":"549","messageId":"560","endLine":15,"endColumn":9},{"ruleId":"618","severity":1,"message":"564","line":16,"column":3,"nodeType":"549","messageId":"560","endLine":16,"endColumn":8},{"ruleId":"618","severity":1,"message":"562","line":17,"column":3,"nodeType":"549","messageId":"560","endLine":17,"endColumn":10},{"ruleId":"618","severity":1,"message":"665","line":18,"column":3,"nodeType":"549","messageId":"560","endLine":18,"endColumn":12},{"ruleId":"618","severity":1,"message":"666","line":19,"column":3,"nodeType":"549","messageId":"560","endLine":19,"endColumn":6},{"ruleId":"618","severity":1,"message":"620","line":23,"column":10,"nodeType":"549","messageId":"560","endLine":23,"endColumn":21},{"ruleId":"551","severity":1,"message":"579","line":54,"column":6,"nodeType":"580","endLine":54,"endColumn":8,"suggestions":"667"},{"ruleId":"543","severity":1,"message":"614","line":59,"column":88,"nodeType":"545","messageId":"546","endLine":59,"endColumn":90},{"ruleId":"543","severity":1,"message":"544","line":61,"column":14,"nodeType":"545","messageId":"546","endLine":61,"endColumn":16},{"ruleId":"648","severity":1,"message":"649","line":71,"column":38,"nodeType":"650","messageId":"651","endLine":71,"endColumn":40},{"ruleId":"648","severity":1,"message":"649","line":71,"column":86,"nodeType":"650","messageId":"651","endLine":71,"endColumn":88},{"ruleId":"543","severity":1,"message":"544","line":90,"column":72,"nodeType":"545","messageId":"546","endLine":90,"endColumn":74},{"ruleId":"543","severity":1,"message":"544","line":129,"column":58,"nodeType":"545","messageId":"546","endLine":129,"endColumn":60},{"ruleId":"543","severity":1,"message":"544","line":130,"column":71,"nodeType":"545","messageId":"546","endLine":130,"endColumn":73},{"ruleId":"618","severity":1,"message":"564","line":4,"column":3,"nodeType":"549","messageId":"560","endLine":4,"endColumn":8},{"ruleId":"618","severity":1,"message":"562","line":5,"column":3,"nodeType":"549","messageId":"560","endLine":5,"endColumn":10},{"ruleId":"618","severity":1,"message":"561","line":7,"column":3,"nodeType":"549","messageId":"560","endLine":7,"endColumn":7},{"ruleId":"618","severity":1,"message":"668","line":8,"column":3,"nodeType":"549","messageId":"560","endLine":8,"endColumn":13},{"ruleId":"618","severity":1,"message":"563","line":10,"column":3,"nodeType":"549","messageId":"560","endLine":10,"endColumn":11},{"ruleId":"618","severity":1,"message":"669","line":13,"column":10,"nodeType":"549","messageId":"560","endLine":13,"endColumn":18},{"ruleId":"618","severity":1,"message":"604","line":18,"column":10,"nodeType":"549","messageId":"560","endLine":18,"endColumn":23},{"ruleId":"618","severity":1,"message":"670","line":18,"column":25,"nodeType":"549","messageId":"560","endLine":18,"endColumn":41},{"ruleId":"618","severity":1,"message":"671","line":33,"column":23,"nodeType":"549","messageId":"560","endLine":33,"endColumn":36},{"ruleId":"618","severity":1,"message":"672","line":34,"column":11,"nodeType":"549","messageId":"560","endLine":34,"endColumn":17},{"ruleId":"618","severity":1,"message":"673","line":34,"column":19,"nodeType":"549","messageId":"560","endLine":34,"endColumn":28},{"ruleId":"551","severity":1,"message":"579","line":48,"column":6,"nodeType":"580","endLine":48,"endColumn":8,"suggestions":"674"},{"ruleId":"551","severity":1,"message":"579","line":30,"column":8,"nodeType":"580","endLine":30,"endColumn":10,"suggestions":"675"},{"ruleId":"618","severity":1,"message":"620","line":13,"column":10,"nodeType":"549","messageId":"560","endLine":13,"endColumn":21},{"ruleId":"618","severity":1,"message":"676","line":16,"column":8,"nodeType":"549","messageId":"560","endLine":16,"endColumn":16},{"ruleId":"590","severity":1,"message":"591","line":57,"column":25,"nodeType":"592","endLine":57,"endColumn":88},{"ruleId":"543","severity":1,"message":"544","line":90,"column":53,"nodeType":"545","messageId":"546","endLine":90,"endColumn":55},{"ruleId":"554","replacedBy":"597"},{"ruleId":"556","replacedBy":"598"},{"ruleId":"543","severity":1,"message":"544","line":41,"column":38,"nodeType":"545","messageId":"546","endLine":41,"endColumn":40},{"ruleId":"554","replacedBy":"677"},{"ruleId":"556","replacedBy":"678"},{"ruleId":"554","replacedBy":"679"},{"ruleId":"556","replacedBy":"680"},{"ruleId":"648","severity":1,"message":"649","line":62,"column":25,"nodeType":"650","messageId":"651","endLine":62,"endColumn":27},{"ruleId":"648","severity":1,"message":"649","line":62,"column":45,"nodeType":"650","messageId":"651","endLine":62,"endColumn":47},{"ruleId":"618","severity":1,"message":"561","line":9,"column":5,"nodeType":"549","messageId":"560","endLine":9,"endColumn":9},{"ruleId":"618","severity":1,"message":"563","line":10,"column":5,"nodeType":"549","messageId":"560","endLine":10,"endColumn":13},{"ruleId":"618","severity":1,"message":"620","line":13,"column":10,"nodeType":"549","messageId":"560","endLine":13,"endColumn":21},{"ruleId":"618","severity":1,"message":"681","line":14,"column":10,"nodeType":"549","messageId":"560","endLine":14,"endColumn":18},{"ruleId":"554","replacedBy":"606"},{"ruleId":"556","replacedBy":"607"},{"ruleId":"554","replacedBy":"588"},{"ruleId":"556","replacedBy":"589"},{"ruleId":"618","severity":1,"message":"682","line":1,"column":8,"nodeType":"549","messageId":"560","endLine":1,"endColumn":13},{"ruleId":"618","severity":1,"message":"683","line":6,"column":5,"nodeType":"549","messageId":"560","endLine":6,"endColumn":13},{"ruleId":"543","severity":1,"message":"544","line":22,"column":33,"nodeType":"545","messageId":"546","endLine":22,"endColumn":35},{"ruleId":"554","replacedBy":"684"},{"ruleId":"556","replacedBy":"685"},{"ruleId":"554","replacedBy":"686"},{"ruleId":"556","replacedBy":"687"},{"ruleId":"618","severity":1,"message":"688","line":13,"column":33,"nodeType":"549","messageId":"560","endLine":13,"endColumn":41},{"ruleId":"618","severity":1,"message":"689","line":14,"column":8,"nodeType":"549","messageId":"560","endLine":14,"endColumn":13},{"ruleId":"618","severity":1,"message":"690","line":24,"column":11,"nodeType":"549","messageId":"560","endLine":24,"endColumn":16},{"ruleId":"618","severity":1,"message":"691","line":24,"column":18,"nodeType":"549","messageId":"560","endLine":24,"endColumn":26},{"ruleId":"618","severity":1,"message":"692","line":26,"column":11,"nodeType":"549","messageId":"560","endLine":26,"endColumn":18},{"ruleId":"618","severity":1,"message":"693","line":26,"column":20,"nodeType":"549","messageId":"560","endLine":26,"endColumn":30},{"ruleId":"551","severity":1,"message":"694","line":34,"column":6,"nodeType":"580","endLine":34,"endColumn":8,"suggestions":"695"},{"ruleId":"543","severity":1,"message":"544","line":37,"column":61,"nodeType":"545","messageId":"546","endLine":37,"endColumn":63},{"ruleId":"543","severity":1,"message":"544","line":39,"column":76,"nodeType":"545","messageId":"546","endLine":39,"endColumn":78},{"ruleId":"543","severity":1,"message":"544","line":47,"column":59,"nodeType":"545","messageId":"546","endLine":47,"endColumn":61},{"ruleId":"543","severity":1,"message":"544","line":49,"column":76,"nodeType":"545","messageId":"546","endLine":49,"endColumn":78},{"ruleId":"554","replacedBy":"593"},{"ruleId":"556","replacedBy":"594"},{"ruleId":"648","severity":1,"message":"649","line":20,"column":19,"nodeType":"650","messageId":"651","endLine":20,"endColumn":21},{"ruleId":"648","severity":1,"message":"649","line":20,"column":39,"nodeType":"650","messageId":"651","endLine":20,"endColumn":41},{"ruleId":"554","replacedBy":"696"},{"ruleId":"556","replacedBy":"697"},{"ruleId":"648","severity":1,"message":"649","line":54,"column":25,"nodeType":"650","messageId":"651","endLine":54,"endColumn":27},{"ruleId":"648","severity":1,"message":"649","line":54,"column":45,"nodeType":"650","messageId":"651","endLine":54,"endColumn":47},{"ruleId":"554","replacedBy":"698"},{"ruleId":"556","replacedBy":"699"},{"ruleId":"618","severity":1,"message":"700","line":18,"column":8,"nodeType":"549","messageId":"560","endLine":18,"endColumn":15},{"ruleId":"554","replacedBy":"701"},{"ruleId":"556","replacedBy":"702"},{"ruleId":"558","severity":1,"message":"703","line":3,"column":20,"nodeType":"549","messageId":"560","endLine":3,"endColumn":28},{"ruleId":"554","replacedBy":"701"},{"ruleId":"556","replacedBy":"702"},{"ruleId":"618","severity":1,"message":"688","line":13,"column":33,"nodeType":"549","messageId":"560","endLine":13,"endColumn":41},{"ruleId":"618","severity":1,"message":"689","line":14,"column":8,"nodeType":"549","messageId":"560","endLine":14,"endColumn":13},{"ruleId":"618","severity":1,"message":"690","line":23,"column":11,"nodeType":"549","messageId":"560","endLine":23,"endColumn":16},{"ruleId":"618","severity":1,"message":"691","line":23,"column":18,"nodeType":"549","messageId":"560","endLine":23,"endColumn":26},{"ruleId":"618","severity":1,"message":"692","line":25,"column":11,"nodeType":"549","messageId":"560","endLine":25,"endColumn":18},{"ruleId":"618","severity":1,"message":"693","line":25,"column":20,"nodeType":"549","messageId":"560","endLine":25,"endColumn":30},{"ruleId":"551","severity":1,"message":"694","line":33,"column":6,"nodeType":"580","endLine":33,"endColumn":8,"suggestions":"704"},{"ruleId":"543","severity":1,"message":"544","line":36,"column":61,"nodeType":"545","messageId":"546","endLine":36,"endColumn":63},{"ruleId":"543","severity":1,"message":"544","line":38,"column":76,"nodeType":"545","messageId":"546","endLine":38,"endColumn":78},{"ruleId":"543","severity":1,"message":"544","line":46,"column":59,"nodeType":"545","messageId":"546","endLine":46,"endColumn":61},{"ruleId":"543","severity":1,"message":"544","line":48,"column":76,"nodeType":"545","messageId":"546","endLine":48,"endColumn":78},{"ruleId":"648","severity":1,"message":"649","line":125,"column":19,"nodeType":"650","messageId":"651","endLine":125,"endColumn":21},{"ruleId":"648","severity":1,"message":"649","line":125,"column":39,"nodeType":"650","messageId":"651","endLine":125,"endColumn":41},{"ruleId":"618","severity":1,"message":"705","line":21,"column":13,"nodeType":"549","messageId":"560","endLine":21,"endColumn":21},{"ruleId":"618","severity":1,"message":"706","line":21,"column":23,"nodeType":"549","messageId":"560","endLine":21,"endColumn":34},{"ruleId":"543","severity":1,"message":"614","line":39,"column":54,"nodeType":"545","messageId":"546","endLine":39,"endColumn":56},{"ruleId":"551","severity":1,"message":"707","line":54,"column":10,"nodeType":"580","endLine":54,"endColumn":30,"suggestions":"708"},{"ruleId":"551","severity":1,"message":"709","line":63,"column":8,"nodeType":"580","endLine":63,"endColumn":10,"suggestions":"710"},{"ruleId":"543","severity":1,"message":"544","line":66,"column":17,"nodeType":"545","messageId":"546","endLine":66,"endColumn":19},{"ruleId":"543","severity":1,"message":"544","line":196,"column":41,"nodeType":"545","messageId":"546","endLine":196,"endColumn":43},{"ruleId":"648","severity":1,"message":"649","line":198,"column":76,"nodeType":"650","messageId":"651","endLine":198,"endColumn":78},{"ruleId":"648","severity":1,"message":"649","line":198,"column":108,"nodeType":"650","messageId":"651","endLine":198,"endColumn":110},{"ruleId":"543","severity":1,"message":"544","line":202,"column":61,"nodeType":"545","messageId":"546","endLine":202,"endColumn":63},{"ruleId":"543","severity":1,"message":"544","line":253,"column":44,"nodeType":"545","messageId":"546","endLine":253,"endColumn":46},{"ruleId":"543","severity":1,"message":"544","line":253,"column":98,"nodeType":"545","messageId":"546","endLine":253,"endColumn":100},{"ruleId":"543","severity":1,"message":"544","line":254,"column":93,"nodeType":"545","messageId":"546","endLine":254,"endColumn":95},{"ruleId":"711","severity":1,"message":"712","line":13,"column":1,"nodeType":"713","endLine":18,"endColumn":2},{"ruleId":"618","severity":1,"message":"714","line":26,"column":5,"nodeType":"549","messageId":"560","endLine":26,"endColumn":9},{"ruleId":"543","severity":1,"message":"544","line":51,"column":116,"nodeType":"545","messageId":"546","endLine":51,"endColumn":118},{"ruleId":"618","severity":1,"message":"715","line":130,"column":11,"nodeType":"549","messageId":"560","endLine":130,"endColumn":20},{"ruleId":"543","severity":1,"message":"544","line":130,"column":110,"nodeType":"545","messageId":"546","endLine":130,"endColumn":112},{"ruleId":"543","severity":1,"message":"544","line":130,"column":126,"nodeType":"545","messageId":"546","endLine":130,"endColumn":128},{"ruleId":"618","severity":1,"message":"716","line":45,"column":11,"nodeType":"549","messageId":"560","endLine":45,"endColumn":18},{"ruleId":"618","severity":1,"message":"625","line":5,"column":5,"nodeType":"549","messageId":"560","endLine":5,"endColumn":13},{"ruleId":"543","severity":1,"message":"544","line":28,"column":70,"nodeType":"545","messageId":"546","endLine":28,"endColumn":72},{"ruleId":"543","severity":1,"message":"544","line":28,"column":86,"nodeType":"545","messageId":"546","endLine":28,"endColumn":88},{"ruleId":"543","severity":1,"message":"544","line":34,"column":49,"nodeType":"545","messageId":"546","endLine":34,"endColumn":51},{"ruleId":"543","severity":1,"message":"544","line":35,"column":66,"nodeType":"545","messageId":"546","endLine":35,"endColumn":68},{"ruleId":"543","severity":1,"message":"544","line":57,"column":57,"nodeType":"545","messageId":"546","endLine":57,"endColumn":59},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-const-assign","'ipfs' is constant.","Identifier","const","react-hooks/exhaustive-deps","Assignments to the 'ipfs' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Literal","no-native-reassign",["717"],"no-negated-in-lhs",["718"],"no-unused-vars","'Drawer' is defined but never used.","unusedVar","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'Notifications' is defined but never used.","'AccountTree' is defined but never used.","'Dashboard' is defined but never used.","'CalendarToday' is defined but never used.","'SupervisorAccount' is defined but never used.","'BusinessCenter' is defined but never used.","'Description' is defined but never used.","'Settings' is defined but never used.","'getNodeConf' is defined but never used.","'YActions' is defined but never used.","'HexagonGrid' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["719"],"'renderTitle' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'renderActionBlock' is assigned a value but never used.",["717"],["718"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["717"],["718"],["717"],["718"],["717"],["718"],"'connect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["720"],["717"],["718"],"'getConverters' is defined but never used.","'setFormats' is assigned a value but never used.",["717"],["718"],"'MenuItem' is defined but never used.","'attachFile' is defined but never used.",["717"],["718"],["717"],["718"],"Expected '!==' and instead saw '!='.",["721"],["717"],["718"],"@typescript-eslint/no-unused-vars",["722"],"'useMutation' is defined but never used.",["723"],["717"],["718"],"'TreeView' is defined but never used.","'TreeItem' is defined but never used.","'Editor' is defined but never used.","'ExpandMore' is defined but never used.","'ExpandLess' is defined but never used.","'editorData' is assigned a value but never used.","'setEditorData' is assigned a value but never used.","'editorMap' is assigned a value but never used.","'branches' is assigned a value but never used.","'setBranches' is assigned a value but never used.",["724"],"no-useless-escape","Unnecessary escape character: \\[.","unnecessaryEscape",["725","726"],["727","728"],"'FilePreviewDialog' is assigned a value but never used.","'FileUploadDialog' is assigned a value but never used.","'ConverterDialog' is assigned a value but never used.","'dialogOpen' is assigned a value but never used.","'convertDoc' is assigned a value but never used.","'selectedData' is assigned a value but never used.",["729"],["730"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'ProjectItemNode' is defined but never used.","'isArray' is defined but never used.","'merge' is defined but never used.","'View' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'observer', 'projectDoc', and 'ydoc'. Either include them or remove the dependency array.",["731"],"'ViewHeadline' is defined but never used.","'ViewModule' is defined but never used.","'Search' is defined but never used.","'Add' is defined but never used.","'InputAdornment' is defined but never used.","'ButtonGroup' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Fab' is defined but never used.",["732"],"'IconButton' is defined but never used.","'MoreVert' is defined but never used.","'installConverter' is defined but never used.","'setConverters' is assigned a value but never used.","'stores' is assigned a value but never used.","'setStores' is assigned a value but never used.",["733"],["734"],"'HubSetup' is defined but never used.",["717"],["718"],["717"],["718"],"'YContext' is defined but never used.","'React' is defined but never used.","'settings' is defined but never used.",["717"],["718"],["717"],["718"],"'getViews' is defined but never used.","'async' is defined but never used.","'table' is assigned a value but never used.","'setTable' is assigned a value but never used.","'columns' is assigned a value but never used.","'setColumns' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getSource'. Either include it or remove the dependency array.",["735"],["717"],["718"],["717"],["718"],"'GClient' is defined but never used.",["717"],["718"],"'generate' is defined but never used.",["736"],"'bookings' is assigned a value but never used.","'setBookings' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'docProject.id', 'props', and 'ydoc'. Either include them or remove the dependency array.",["737"],"React Hook React.useEffect has a missing dependency: 'ydoc'. Either include it or remove the dependency array.",["738"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'yDoc' is defined but never used.","'rootNodes' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"739","fix":"745"},{"desc":"739","fix":"746"},{"desc":"739","fix":"747"},{"messageId":"748","fix":"749","desc":"750"},{"messageId":"751","fix":"752","desc":"753"},{"messageId":"748","fix":"754","desc":"750"},{"messageId":"751","fix":"755","desc":"753"},{"desc":"739","fix":"756"},{"desc":"739","fix":"757"},{"desc":"758","fix":"759"},{"desc":"739","fix":"760"},{"desc":"739","fix":"761"},{"desc":"739","fix":"762"},{"desc":"763","fix":"764"},{"desc":"763","fix":"765"},{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},"Update the dependencies array to be: [props]",{"range":"770","text":"771"},"Update the dependencies array to be: [data, props.file, props.ipfs]",{"range":"772","text":"773"},"Update the dependencies array to be: [data, props.data]",{"range":"774","text":"775"},{"range":"776","text":"771"},{"range":"777","text":"771"},{"range":"778","text":"771"},"removeEscape",{"range":"779","text":"780"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"781","text":"782"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"783","text":"780"},{"range":"784","text":"782"},{"range":"785","text":"771"},{"range":"786","text":"771"},"Update the dependencies array to be: [observer, projectDoc, props.project, ydoc]",{"range":"787","text":"788"},{"range":"789","text":"771"},{"range":"790","text":"771"},{"range":"791","text":"771"},"Update the dependencies array to be: [getSource]",{"range":"792","text":"793"},{"range":"794","text":"793"},"Update the dependencies array to be: [props.project, doc, props, ydoc, docProject.id]",{"range":"795","text":"796"},"Update the dependencies array to be: [ydoc]",{"range":"797","text":"798"},[1675,1677],"[props]",[1889,1913],"[data, props.file, props.ipfs]",[614,626],"[data, props.data]",[841,843],[935,937],[1325,1327],[4009,4010],"",[4009,4009],"\\",[4116,4117],[4116,4116],[1381,1383],[957,959],[3356,3371],"[observer, projectDoc, props.project, ydoc]",[1124,1126],[1109,1111],[885,887],[759,761],"[getSource]",[730,732],[1551,1571],"[props.project, doc, props, ydoc, docProject.id]",[1594,1596],"[ydoc]"]