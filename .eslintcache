[{"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/graph/index.js":"1","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/controllers/DashboardController/index.js":"2","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/views/KnowledgeBase/index.js":"3","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/actions/knowledgeActions.js":"4","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/actions/types.js":"5","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/reducers/index.js":"6","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/reducers/knowledge.js":"7","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/components/sidebar/index.js":"8","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/actions/teamActions.js":"9","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/actions/equipmentActions.js":"10","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/views/Admin/index.js":"11"},{"size":2113,"mtime":1609381208168,"results":"12","hashOfConfig":"13"},{"size":4156,"mtime":1609389113760,"results":"14","hashOfConfig":"13"},{"size":2441,"mtime":1609392955224,"results":"15","hashOfConfig":"13"},{"size":1934,"mtime":1609390286733,"results":"16","hashOfConfig":"13"},{"size":1117,"mtime":1609390304642,"results":"17","hashOfConfig":"13"},{"size":430,"mtime":1609389645080,"results":"18","hashOfConfig":"13"},{"size":342,"mtime":1609389684917,"results":"19","hashOfConfig":"13"},{"size":2287,"mtime":1609390175045,"results":"20","hashOfConfig":"13"},{"size":2060,"mtime":1609391067938,"results":"21","hashOfConfig":"13"},{"size":1984,"mtime":1609391059527,"results":"22","hashOfConfig":"13"},{"size":3058,"mtime":1609391245130,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ndn7kb",{"filePath":"26","messages":"27","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/graph/index.js",["48","49","50","51","52","53"],"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/controllers/DashboardController/index.js",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74"],"import React from 'react';\n\nimport {\n  Drawer,\n  List,\n  Divider,\n  ListItem,\n  Paper,\n  Typography,\n  Tabs,\n  Tab\n} from '@material-ui/core';\n\nimport {\n  Notifications,\n  AccountTree,\n  Dashboard,\n  CalendarToday,\n  SupervisorAccount,\n  BusinessCenter,\n  Description,\n  Settings\n} from '@material-ui/icons';\n\nimport { connect } from 'react-redux';\n\nimport KnowledgeBase from '../../views/KnowledgeBase';\nimport Projects from '../../views/Projects';\nimport ProjectView from '../../views/ProjectView';\nimport DashboardView from '../../views/Dashboard';\nimport Files from '../../views/Files';\nimport Calendar from '../../views/Calendar';\nimport SettingsView from '../../views/Settings';\nimport Teams from '../../views/Team';\nimport Equipment from '../../views/Equipment';\nimport AdminView from '../../views/Admin';\nimport qs from 'qs';\nimport jwt_decode from 'jwt-decode';\nimport { Switch, Route } from 'react-router-dom';\n\nimport IPFS from 'ipfs';\n\nimport { setStatus, getNodeConf } from '../../actions/authActions';\nimport { getTypes, getPermissions } from '../../actions/adminActions'\nimport Sidebar from '../../components/sidebar';\nimport YActions, {YProvider} from '../../graph/yjs';\nimport { IPFSProvider } from '../../graph/ipfs'\n\nimport './index.css';\n\n\nfunction DashboardController(props){\n\n  let query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n\n  const currentPath = window.location.pathname.replace(/\\/dashboard/g, '')\n\n  console.log(props.swarmKey)\n\n  React.useEffect(async () => {\n   // props.getTypes()\n    //props.getPermissions()\n\n    //console.log(await node.id())\n\n    \n  }, [])\n\n  const renderTitle = () => {\n    switch(currentPath){\n      case '':\n      case '/':\n        return \"Dashboard\";\n      case '/calendar':\n        return \"Calendar\"\n      case '/projects':\n        return \"Projects\"\n      case '/team':\n        return \"Team\";\n      case '/equipment':\n        return \"Equipment\"\n      case '/files':\n        return \"Files\";\n    }\n  }\n\n  const renderActionBlock = () => {\n    console.log(currentPath)\n    switch(currentPath){\n      case '/projects':\n        let project_set = [...new Set(props.projects.map((x) => x.status))]\n        console.log(project_set)\n        return (\n        <Tabs value={project_set.indexOf(query_string.status)}>\n          {project_set.map((x) => (\n            <Tab label={x} onClick={() => {\n              query_string.status = x;\n            props.history.push(`${props.location.pathname}?${qs.stringify(query_string)}`)\n          }}/>\n          ))}\n        </Tabs>\n        )\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <IPFSProvider swarmKey={props.swarmKey}>\n    <YProvider>\n    <div className=\"dashapp\">\n      <Sidebar match={props.match} />\n      <div className=\"dashapp-body\">\n\n        <Switch>\n          <Route path={`${props.match.url}`} exact component={DashboardView} />\n          <Route path={`${props.match.url}/calendar`} render={(props) => (\n            <Calendar {...props} />\n          )} />\n          <Route path={`${props.match.url}/projects`} component={Projects} exact />\n          <Route path={`${props.match.url}/projects/:id`} render={(props) => (\n            <ProjectView {...props} />\n          )} />\n          <Route path={`${props.match.url}/files`} render={(props) => {\n            return <Files {...props}  />\n          }} />\n          <Route path={`${props.match.url}/kb`} component={KnowledgeBase} />\n          <Route path={`${props.match.url}/team`} component={Teams} />\n          <Route path={`${props.match.url}/equipment`} component={Equipment} />\n          <Route path={`${props.match.url}/settings`} component={SettingsView} />\n          <Route path={`${props.match.url}/admin`} component={AdminView} />\n        </Switch>\n      </div>\n    </div>\n    </YProvider>\n    </IPFSProvider>\n  );\n}\n\nexport default connect((state) => ({\n  projects: state.projects.list,\n  user: jwt_decode(state.auth.token),\n  swarmKey: state.auth.swarmKey\n}), (dispatch) => ({\n  getTypes: () => dispatch(getTypes()),\n  getPermissions: () => dispatch(getPermissions()),\n  setStatus: (status) => dispatch(setStatus(status))\n}))(DashboardController)\n","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/views/KnowledgeBase/index.js",["75","76","77"],"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/actions/knowledgeActions.js",["78"],"import { gql } from '@apollo/client';\nimport * as types from './types';\nimport GClient, {withGraph} from '../graph';\n\nconst graph = withGraph()\n\nexport const addKnowledge = (knowledge) => {\n  return (dispatch) => {\n    graph.getClient().mutate({\n      mutation: gql`\n  mutation AddKnowledge($knowledge: KnowledgeInput){\n    addKnowledge(knowledge: $knowledge){\n      id\n      title\n      description\n    }\n  }\n`,\n    variables: {\n      knowledge: knowledge\n    }\n  }).then((r) => r.data.addKnowledge).then((r) => {\n    dispatch({type: types.ADD_KNOWLEDGE, newItem: r})\n  })\n}\n}\n\nexport const updateKnowledge = (id, equipment) => {\n  console.log(id, equipment)\n  return (dispatch) => {\n    return graph.getClient().mutate({\n      mutation:  gql`\n      mutation UpdateEquipment($equipmentId: String, $equipment: EquipmentInput){\n        updateEquipment(equipmentId: $equipmentId, equipment: $equipment){\n          name\n          type\n          description\n        }\n      }\n    `,\n    variables: {\n      equipmentId: id,\n      equipment\n    }\n    }).then((r) => r.data.updateEquipment).then((r) => {\n      dispatch({type: types.UPDATE_EQUIPMENT, equipment, id})\n    })\n  }\n}\n\nexport const removeKnowledge = (id) => {\n  return (dispatch) => {\n    return graph.getClient().mutate({\n      mutation: gql`\n        mutation RemoveEquipment($id: String){\n          removeEquipment(equipmentId: $id)\n        }\n      `,\n      variables: {\n        id: id\n      }\n    }).then((r) => r.data.removeEquipment).then((r) => {\n      dispatch({type: types.REMOVE_EQUIPMENT, id: id})\n    })\n  }\n}\n\n\nexport const getKnowledge = () => {\n  return (dispatch) => {\n    return graph.getClient().query({\n      query: gql`\n        query GetKnowledge {\n          knowledges {\n            id\n            title\n          }\n        }\n      `\n    }).then((r) => r.data.knowledges).then((r) => {\n      dispatch({type: types.SET_KNOWLEDGE, knowledge: r})\n    })\n  }\n \n}\n","/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/actions/types.js",[],"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/reducers/index.js",[],"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/reducers/knowledge.js",[],"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/components/sidebar/index.js",["79","80","81"],"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/actions/teamActions.js",["82"],"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/actions/equipmentActions.js",["83"],"/Users/owner/theinvisiblerainbow/worker-hive/react-workerhub/src/views/Admin/index.js",["84","85"],{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":7,"column":5,"nodeType":"88","messageId":"89","endLine":7,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":23,"column":33,"nodeType":"93","messageId":"94","endLine":23,"endColumn":35},{"ruleId":"95","severity":1,"message":"96","line":25,"column":5,"nodeType":"97","messageId":"98","endLine":32,"endColumn":6},{"ruleId":"99","severity":1,"message":"100","line":67,"column":1,"nodeType":"101","endLine":97,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":75,"column":5,"nodeType":"97","messageId":"98","endLine":82,"endColumn":6},{"ruleId":"86","severity":1,"message":"102","line":4,"column":3,"nodeType":"88","messageId":"89","endLine":4,"endColumn":9},{"ruleId":"86","severity":1,"message":"103","line":5,"column":3,"nodeType":"88","messageId":"89","endLine":5,"endColumn":7},{"ruleId":"86","severity":1,"message":"104","line":6,"column":3,"nodeType":"88","messageId":"89","endLine":6,"endColumn":10},{"ruleId":"86","severity":1,"message":"105","line":7,"column":3,"nodeType":"88","messageId":"89","endLine":7,"endColumn":11},{"ruleId":"86","severity":1,"message":"106","line":8,"column":3,"nodeType":"88","messageId":"89","endLine":8,"endColumn":8},{"ruleId":"86","severity":1,"message":"107","line":9,"column":3,"nodeType":"88","messageId":"89","endLine":9,"endColumn":13},{"ruleId":"86","severity":1,"message":"108","line":15,"column":3,"nodeType":"88","messageId":"89","endLine":15,"endColumn":16},{"ruleId":"86","severity":1,"message":"109","line":16,"column":3,"nodeType":"88","messageId":"89","endLine":16,"endColumn":14},{"ruleId":"86","severity":1,"message":"110","line":17,"column":3,"nodeType":"88","messageId":"89","endLine":17,"endColumn":12},{"ruleId":"86","severity":1,"message":"111","line":18,"column":3,"nodeType":"88","messageId":"89","endLine":18,"endColumn":16},{"ruleId":"86","severity":1,"message":"112","line":19,"column":3,"nodeType":"88","messageId":"89","endLine":19,"endColumn":20},{"ruleId":"86","severity":1,"message":"113","line":20,"column":3,"nodeType":"88","messageId":"89","endLine":20,"endColumn":17},{"ruleId":"86","severity":1,"message":"114","line":21,"column":3,"nodeType":"88","messageId":"89","endLine":21,"endColumn":14},{"ruleId":"86","severity":1,"message":"115","line":22,"column":3,"nodeType":"88","messageId":"89","endLine":22,"endColumn":11},{"ruleId":"86","severity":1,"message":"116","line":41,"column":8,"nodeType":"88","messageId":"89","endLine":41,"endColumn":12},{"ruleId":"86","severity":1,"message":"117","line":43,"column":21,"nodeType":"88","messageId":"89","endLine":43,"endColumn":32},{"ruleId":"86","severity":1,"message":"118","line":46,"column":8,"nodeType":"88","messageId":"89","endLine":46,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":60,"column":19,"nodeType":"121","endLine":67,"endColumn":4},{"ruleId":"86","severity":1,"message":"122","line":69,"column":9,"nodeType":"88","messageId":"89","endLine":69,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":70,"column":5,"nodeType":"97","messageId":"98","endLine":84,"endColumn":6},{"ruleId":"86","severity":1,"message":"123","line":87,"column":9,"nodeType":"88","messageId":"89","endLine":87,"endColumn":26},{"ruleId":"86","severity":1,"message":"124","line":22,"column":22,"nodeType":"88","messageId":"89","endLine":22,"endColumn":33},{"ruleId":"119","severity":1,"message":"125","line":32,"column":8,"nodeType":"126","endLine":32,"endColumn":10,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":65,"column":22,"nodeType":"130","messageId":"131","endLine":65,"endColumn":102},{"ruleId":"86","severity":1,"message":"132","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":15},{"ruleId":"86","severity":1,"message":"108","line":12,"column":5,"nodeType":"88","messageId":"89","endLine":12,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":75,"column":12,"nodeType":"135","endLine":75,"endColumn":74},{"ruleId":"91","severity":1,"message":"92","line":80,"column":108,"nodeType":"93","messageId":"94","endLine":80,"endColumn":110},{"ruleId":"86","severity":1,"message":"132","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":15},{"ruleId":"86","severity":1,"message":"132","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":15},{"ruleId":"119","severity":1,"message":"125","line":20,"column":8,"nodeType":"126","endLine":20,"endColumn":10,"suggestions":"136"},{"ruleId":"86","severity":1,"message":"137","line":23,"column":36,"nodeType":"88","messageId":"89","endLine":23,"endColumn":40},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'settings' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Drawer' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'Notifications' is defined but never used.","'AccountTree' is defined but never used.","'Dashboard' is defined but never used.","'CalendarToday' is defined but never used.","'SupervisorAccount' is defined but never used.","'BusinessCenter' is defined but never used.","'Description' is defined but never used.","'Settings' is defined but never used.","'IPFS' is defined but never used.","'getNodeConf' is defined but never used.","'YActions' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'renderTitle' is assigned a value but never used.","'renderActionBlock' is assigned a value but never used.","'setBranches' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["138"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'GClient' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["139"],"'data' is assigned a value but never used.",{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},"Update the dependencies array to be: [props]",{"range":"143","text":"144"},{"range":"145","text":"144"},[701,703],"[props]",[640,642]]