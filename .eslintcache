[{"/home/workhub/work/React-WorkerHub/src/graph/ipfs/index.js":"1","/home/workhub/work/React-WorkerHub/src/index.js":"2","/home/workhub/work/React-WorkerHub/src/controllers/DashboardController/index.js":"3","/home/workhub/work/React-WorkerHub/src/reducers/auth.js":"4","/home/workhub/work/React-WorkerHub/src/components/sidebar/index.js":"5","/home/workhub/work/React-WorkerHub/src/components/dialogs/file-upload-dialog/index.js":"6","/home/workhub/work/React-WorkerHub/src/reducers/equipment.js":"7","/home/workhub/work/React-WorkerHub/src/reducers/team.js":"8","/home/workhub/work/React-WorkerHub/src/components/dialogs/file-dialog/index.js":"9","/home/workhub/work/React-WorkerHub/src/components/dialogs/file-preview-dialog/index.js":"10","/home/workhub/work/React-WorkerHub/src/reducers/files.js":"11","/home/workhub/work/React-WorkerHub/src/components/dialogs/converter-dialog/index.js":"12","/home/workhub/work/React-WorkerHub/src/reducers/calendar.js":"13","/home/workhub/work/React-WorkerHub/src/components/dialogs/plan-dialog/index.js":"14","/home/workhub/work/React-WorkerHub/src/reportWebVitals.js":"15","/home/workhub/work/React-WorkerHub/src/components/plan/tree/branch.js":"16","/home/workhub/work/React-WorkerHub/src/components/plan/tree/index.js":"17","/home/workhub/work/React-WorkerHub/src/components/dialogs/mutable-dialog/index.js":"18","/home/workhub/work/React-WorkerHub/src/components/foreign-input/index.js":"19","/home/workhub/work/React-WorkerHub/src/reducers/contacts.js":"20","/home/workhub/work/React-WorkerHub/src/reducers/admin.js":"21","/home/workhub/work/React-WorkerHub/src/reducers/dashboard.js":"22","/home/workhub/work/React-WorkerHub/src/views/Equipment/index.tsx":"23","/home/workhub/work/React-WorkerHub/src/views/Team/index.tsx":"24","/home/workhub/work/React-WorkerHub/src/views/KnowledgeBase/index.tsx":"25","/home/workhub/work/React-WorkerHub/src/views/Files/index.tsx":"26","/home/workhub/work/React-WorkerHub/src/views/Contacts/index.tsx":"27","/home/workhub/work/React-WorkerHub/src/views/Calendar/index.tsx":"28","/home/workhub/work/React-WorkerHub/src/views/ProjectView/index.tsx":"29","/home/workhub/work/React-WorkerHub/src/views/Projects/index.tsx":"30","/home/workhub/work/React-WorkerHub/src/views/Settings/index.tsx":"31","/home/workhub/work/React-WorkerHub/src/views/Admin/index.tsx":"32","/home/workhub/work/React-WorkerHub/src/views/Login/index.tsx":"33","/home/workhub/work/React-WorkerHub/src/views/Login/hub-setup.tsx":"34","/home/workhub/work/React-WorkerHub/src/tabs/project/team.tsx":"35","/home/workhub/work/React-WorkerHub/src/actions/teamActions.ts":"36","/home/workhub/work/React-WorkerHub/src/reducers/projects.js":"37","/home/workhub/work/React-WorkerHub/src/nodes/MongoDBServerNode.tsx":"38","/home/workhub/work/React-WorkerHub/src/actions/authActions.ts":"39","/home/workhub/work/React-WorkerHub/src/actions/contactActions.ts":"40","/home/workhub/work/React-WorkerHub/src/tabs/project/files.tsx":"41","/home/workhub/work/React-WorkerHub/src/actions/projectActions.ts":"42","/home/workhub/work/React-WorkerHub/src/graph/index.ts":"43","/home/workhub/work/React-WorkerHub/src/actions/knowledgeActions.ts":"44","/home/workhub/work/React-WorkerHub/src/views/Dashboard/index.tsx":"45","/home/workhub/work/React-WorkerHub/src/nodes/ProjectItemNode.tsx":"46","/home/workhub/work/React-WorkerHub/src/actions/adminActions.ts":"47","/home/workhub/work/React-WorkerHub/src/actions/types.ts":"48","/home/workhub/work/React-WorkerHub/src/actions/fileActions.ts":"49","/home/workhub/work/React-WorkerHub/src/nodes/TypeDefNode.tsx":"50","/home/workhub/work/React-WorkerHub/src/reducers/knowledge.js":"51","/home/workhub/work/React-WorkerHub/src/tabs/project/settings.tsx":"52","/home/workhub/work/React-WorkerHub/src/nodes/MSSQLServerNode.tsx":"53","/home/workhub/work/React-WorkerHub/src/graph/yjs/context.tsx":"54","/home/workhub/work/React-WorkerHub/src/actions/calendarActions.ts":"55","/home/workhub/work/React-WorkerHub/src/App.tsx":"56","/home/workhub/work/React-WorkerHub/src/actions/equipmentActions.ts":"57","/home/workhub/work/React-WorkerHub/src/graph/ipfs/p2p-stack.js":"58","/home/workhub/work/React-WorkerHub/src/nodes/MSSQLNode.tsx":"59","/home/workhub/work/React-WorkerHub/src/tabs/project/calendar.tsx":"60","/home/workhub/work/React-WorkerHub/src/components/dialogs/calendar-dialog/index.tsx":"61","/home/workhub/work/React-WorkerHub/src/configureStore.ts":"62","/home/workhub/work/React-WorkerHub/src/tabs/project/index.tsx":"63"},{"size":4660,"mtime":1610257598096,"results":"64","hashOfConfig":"65"},{"size":832,"mtime":1608515322756,"results":"66","hashOfConfig":"65"},{"size":4293,"mtime":1610257428344,"results":"67","hashOfConfig":"65"},{"size":660,"mtime":1608496395660,"results":"68","hashOfConfig":"65"},{"size":3399,"mtime":1610155852169,"results":"69","hashOfConfig":"65"},{"size":4086,"mtime":1608501889945,"results":"70","hashOfConfig":"65"},{"size":1131,"mtime":1608482181286,"results":"71","hashOfConfig":"65"},{"size":1124,"mtime":1608482181286,"results":"72","hashOfConfig":"65"},{"size":2015,"mtime":1608482181282,"results":"73","hashOfConfig":"65"},{"size":2684,"mtime":1610256764259,"results":"74","hashOfConfig":"65"},{"size":406,"mtime":1608482181286,"results":"75","hashOfConfig":"65"},{"size":2257,"mtime":1609574330289,"results":"76","hashOfConfig":"65"},{"size":517,"mtime":1608482181286,"results":"77","hashOfConfig":"65"},{"size":8391,"mtime":1610256798278,"results":"78","hashOfConfig":"65"},{"size":362,"mtime":1608482181286,"results":"79","hashOfConfig":"65"},{"size":2410,"mtime":1608798130187,"results":"80","hashOfConfig":"65"},{"size":3491,"mtime":1608798650263,"results":"81","hashOfConfig":"65"},{"size":4335,"mtime":1610152537465,"results":"82","hashOfConfig":"65"},{"size":2323,"mtime":1609643190599,"results":"83","hashOfConfig":"65"},{"size":1215,"mtime":1609643855599,"results":"84","hashOfConfig":"65"},{"size":1083,"mtime":1609821465909,"results":"85","hashOfConfig":"65"},{"size":521,"mtime":1608482181286,"results":"86","hashOfConfig":"65"},{"size":2992,"mtime":1610268146706,"results":"87","hashOfConfig":"65"},{"size":3479,"mtime":1610179989518,"results":"88","hashOfConfig":"65"},{"size":4950,"mtime":1610251282779,"results":"89","hashOfConfig":"65"},{"size":3208,"mtime":1610268195974,"results":"90","hashOfConfig":"65"},{"size":4002,"mtime":1610251199609,"results":"91","hashOfConfig":"65"},{"size":3165,"mtime":1610262293010,"results":"92","hashOfConfig":"65"},{"size":7228,"mtime":1610268317232,"results":"93","hashOfConfig":"65"},{"size":4089,"mtime":1610268125143,"results":"94","hashOfConfig":"65"},{"size":4406,"mtime":1610180261292,"results":"95","hashOfConfig":"65"},{"size":4806,"mtime":1610255725043,"results":"96","hashOfConfig":"65"},{"size":3738,"mtime":1610245010990,"results":"97","hashOfConfig":"65"},{"size":2081,"mtime":1610245134640,"results":"98","hashOfConfig":"65"},{"size":186,"mtime":1610250868162,"results":"99","hashOfConfig":"65"},{"size":2466,"mtime":1610238578563,"results":"100","hashOfConfig":"65"},{"size":922,"mtime":1608482181286,"results":"101","hashOfConfig":"65"},{"size":2040,"mtime":1610255823010,"results":"102","hashOfConfig":"65"},{"size":1326,"mtime":1610238542726,"results":"103","hashOfConfig":"65"},{"size":3397,"mtime":1610238555666,"results":"104","hashOfConfig":"65"},{"size":1456,"mtime":1610251033357,"results":"105","hashOfConfig":"65"},{"size":2253,"mtime":1610244274119,"results":"106","hashOfConfig":"65"},{"size":2161,"mtime":1610242271378,"results":"107","hashOfConfig":"65"},{"size":2087,"mtime":1610244241491,"results":"108","hashOfConfig":"65"},{"size":1095,"mtime":1610256854020,"results":"109","hashOfConfig":"65"},{"size":4472,"mtime":1610255892870,"results":"110","hashOfConfig":"65"},{"size":5675,"mtime":1610238533893,"results":"111","hashOfConfig":"65"},{"size":1684,"mtime":1610173829392,"results":"112","hashOfConfig":"65"},{"size":2790,"mtime":1610238571347,"results":"113","hashOfConfig":"65"},{"size":550,"mtime":1610255853394,"results":"114","hashOfConfig":"65"},{"size":874,"mtime":1609574330297,"results":"115","hashOfConfig":"65"},{"size":778,"mtime":1610251135130,"results":"116","hashOfConfig":"65"},{"size":1900,"mtime":1610255835042,"results":"117","hashOfConfig":"65"},{"size":256,"mtime":1610239693120,"results":"118","hashOfConfig":"65"},{"size":1890,"mtime":1610238550790,"results":"119","hashOfConfig":"65"},{"size":1918,"mtime":1610263212060,"results":"120","hashOfConfig":"65"},{"size":2076,"mtime":1610238559382,"results":"121","hashOfConfig":"65"},{"size":717,"mtime":1608597658823,"results":"122","hashOfConfig":"65"},{"size":4326,"mtime":1610255900562,"results":"123","hashOfConfig":"65"},{"size":2309,"mtime":1610250487336,"results":"124","hashOfConfig":"65"},{"size":9220,"mtime":1610262332709,"results":"125","hashOfConfig":"65"},{"size":662,"mtime":1610263355222,"results":"126","hashOfConfig":"65"},{"size":270,"mtime":1610251148474,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},"1vgojqa",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"224"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"224"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"195"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"138"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"251"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"195"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/workhub/work/React-WorkerHub/src/graph/ipfs/index.js",["302","303","304"],"import React from 'react';\nimport IPFS from 'ipfs';\nimport { decode } from 'uint8-to-base64'\nimport { P2PStack } from './p2p-stack';\nimport { withContext } from \"with-context\";\nimport isElectron from 'is-electron'\nexport const IPFSContext = React.createContext({})\n\nexport const withIPFS = withContext(IPFSContext, \"ipfs\")\n\nexport const IPFSProvider = (props) => {\n\n    const [ isReady, setReady ] = React.useState(false)\n    const [ ipfs, setIPFS ] = React.useState(null)\n    let host = isElectron() ? `${localStorage.getItem('workhub-api')}.workhub.services` : window.location.hostname;\n\n    if(host == \"localhost\") host = `${localStorage.getItem('workhub-api')}.workhub.services`\n\n    React.useEffect(() => {\n        async function startIPFS(){\n            let node = ipfs;\n            if(ipfs){\n                console.info(\"=> IPFS Already Started\")\n            }else{\n                console.time('IPFS Started')\n\n                try{\n                    node = await IPFS.create({\n                        repo: 'workhub',\n                        config: {\n                            Addresses: {\n                                Swarm: [`/dns4/${host}/tcp/6969/wss/p2p-webrtc-star`],\n                                Bootstrap: []\n                            }\n                        },\n                        relay: {enabled: true, hop: {enabled: true}},\n                        libp2p: P2PStack(decode(props.swarmKey))\n                    })\n                    console.log(await node.id())\n                }catch(e){\n                    console.error(e)\n                }\n                console.timeEnd('IPFS Started')\n            }\n            setIPFS(node)\n            setReady(node != null)\n\n        }    \n        if(props.swarmKey) startIPFS()\n        return function cleanup(){\n            if(ipfs && ipfs.stop){\n                console.log('Stopping IPFS')\n                ipfs.stop().catch(err => console.error(err))\n                ipfs = null\n            }\n        }\n    }, [props.swarmKey])\n\n    return (\n        <IPFSContext.Provider value={{node: ipfs, isReady}}>\n            {props.children}\n        </IPFSContext.Provider>\n    )\n}\n\n/*export const useIPFS = (swarmKey) => {\n    console.log(\"SWARM KEY\", swarmKey)\n    swarmKey = decode(swarmKey)\n\n    React.useEffect(() => {\n        async function startIPFS(){\n            if(ipfs){\n                console.log('IPFS Already Started')\n            }else{\n                console.time('IPFS Started')\n                try{\n                    ipfs = await IPFS.create({\n                        repo: 'workhub',\n                        config: {\n                            Addresses: {\n                                Swarm: [\n                                   //'/ip4/127.0.0.1/tcp/9090/ws/p2p-webrtc-star'\n                                 '/dns4/thetechcompany.workhub.services/tcp/6969/ws/p2p-webrtc-star'\n                                ],\n                            }\n                        },\n                        relay: {enabled: true, hop: {enabled: true}},\n                        libp2p: P2PStack(swarmKey)\n                    })\n                    \n                    console.timeEnd('IPFS Started')\n\n                    setInterval(async () => {\n                        if(ipfs) console.log(await ipfs.swarm.peers())\n                    }, 2000)\n                }catch(err){\n                    console.error('IPFS init error: ', err)\n                    ipfs = null;\n                }\n            }\n        }\n\n        if(swarmKey) startIPFS()\n      /*  return function cleanup(){\n            if(ipfs && ipfs.stop){\n                console.log('Stopping IPFS')\n                ipfs.stop().catch(err => console.error(err))\n                ipfs = null\n            }\n        }\n    }, [ipfs])\n    return {ipfs}\n}*/\n\nexport const IPFSStack = async (swarmKey = 'L2tleS9zd2FybS9wc2svMS4wLjAvCi9iYXNlMTYvCmJlMGI3MmJkNGRmODAwNzkwYjU5ZWZhNzA3YjcxNzExYWIwYjNhNGI0OTAyMWNiNDUwMGQxMDZkMWUwZGVmNTg=') => {\n    console.log(\"IPFS Node Starting\")\n\n    let node = await IPFS.create({\n        repo: 'workhub-' + new Date().getTime(),\n        config: {\n          Addresses: {\n            Swarm: [\n                `/dns4/${localStorage.getItem('workhub-api')}.workhub.services/tcp/6969/wss/p2p-webrtc-star`,\n               '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star'\n            ],\n            Bootstrap: []\n          }\n        },\n      })\n    console.log(\"IPFS Node Started\")\n    console.log(await node.id())\n    //  node.swarm.connect('/dns4/thetechcompany.workhub.services/tcp/6969/ws/p2p-webrtc-star')\n    console.log(await node.swarm.localAddrs())\n    return node;\n}",["305","306"],"/home/workhub/work/React-WorkerHub/src/index.js",[],"/home/workhub/work/React-WorkerHub/src/controllers/DashboardController/index.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328"],"/home/workhub/work/React-WorkerHub/src/reducers/auth.js",[],["329","330"],"/home/workhub/work/React-WorkerHub/src/components/sidebar/index.js",["331","332","333","334"],"import React from 'react';\n\nimport {\n    Drawer,\n    Typography,\n    List,\n    ListItem,\n    IconButton,\n    Divider,\n    Paper\n} from '@material-ui/core';\n\nimport {\n  Contacts,\n    Notifications,\n    AccountTree,\n    Dashboard,\n    CalendarToday,\n    SupervisorAccount,\n    BusinessCenter,\n    Description,\n    EmojiNature,\n    Settings,\n    LocalLibrary,\n    ChevronLeft,\n    ChevronRight\n  } from '@material-ui/icons';\n\nimport { withRouter } from 'react-router-dom'\n\nimport WorkhubLogo from '../../assets/teal.png';\n\nfunction Sidebar(props){\n  const [ minimized, setMinimized ] = React.useState(true);\n    const menu = [\n        {\n          icon: <Dashboard />,\n          label: \"Dashboard\",\n          path: \"\"\n        },\n        {\n          icon: <CalendarToday />,\n          label: \"Calendar\",\n          path: \"/calendar\"\n        },\n        {\n          icon: <AccountTree />,\n          label: \"Projects\",\n          path: \"/projects\"\n        },\n        {\n          icon: <SupervisorAccount />,\n          label: \"Team\",\n          path: \"/team\"\n        },\n        {\n          icon: <BusinessCenter /> ,\n          label: \"Equipment\",\n          path: \"/equipment\"\n        },\n        {\n          icon: <Description />,\n          label: \"Files\",\n          path: \"/files\"\n        },\n        {\n          icon: <LocalLibrary />,\n          label: \"Documentation\",\n          path: '/kb'\n        },\n        {\n          icon: <Contacts />,\n          label: \"Contacts\",\n          path: \"/contacts\"\n        },\n        {\n          icon: <EmojiNature />,\n          label: \"Workflows\",\n          path: '/workflows'\n        }\n      ]\n\n    return (\n      <Paper style={{display: 'flex', backgroundColor: '#4f45e2',color:'rgb(222, 222, 222)', flexDirection: 'column', width: minimized ? 64 : 200, transition: 'width 200ms ease-in'}}>\n        <List style={{flex: 1, maxWidth: minimized ? 64 : 200, transition: 'max-width 200ms ease-in'}}> \n        <ListItem style={{position: 'relative', color: 'teal', padding: 12, fontSize: 20, justifyContent: minimized ? 'center': 'flex-start'}}>\n           <img src={WorkhubLogo} style={{height: 33, marginRight: minimized ? 0 : 8}} /> \n\n           {!minimized && <Typography>Workhub</Typography>}\n\n           <IconButton size=\"small\" style={{backgroundColor: 'green', zIndex: 9, position: 'absolute', right: -12, bottom: -12}} onClick={() => setMinimized(!minimized)}>\n              {minimized ? <ChevronRight style={{color: 'rgb(222,222,222)'}}/> : <ChevronLeft style={{color: 'rgb(222,222,222)'}} />}  \n           </IconButton>\n          \n        </ListItem>\n        <Divider />\n        {menu.map((x, ix) => (\n            <ListItem \n            className={menu.map((x) => x.path).indexOf(window.location.pathname.split(props.match.url)[1]) == ix ? 'selected menu-item': 'menu-item'}\n            onClick={() => props.history.push(`${props.match.url}${x.path}`)}\n            button >\n              {x.icon} \n              {!minimized && x.label}\n            </ListItem>\n        ))}\n        </List>\n        <Divider />\n        <ListItem style={{justifyContent: minimized ? 'center' : \"initial\"}} button onClick={() => props.history.push(`${props.match.url}/settings`)}>\n            <Settings style={{marginRight: minimized ? 0 : 12}} />\n            {!minimized && <Typography>Settings</Typography>}\n        </ListItem>\n        </Paper>\n    )\n}\n\nexport default withRouter(Sidebar)","/home/workhub/work/React-WorkerHub/src/components/dialogs/file-upload-dialog/index.js",[],["335","336"],"/home/workhub/work/React-WorkerHub/src/reducers/equipment.js",[],["337","338"],"/home/workhub/work/React-WorkerHub/src/reducers/team.js",[],"/home/workhub/work/React-WorkerHub/src/components/dialogs/file-dialog/index.js",[],"/home/workhub/work/React-WorkerHub/src/components/dialogs/file-preview-dialog/index.js",["339","340","341","342"],"import React from 'react';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    Typography\n} from '@material-ui/core';\n\nimport Spinner from 'react-spinkit'\n\n\nimport { GLBCard, PDFCard } from '@workerhive/react-ui'\n\nimport { connect } from 'react-redux';\nimport { withIPFS } from '../../../graph/ipfs';\n\nimport './index.css';\n\nfunction FilePreviewDialog(props){\n\n    const file = props.file || {}\n    const [data, setData] = React.useState(null)\n\n    const renderContent = () => {\n        if(data){\n            switch(file.extension){\n                case 'pdf':\n                    return (\n                        <PDFCard data={data}/>\n                    )\n                case 'glb':\n                    return (\n                        <GLBCard data={data}/>\n                    )\n                case 'png':\n                    return (\n                        <img style={{width: '33%', height: '100%'}} src={data} />\n                    )\n                default:\n                    return null;\n            }\n        }else{\n            return (\n                <div className=\"preview-loading\">\n                    <Spinner name=\"double-bounce\"/>\n                    <Typography variant=\"h6\" style={{fontWeight: 'bold'}}>Loading please wait...</Typography>\n                </div>\n            \n            )\n        }\n    }\n\n    React.useEffect( async () => {\n        if(data) URL.revokeObjectURL(data)\n\n        if(props.file && props.ipfs && props.ipfs.isReady){\n            console.log(\"Fetching\", props.file.cid)\n            let file =  props.ipfs.node.cat(props.file.cid)\n            let data = Buffer.from('')\n            for await (const chunk of file){\n              data = Buffer.concat([data, chunk])\n            }\n            console.log(\"Setting data\")\n            setData(URL.createObjectURL(new Blob([data])))\n        }\n    }, [props.file, props.ipfs])\n\n    const onClose = () => {\n        if(data) {\n            URL.revokeObjectURL(data)\n            setData(null)\n        }\n        if(props.onClose) props.onClose();\n    }\n\n    return (\n        <Dialog fullWidth maxWidth={data ? \"lg\" : 'md'} open={props.open}  onClose={onClose}>\n            <DialogTitle>{file.filename}</DialogTitle>\n            <DialogContent style={{display: 'flex', flexDirection: 'column', minHeight: 300, maxHeight: (data) ? 639 : 300, transition: 'max-height 200ms ease-out', alignItems: 'center'}}>\n                {renderContent()}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default withIPFS(FilePreviewDialog)",["343","344"],"/home/workhub/work/React-WorkerHub/src/reducers/files.js",[],"/home/workhub/work/React-WorkerHub/src/components/dialogs/converter-dialog/index.js",["345","346","347"],"import React from 'react';\n\nimport {\n    Forward\n} from '@material-ui/icons'\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    TextField\n} from '@material-ui/core';\n\nimport { getConverters, convertFile } from '../../../actions/fileActions';\n\nexport default function ConverterDialog(props){\n    const [ outputFormat, setOutputFormat ] = React.useState('')\n\n    const [ formats, setFormats ] = React.useState([])\n\n    React.useEffect(() => {\n   /*     getConverters().then((converters) => {\n            setFormats(converters.map((x) => ({\n                from: x.sourceFormat,\n                to: [x.targetFormat]\n            })))\n        })*/\n    }, [])\n\n    const convert = () => {\n        convertFile(props.selected.id, outputFormat.toLowerCase())\n        props.onClose();\n        setOutputFormat('')\n        \n    }\n\n    return (\n        <Dialog fullWidth open={props.open} onClose={props.onClose}>\n            <DialogTitle>Convert {props.selected && props.selected.name}</DialogTitle>\n            <DialogContent style={{display: 'flex', alignItems: 'center'}}>\n                <TextField \n                    fullWidth \n                    disabled\n                    label=\"From\" \n                    value={props.selected && props.selected.extension.toUpperCase()}/>\n                <Forward style={{marginLeft: 8, marginRight: 8}}/>\n                <FormControl fullWidth>\n                    <InputLabel>To</InputLabel>\n                    <Select value={outputFormat} onChange={(e) => {\n                        setOutputFormat(e.target.value) \n                    }} fullWidth>\n                        {props.selected && (formats.filter((a) => a.from == props.selected.extension)[0] || {to: []}).to.map((x) => (\n                            <MenuItem value={x}>{x.toUpperCase()}</MenuItem>\n\n                        ))}\n                    </Select>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>Cancel</Button>\n                <Button onClick={convert} color=\"primary\" variant=\"contained\">Start</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}",["348","349"],"/home/workhub/work/React-WorkerHub/src/reducers/calendar.js",[],["350","351"],"/home/workhub/work/React-WorkerHub/src/components/dialogs/plan-dialog/index.js",["352","353"],"import React from 'react';\n\nimport {\n    Dialog,\n    DialogContent,\n    DialogActions,\n    DialogTitle,\n    TextField,\n    Button,\n    Typography,\n    Menu,\n    MenuItem,\n    List,\n    ListItem,\n    Divider\n} from '@material-ui/core';\n\nimport {\n    Check\n} from '@material-ui/icons';\n\nimport {TeamCircles, FileDrop} from '@workerhive/react-ui';\nimport { KeyboardDateTimePicker } from '@material-ui/pickers'\nimport jwt_decode from 'jwt-decode';\nimport { connect } from 'react-redux'\nimport { withEditor } from '@workerhive/hive-flow';\nimport { attachFile, uploadFile } from '../../../actions/fileActions';\nimport moment from 'moment';\n\nimport './index.css';\n\nfunction PlanDialog(props){\n    const [ ID, setID ] = React.useState('')\n    const [ title, setTitle ] = React.useState('')\n    const [ description, setDescription ] = React.useState('')\n    const [ dueDate, setDueDate ] = React.useState(null);\n    const [ members, setMembers ] = React.useState([])\n    const [ attachments, setAttachments ] = React.useState([])\n\n    const [ memberAnchor, setMemberAnchor ] = React.useState(null);\n\n    React.useEffect(() => {\n        if(props.plan && props.plan.data){\n            if(props.plan.id) setID(props.plan.id)\n            if(props.plan.data.label) setTitle(props.plan.data.label)\n            if(props.plan.data.description) setDescription(props.plan.data.description)\n            console.log(\"MEMBERS\", props.plan.members)\n            if(props.plan.members) setMembers(Array.isArray(props.plan.members) ? props.plan.members : [])\n            if(props.plan.attachments) setAttachments(props.plan.data.attachments || [])\n            if(props.plan.data.dueDate) setDueDate(moment(new Date(props.plan.data.dueDate * 1000)))\n        }\n    }, [props.plan])\n\n    const onClose = () => {\n        setMembers([])\n        setID('')\n        setTitle('')\n        setDescription('')\n        setDueDate(null)\n        setAttachments([])\n        props.onClose()\n    }\n\n    const onSave = () => {\n        let plan = {\n            id: ID,\n            title: title,\n            description: description,\n            members: [...new Set(members)] || [],\n            dueDate: dueDate && dueDate.valueOf() / 1000,\n        }\n\n        \n        \n        if(props.onSave){\n            props.onSave(plan)\n            onClose();\n        }\n    }\n\n    const onDelete = () => {\n        if(props.onDelete && ID)props.onDelete(ID)\n        onClose();\n    }\n\n    const addFilesToPlan = (files) => {\n        if(files.length > 0){\n            for(var i = 0; i < files.length; i++){\n                props.uploadFile(files[i], (newFile) => {\n                    props.editor.attachFile(newFile.filename, newFile.cid)\n                    props.editor.updateNode(ID, (node) => {\n                        return {data: {\n                            attachments: (node.data.attachments || []).concat([{name: newFile.filename, cid: newFile.cid}])\n                        }}\n                    })\n                    setAttachments(attachments.concat([{\n                        name: newFile.filename,\n                        cid: newFile.cid\n                    }]))\n                })\n            }\n            console.log(files)\n        }\n    }\n\n    const toggleMembersMenu = (e) => {\n\n        setMemberAnchor(!memberAnchor ? e.currentTarget : null)\n\n    }\n\n    const toggleUser = (user) => {\n        console.log(ID)\n\n        \n        \n        let m = members.slice();\n        console.log(m, user, m.indexOf(user))\n        if(m.indexOf(user) > -1){\n            m.splice(m.indexOf(user), 1)\n            console.log(\"Removing \", )\n        }else{\n            m.push(user)\n        }\n            console.log([...new Set(m)])\n            setMembers([...new Set(m)])\n            //return {members: [...new Set(m)]}\n        \n    \n    }\n\n    return (\n\n        <Dialog fullWidth open={props.open} onClose={onClose}>\n            <FileDrop onDrop={addFilesToPlan} noClick>\n            {(isDragActive) => (\n                <>\n            <div>{isDragActive && (\n                <div style={{\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    top: 0,\n                    zIndex: 9,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    backgroundColor: 'rgba(255, 255, 255, 0.5)'\n                }} className=\"file-opacity\">\n                    <Typography variant=\"h6\" style={{fontWeight: 'bold'}}>Drop files here</Typography>\n                </div>\n            )}</div>\n            <DialogTitle>\n                <TextField value={title} onChange={(e) => setTitle(e.target.value)} fullWidth label=\"Title\" />\n            </DialogTitle>\n            <DialogContent className=\"plan-dialog__content\">\n                <div className=\"plan-info\">\n                    <TextField \n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        fullWidth \n                        label=\"Description\" \n                        rows={4} multiline rowsMax={6} />\n                    \n                    <div>\n                        <Typography style={{fontWeight: 'bold', marginTop: 4}} variant=\"subtitle1\">Attachments</Typography>\n                        {attachments.map((x) => (\n                            <div>{x.name}</div>\n                        ))}\n                    </div>\n                    <div>\n                        <Typography variant=\"subtitle1\">Members</Typography>\n                        <TeamCircles members={members} />\n                    </div>\n\n                </div>\n                <div className=\"plan-actions\">\n                    <Button \n                        onClick={() => {\n                            toggleUser(props.user.id)\n                        }}\n                        color={[...members].indexOf(props.user.id) > -1 ? \"\" : \"primary\"}\n                        variant=\"contained\">{[...members].indexOf(props.user.id) > -1 ? \"Leave\" : \"Join\"}</Button>\n                    <Button color=\"primary\" variant=\"contained\" onClick={(e) => {\n                        toggleMembersMenu(e);\n                    }}>Members</Button>\n                    <Menu \n                        onClose={() => setMemberAnchor(null)}\n                        transformOrigin={{vertical: 'top', horizontal: 'center'}}\n                        anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n                        open={memberAnchor} \n                        anchorEl={memberAnchor}>\n                            <Divider />\n                        <div style={{padding: 4}}>\n                        <TextField label=\"Name\" />\n                        </div>\n                        <List>\n                            {props.team.map((x) => (\n                                <ListItem button onClick={() => {\n                                   toggleUser(x.id)\n                                  \n                                }}>{[...members].indexOf(x.id) > -1 && <Check style={{marginRight: 8}}/>} {x.name}</ListItem>\n                            ))}\n                        </List>\n                        \n                    </Menu>\n                    <KeyboardDateTimePicker\n                        style={{marginTop: 4}}\n                        label=\"Due Date\"\n                        value={dueDate}\n                        onChange={(e) => {\n                            setDueDate(e)\n                        }}\n                        format={\"DD/MM/yyyy\"} />\n                    <Button color=\"primary\" variant=\"contained\" style={{marginTop: 4}}>Attachments</Button>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                {ID && (\n                    <Button onClick={onDelete} color=\"secondary\">Delete</Button>\n                )}\n                <Button onClick={onClose}>Cancel</Button>\n                <Button onClick={onSave} color=\"primary\" variant=\"contained\">Save</Button>\n            </DialogActions>\n            </>\n            )}\n        </FileDrop>\n        </Dialog>\n    );\n}\n\nexport default connect((state) => ({\n    user: jwt_decode(state.auth.token),\n    team: state.team.list,\n}), (dispatch) => ({\n    uploadFile: (file, cb) => dispatch(uploadFile(file, cb))\n}))(withEditor(PlanDialog))",["354","355"],"/home/workhub/work/React-WorkerHub/src/reportWebVitals.js",[],["356","357"],"/home/workhub/work/React-WorkerHub/src/components/plan/tree/branch.js",["358"],"import React from 'react';\n\nimport {\n    Typography,\n    IconButton\n} from '@material-ui/core'\n\nimport {\n    CheckCircle,\n    Publish,\n    Edit,\n    Add\n} from '@material-ui/icons'\n\nimport {\n    TreeItem\n} from \"@material-ui/lab\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './branch.css';\n\nconst useBranchStyles = makeStyles((theme) => ({\n    treeActions: {\n        opacity: 0,\n    },\n    labelRoot: {\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(1, 0),\n    },\n\n    labelText: {\n        flex: 1,\n        height: 50,\n        display: 'flex',\n        alignItems: 'center'\n    },\n    labelIcon: {\n        marginRight: 8\n    }\n}))\n\nexport default function Branch (props){\n    const classes = useBranchStyles()\n    const { status, ...other } = props;\n\n    const branchActions = [\n        {\n            icon: <Edit />,\n            action: () => {\n                if(props.onEdit)props.onEdit()\n            }\n        },\n        {\n            icon: <Add />,\n            action: () => {\n                if(props.onAdd)props.onAdd();\n            }\n        }\n    ]\n\n    const renderIcon = () => {\n        switch(props.data.status){\n            case 'COMPLETE':\n                return <CheckCircle style={{color: 'green'}}/>\n            case 'IN PROGRESS':\n                return <Publish style={{color: 'orange'}} />\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <TreeItem\n            className={['tree-branch']}\n            label={\n                <div className={'labelRoot'}>\n                    <div className={'labelIcon'}>\n                    {renderIcon()}\n                    </div>\n                   <Typography variant=\"subtitle1\" className={'labelText'}>\n                        {props.data.label} : ({props.children.length}) children ({props.total}) tasks\n                    </Typography> \n                    <div className={'treeActions'}>\n                        {branchActions.map((x) => (\n                            <IconButton onClick={(e) => {\n                                e.stopPropagation()\n                                x.action()\n                            }}>\n                                {x.icon}\n                            </IconButton>\n                        ))}\n                    </div>\n                </div>\n            }\n            {...other} />\n    )\n}","/home/workhub/work/React-WorkerHub/src/components/plan/tree/index.js",["359","360","361","362","363","364"],"import React from 'react';\n\nimport {\n    TreeView,\n    TreeItem,\n} from '@material-ui/lab'\n\n\nimport {\n  ArrowDropDown,\n  ArrowRight\n} from '@material-ui/icons'\n\nimport Branch from './branch';\n\nexport default function PlanTree(props){\n  const [ expanded, setExpanded ] = React.useState(['root'])\n\n  const { nodes, links } = props.graph || {};\n\n  const rootNodes = nodes.filter((x) => links.filter((a) => a.target == x.id).length == 0)\n\n\n\n\n    const renderBranch = (branch) => {\n      let _links = links.filter((a) => a.source == branch.id)\n      let _children = _links.map((x) => nodes.filter((a) => a.id == x.target)[0]) || []\n      \n      let _branches = _children.map((x) => renderBranch(x))\n\n      let count = _branches.map((x) => x.children.length + x.total).concat([0]).reduce((a,b) => a+b)\n      let completeCount = _branches.map((x) => x.complete.length + x.completed).concat([0]).reduce((a, b) => a+b)\n      console.log(count)\n      //let totalChildren = _children.length + _branches.reduce((a, b) => a.children.length + b.children.length)\n\n      return {\n        branch: (\n          <Branch \n            onEdit={() => props.onEdit(branch)}\n            onAdd={() => props.onAdd(branch)}\n            children={_children}\n            total={completeCount + \"/\" + (_children.length + count)}\n            nodeId={branch.id} \n            data={branch.data}>\n            {_branches.map((x) => x.branch)}\n          </Branch>\n        ),\n        children: _children,\n        complete: _children.filter((a) => a.data.status == \"COMPLETE\"),\n        completed: completeCount,\n        total: count\n      }\n      \n    }\n\n    const branches = rootNodes.map((x) => renderBranch(x))\n\n    const total = branches.map((x) => x.children.length + x.total).concat([0]).reduce((a,b) => a+b)\n\n    return (\n        <TreeView\n          multiSelect\n          expanded={expanded}\n          defaultCollapseIcon={<ArrowDropDown />}\n          defaultExpandIcon={<ArrowRight />}\n          onNodeToggle={(event, newExpanded) => {\n            console.log(event, newExpanded)\n            setExpanded(newExpanded)\n          }}>\n          <Branch \n            onAdd={() => props.onAdd()}\n            total={total}\n            children={branches}\n            nodeId=\"root\" \n            data={{label: props.title}}> \n            {branches.map((x) => x.branch)}\n          </Branch> \n        </TreeView>\n    )\n}\n\n/*\n\nconst StyledTreeItem = withStyles((theme) => ({\n    iconContainer: {\n      '& .close': {\n        opacity: 0.3,\n      },\n    },\n    group: {\n      marginLeft: 7,\n      paddingLeft: 18,\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\n    },\n\n  }))((props) => {\n      return(\n    <TreeItem {...props} label={(\n        <div className=\"tree-item\" style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n            {props.label}\n            <div style={{display: 'flex'}}>\n            <IconButton onClick={(e) => {\n                e.stopPropagation();\n                if(props.editChild) props.editChild()\n            }}>\n              <Edit />\n            </IconButton>\n            <IconButton onClick={(e) => {\n                e.stopPropagation()\n                props.addChild()\n            }}>\n                <Add />\n            </IconButton>\n            </div>\n        </div>\n    )} TransitionComponent={TransitionComponent}/>\n\n  )});\n  \n  const useStyles = makeStyles({\n    root: {\n      height: 264,\n      flexGrow: 1,\n      maxWidth: 400,\n    },\n  });*/",["365","366"],"/home/workhub/work/React-WorkerHub/src/components/dialogs/mutable-dialog/index.js",["367","368","369"],"/home/workhub/work/React-WorkerHub/src/components/foreign-input/index.js",[],"/home/workhub/work/React-WorkerHub/src/reducers/contacts.js",[],["370","371"],"/home/workhub/work/React-WorkerHub/src/reducers/admin.js",[],"/home/workhub/work/React-WorkerHub/src/reducers/dashboard.js",[],"/home/workhub/work/React-WorkerHub/src/views/Equipment/index.tsx",["372","373","374","375","376","377"],"/home/workhub/work/React-WorkerHub/src/views/Team/index.tsx",["378","379","380","381"],"import React from 'react';\n\nimport {\n  Paper,\n  Typography,\n  List,\n  ListItem\n} from '@material-ui/core';\n\nimport {\n  SupervisedUserCircle,\n  SupervisorAccount,\n  Schedule,\n  Edit,\n  Delete,\n  Share\n} from '@material-ui/icons';\n\n\nimport { useMutation } from \"@apollo/client\";\nimport { getSignupLink, removeTeamMember, addTeamMember, updateTeamMember, getTeam } from '../../actions/teamActions';\nimport { PermissionForm, SearchTable, MoreMenu, Header } from '@workerhive/react-ui'\nimport { connect } from 'react-redux';\nimport jwt_decode from 'jwt-decode'\nimport './index.css';\n\nexport interface TeamsProps{\n  getTeam: Function;\n  removeTeamMember: Function;\n  addTeamMember: Function;\n  updateTeamMember: Function;\n  type: any;\n  permissions: any;\n  team: any;\n  user: any;\n}\n\nconst Teams : React.FC<TeamsProps> = (props) => {\n  const [selected, setSelected] = React.useState(null)\n\n  React.useEffect(() => {\n    props.getTeam()\n  }, [])\n\n  console.log(props.user)\n\n  return (\n    <>\n    <Header\n      tabs={[]}\n      onTabSelect={(tab : any) => {\n        // setSelectedTab(tab)\n        //  props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n      }}\n      selectedTab={''}\n      title={\"Team\"} />\n    <PermissionForm\n      onSave={(data : any) => {\n        if (data.id) {\n          let d = Object.assign({}, data);\n          delete d.id;\n          props.updateTeamMember(data.id, d)\n\n        } else {\n          props.addTeamMember(data)\n        }\n      }}\n      onClose={() => setSelected(null)}\n      selected={selected}\n      type={props.type}\n      permissions={props.permissions}>\n      <SearchTable\n        filter={(item : any, search : any) => item.name.indexOf(search) > -1}\n        data={props.team}\n        renderItem={(item : any) => (\n          <div className=\"team-item\">\n            <ListItem button >\n              {item.status === \"pending\" ? <Schedule /> : item.admin ? <SupervisorAccount /> : <SupervisedUserCircle />}\n              <Typography style={{ marginLeft: 12 }}>\n                {item.name}\n              </Typography>\n            </ListItem>\n            <MoreMenu\n              menu={(item.status === \"pending\" ? [\n                {\n                  icon: <Share />,\n                  label: \"Share Signup\",\n                  action: () => {\n                    getSignupLink(item.id).then((link : any) => {\n                      console.log(\"SIGNUP TOKEN\", link)\n                    })\n\n                  }\n                }\n              ] : []).concat(props.user.admin && [{\n                label: \"Edit\",\n                icon: <Edit />,\n                action: () => setSelected(item)\n              },\n              {\n                label: \"Delete\",\n                color: 'red',\n                icon: <Delete />,\n                action: () => props.removeTeamMember(item.id)\n              }])} />\n          </div>\n        )} />\n    </PermissionForm>\n    </>\n  )\n}\n\nexport default connect((state : any) => ({\n  user: jwt_decode(state.auth.token),\n  team: state.team.list,\n  type: state.dashboard.types.filter((a : any) => a.name === \"TeamMember\"),\n  permissions: state.dashboard.permissions.filter((a: any) => a.type === \"TeamMember\")\n}), (dispatch : any) => ({\n  getTeam: () => dispatch(getTeam()),\n  addTeamMember: (member : any) => dispatch(addTeamMember(member)),\n  removeTeamMember: (id : any) => dispatch(removeTeamMember(id)),\n  updateTeamMember: (id : any, member : any) => dispatch(updateTeamMember(id, member))\n}))(Teams)\n",["382","383"],"/home/workhub/work/React-WorkerHub/src/views/KnowledgeBase/index.tsx",["384","385","386","387","388","389","390","391","392","393","394","395","396","397"],"import React from 'react';\n\nimport { \n    Paper\n} from \"@material-ui/core\"\n\nimport {\n    TreeView,\n    TreeItem\n} from \"@material-ui/lab\"\n\nimport Editor from 'rich-markdown-editor';\n\nimport { getKnowledge, addKnowledge, updateKnowledge } from '../../actions/knowledgeActions'\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom'\nimport './index.css';\nimport { ExpandMore, ExpandLess } from '@material-ui/icons';\n\nimport { DocumentEditor, MutableDialog, CRUDTree } from \"@workerhive/react-ui\"\n\nimport _ from 'lodash';\n\nexport interface KnowledgeBaseProps {\n    getKnowledge: Function;\n    addKnowledge: Function;\n    updateKnowledge: Function;\n    match: any;\n    history: any;\n    list: any;\n}\n\nconst KnowledgeBase : React.FC<KnowledgeBaseProps> = (props) => {\n\n    const [ dialogOpen, openDialog ] = React.useState(false);\n    const [ editorData, setEditorData ] = React.useState('')\n    const [ editorMap, setEditorMap ] = React.useState('')\n\n    const [ modalData, setModalData ] = React.useState({})\n\n    const [branches, setBranches ] = React.useState([\n        \"Flows\",\n        \"Graphs\",\n        \"Libraries\"\n    ])\n\n    React.useEffect(() => {\n        props.getKnowledge()\n     //   props.addKnowledge({title: \"Linked Data Graphs\", description: \"The start of an explanation\"})\n    }, [])\n\n    const update = _.debounce((editorData, val) => {\n        console.log(\"DEBOUNCE\")\n        props.updateKnowledge(editorData.id, {content: val})\n    }, 333)\n\n    return (\n        <div className=\"knowledge-base\">\n            <MutableDialog \n                open={dialogOpen}\n                data={modalData}\n                onSave={(data : any) => {\n                    if(data.id){\n                        props.updateKnowledge(data.id, data)\n                    }else{\n                        data.content = \"## \" + data.title;\n                        props.addKnowledge(data)\n                    }\n                    openDialog(false);\n                    console.log(data)\n                }}\n                onClose={() => openDialog(false)} \n                title={\"Knowledge\"}\n                structure={{\n                    title: \"String\",\n                    description: \"String\" \n                }} />\n            <Paper className=\"knowledge-base__menu\">\n                <CRUDTree \n                    onClick={(item : any) => {\n                      //  setEditorData(item)\n                        setEditorMap(item.content)\n                        props.history.push(`${props.match.url}/${item.id}`)\n                        console.log(item)\n                    }}\n                    onEdit={(item : any) => {\n                        setModalData(item)\n                        openDialog(true)\n                    }}\n                    onAdd={(item : any) => {\n                        if(item) setModalData({parent: item.id})\n                        openDialog(true)\n                    }}\n                    value={props.list} />\n            </Paper>\n            <div className=\"knowledge-base__editor\">\n            <Switch>\n                <Route path={`${props.match.url}/:id`} render={(_props) => {\n\n                    let kbItem = props.list.filter((a : any) => a.id == _props.match.params.id)\n\n                    if(kbItem.length > 0 && kbItem[0].content){\n                        kbItem = Object.assign({}, kbItem[0]);\n                        console.log(kbItem)\n                    return (\n                        <div>\n                        <DocumentEditor \n                            data={kbItem}\n                            links={props.list}\n                            onChange={(value : any) => {\n                            if(kbItem.id){\n                                update(kbItem, value)\n                                \n                                setEditorMap(value)\n                            }\n                        }}/>\n                            <div>\n                            {((kbItem && kbItem.content.match(/\\[([^\\[\\]]*)\\]\\((.*?)\\)/gm)) || []).map((x : any) => {\n                                let data = x.match(/\\[([^\\[\\]]*)\\]\\((.*?)\\)/)\n                                return(\n                                    <div>\n                                        {data[1]}\n                                    </div>\n                                )\n                            })}\n                            </div>\n                        </div>\n                        \n\n                    )\n                        }\n                }} />\n            </Switch>\n\n            \n            </div>\n        \n        </div>\n    )\n}\n\nexport default connect((state : any) => ({\n    list: state.knowledge.kb\n}), (dispatch: any) => ({\n    getKnowledge: () => dispatch(getKnowledge()),\n    addKnowledge: (input : any) => dispatch(addKnowledge(input)),\n    updateKnowledge: (id : string, update : any) => dispatch(updateKnowledge(id, update))\n}))(KnowledgeBase)",["398","399"],"/home/workhub/work/React-WorkerHub/src/views/Files/index.tsx",["400","401","402","403","404","405","406"],"/home/workhub/work/React-WorkerHub/src/views/Contacts/index.tsx",["407","408","409","410","411","412"],"import React from 'react';\n\nimport { ListItem, Typography } from '@material-ui/core';\n\nimport { getContactOrganisations, getContacts, addContact, updateContact } from '../../actions/contactActions';\n\nimport { Header, PermissionForm, SearchTable, MoreMenu } from \"@workerhive/react-ui\"\nimport jwt_decode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\n\n\nexport interface ContactProps {\n  location: any;\n  history: any;\n  match: any;\n  user: any;\n  contacts: any;\n  organisations: any;\n  getContacts: Function;\n  updateContact: Function;\n  addContact: Function;\n  permissions: any;\n  type: any;\n  removeProject: Function;\n}\n\nconst Contacts : React.FC<ContactProps> = (props) => {\n\n  const query_string = qs.parse(props.location.search, {ignoreQueryPrefix: true})\n\n\n    const [ selected, setSelected ] = React.useState(null)\n\n    React.useEffect(() => {\n      props.getContacts();\n    //  props.getContactOrganisations();\n    }, [])\n\n    return (\n        <div style={{flex: 1, display: 'flex', flexDirection: 'column'}}>\n              <Header \n                tabs={[\"Contacts\", \"Organisations\"]}\n                onTabSelect={(tab : any) => {\n\n                    query_string.filter = tab;\n                    props.history.push(`${window.location.pathname}?${qs.stringify(query_string)}`)\n\n                    //setSelectedTab(tab)\n                    //props.history.push(`${props.match.url}/${tab.toLowerCase()}`)\n                }}\n                selectedTab={query_string.filter && query_string.filter.toString().toUpperCase() || 'CONTACTS'}\n                title={\"Contacts\"} />\n            <PermissionForm \n                onClose={() => {   \n                    setSelected(null)\n                }}\n                onSave={(obj : any, data : any) => {\n                    if(obj.id){\n                        let d = Object.assign({}, data);\n                        delete d.id\n                        props.updateContact(obj.id, d)\n                      }else{\n                        props.addContact(data)\n                      }\n                }}\n                selected={selected}\n                permissions={props.permissions}\n                type={props.type}>\n                <SearchTable data={(!query_string.filter || query_string.filter.toString().toLowerCase() == \"contacts\") ? props.contacts : props.organisations || []}\n                 renderItem={(item : any) => [\n                    <div className=\"project-item\">\n                      <ListItem button onClick={() => {\n                        props.history.push(`${props.match.url}/${item.id}`)\n                        }}>\n                        <Typography style={{flex: 1}} variant=\"subtitle1\">{item.name}</Typography>\n                      </ListItem>\n                      <MoreMenu \n                        menu={props.user.admin && [\n                          {\n                            label: \"Edit\",\n                            action: () => setSelected(item)\n                          },\n                          {\n                            label: \"Delete\",\n                            color: 'red',\n                            action: () => props.removeProject(item.id)\n                          }\n                        ]} />\n                    </div>\n                  ]}\n                />\n            </PermissionForm>\n\n        </div>\n    )\n}\n\nexport default connect((state : any) => ({\n    user: jwt_decode(state.auth.token),\n    contacts: state.contacts.list,\n    organisations: state.contacts.organisations,\n    type: state.dashboard.types.filter((a: any) => a.name == \"Contact\"),\n    permissions: state.dashboard.permissions.filter((a: any) => a.type == \"Projects\")\n}), (dispatch : any) => ({\n    addContact: (data :any) => dispatch(addContact(data)),\n    updateContact: (obj: any, data : any) => dispatch(updateContact(obj, data)),\n    getContacts: () => dispatch(getContacts()),\n    getContactOrganisations: () => dispatch(getContactOrganisations()),\n}))(Contacts)",["413","414"],"/home/workhub/work/React-WorkerHub/src/views/Calendar/index.tsx",[],["415","416"],"/home/workhub/work/React-WorkerHub/src/views/ProjectView/index.tsx",["417","418","419","420","421","422"],"/home/workhub/work/React-WorkerHub/src/views/Projects/index.tsx",["423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443"],"/home/workhub/work/React-WorkerHub/src/views/Settings/index.tsx",["444","445","446","447","448","449","450","451","452","453","454","455"],"import React from 'react';\n\nimport {\n  Paper,\n  Divider,\n  Typography,\n  List,\n  IconButton,\n  Button,\n  ListItem\n} from '@material-ui/core';\n\nimport { MoreVert } from '@material-ui/icons'\n\nimport { CRUDList, AccordionList } from '@workerhive/react-ui'\n\nimport { deleteStore, updateStore, addStore, getStoreTypes, getStores } from '../../actions/adminActions';\nimport { getConverters, installConverter } from '../../actions/fileActions';\nimport { connect } from 'react-redux';\n\nexport interface SettingsProps {\n  getStores: Function;\n  deleteStore: Function;\n  addStore: Function;\n  updateStore: Function;\n  stores: any;\n  history: any;\n  types: any;\n}\n\nconst Settings : React.FC<SettingsProps> = (props) => {\n\n  const [ converters, setConverters ] = React.useState([])\n  const [ stores, setStores ] = React.useState([])\n\n  React.useEffect(() => {\n    getStoreTypes().then((types : any) => {\n      console.log(\"TYOES\", types)\n      setStoreTypes(types);\n    })\n\n    props.getStores();\n  \n    /*getConverters().then((converters) => {\n      console.log(converters)\n      setConverters(converters)\n    })*/\n  }, [])\n\n  const roles = [\n    {\n      name: \"Admin\"\n    },\n    {\n      name: \"Editor\"\n    },\n    {\n      name: \"User\"\n    }\n  ]\n\n  const [ storeTypes, setStoreTypes ] = React.useState([]);\n\n  const settingItems = [\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Add-ons</Typography>,\n      body: <CRUDList title={\"Add-ons\"} data={converters} />\n    },\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Connections</Typography>,\n      body: (\n        <CRUDList \n          title={\"Connections\"} \n          onDelete={(obj : any) => {\n            if(obj && obj.id){\n              props.deleteStore(obj.id)\n            }\n            \n          }}\n          onSave={(ob : any) => {\n            let obj = Object.assign({}, ob)\n            if(!obj.id){\n              props.addStore(obj)\n            }else{\n              const id = obj.id;\n              delete obj.id;\n              console.log(\"UPDATE STORE\", id, obj)\n\n              props.updateStore(id, obj)\n            }\n          }}\n          type={{name: 'String', type: {type: 'Select', items: storeTypes, key: 'id'}, host: 'String', user: 'String', pass: 'Password', dbName: 'String'}} \n          data={props.stores} />\n      )\n    },\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Roles</Typography>,\n      body: <CRUDList title={\"Roles\"} type={{name: 'String', permissions: {type: 'Table', items: props.types}}} data={roles} />\n    },\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Data Flow</Typography>,\n      body: (\n        <div style={{flex: 1, display: 'flex', flexDirection: 'column'}}>\n          <Typography color=\"secondary\">Warning: changing these settings is dangerous don't enter unless you know what you're doing</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => props.history.push(`/dashboard/admin`)}>Go to editor</Button>\n        </div>\n      )\n    },\n    {\n      title: <Typography variant=\"h6\" style={{display: 'flex'}}>Data types</Typography>,\n      body: (\n        <CRUDList title={\"Types\"} type={{name: 'String', def: 'KV'}} data={props.types} \n          onSave={(obj : any) => { \n            console.log(obj) \n          }} />   \n      )\n    }\n  ]\n\n  return (\n    <div style={{flex: 1, marginTop: 12}}>\n      <div style={{display: 'flex', flexDirection: 'column', padding: 8}}>\n        <AccordionList items={settingItems} />\n\n        {/*<List>\n            {converters.map((x) => (\n              <ListItem style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                {x.name}\n                {x.installed ? (<Typography>Installed</Typography>): (<Button onClick={() => {\n                  installConverter(x.id)\n                }} color=\"primary\" variant=\"contained\">Install</Button>)}\n              </ListItem>\n            ))}\n              </List>*/}\n    \n      </div>\n      \n    </div>\n  );\n}\n\nexport default connect((state : any) => ({\n  types: state.dashboard.types,\n  stores: state.admin.stores,\n}), (dispatch: any) => ({\n  getStores: () => dispatch(getStores()),\n  addStore: (store : any) => dispatch(addStore(store)),\n  updateStore: (id : any, store : any) => dispatch(updateStore(id, store)),\n  deleteStore: (id : any) => dispatch(deleteStore(id))\n}))(Settings)",["456","457"],"/home/workhub/work/React-WorkerHub/src/views/Admin/index.tsx",["458"],"import React from 'react';\n\nimport { cloneDeep } from 'lodash';\nimport * as TypeDefNode from '../../nodes/TypeDefNode'\nimport * as MSSQLNode from '../../nodes/MSSQLNode';\nimport * as MSSQLServer from '../../nodes/MSSQLServerNode';\nimport * as MongoServer from '../../nodes/MongoDBServerNode';\n\nimport { getTypes, getIntegrationMap, updateIntegrationMap} from '../../actions/adminActions'\nimport { connect } from 'react-redux';\nimport HiveEditor, { HiveProvider, NodePanel } from '@workerhive/hive-flow';\nimport '@workerhive/hive-flow/dist/index.css';\nimport './index.css'\nimport { IconButton } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons';\n\nexport interface AdminProps{\n    getTypes: Function;\n    stores: any;\n    types: any;\n    history: any;\n\n}\n\nconst Admin : React.FC<AdminProps> = (props) => {\n\n    React.useEffect(() => {\n        props.getTypes()\n        \n    }, [])\n\n    const [ nodes, setNodes ] = React.useState<Array<any>>([])\n    const [ links, setLinks ] = React.useState<Array<any>>([])\n\n    React.useEffect(() => {\n        getIntegrationMap().then((integrations : any) => {\n            if(integrations){\n                if(integrations.nodes) setNodes(integrations.nodes.map((x: any) => {\n                    let y = cloneDeep(x)\n                    delete y.__typename;\n                    delete y.position.__typename;\n                    return y;\n                }).slice());\n                if(integrations.links) setLinks(integrations.links.map((x: any) => {\n                    let y = cloneDeep(x)\n                    delete y.__typename;\n                    return y;\n                }).slice());\n            }\n        })\n    }, [])\n\n\n    const updateNodes = (nodes : any) => {\n        updateIntegrationMap(nodes, links)\n        setNodes(nodes)\n    }\n\n    const updateLinks = (links : any) => {\n        updateIntegrationMap(nodes, links)\n        setLinks(links)\n    }\n\n    console.log(props.stores);\n\n    return (\n        <div className=\"admin-view\">\n        <IconButton onClick={() => props.history.push('/dashboard/settings')} style={{position: 'absolute', left: 12, top: 12, zIndex: 9}}>\n            <ArrowBack />\n        </IconButton>\n        <HiveProvider store={{\n            nodes: (props.types || []).concat(props.stores || []).concat(nodes),\n            links: links,\n            statusColors: {\n                'typedef': 'green',\n                'adapter': 'yellow',\n                'datasource': 'orange'\n            },\n            exploreNode: () => {},\n            onNodeAdd: (node : any) => {\n                node.data.status = 'adapter';\n                let n = nodes.concat([node])\n                updateNodes(n)\n            },\n            onLinkAdd: (link : any) => {\n                let l = links.concat([link])\n                updateIntegrationMap(nodes, l)\n                updateLinks(l)\n            },\n            onNodeUpdate: (id : any, node : any) => {\n                let n = nodes.slice()\n                let ix = n.map((x : any) => x.id).indexOf(id);\n                n[ix] = {\n                    ...n[ix], \n                    ...node\n                }\n                updateNodes(n)\n            },\n            onNodeRemove: (node : any) => {\n                let n = nodes.slice().filter((a : any) => node.map((x : any) => x.id).indexOf(a.id) < 0);\n                updateNodes(n)\n                console.log(node)\n            },\n            onLinkRemove: (link : any) => {\n                let l = links.slice().filter((a : any) => link.map((x : any) => x.id).indexOf(a.id) < 0);\n                updateLinks(l);\n            },\n            nodeTypes: [MongoServer, TypeDefNode, MSSQLNode, MSSQLServer]\n        }}>\n            {(editor : any) => [\n            <NodePanel />,\n            <HiveEditor   />\n            ]}\n\n      \n        </HiveProvider>\n       \n        </div>\n    )\n}\n\nexport default connect(\n    (state: any) => ({\n        stores: (state.admin.stores || []).map((x : any, ix : number) => ({\n            id: x.id,\n            type: `${x.type.id} server`,\n            data: {\n                label: x.name,\n                status: 'DataSource'\n            },\n            position: {\n                x: 300 + (ix * 200),\n                y: 700\n            }\n        })),\n        types: (state.dashboard.types||[]).map((x : any, ix : number) => ({\n            id: x.name.toLowerCase(),\n            type: 'typeDef',\n            data: {\n                label: x.name,\n                typedef: x.typeDef,\n                status: 'TypeDef',\n\n            },\n            status: 'TypeDef',\n            position: {\n                x: 200 + (ix * 200),\n                y: 300\n            },\n            draggable: false\n        }))\n    }),\n    (dispatch : any) => ({\n        getTypes: () => dispatch(getTypes())\n    })\n)(Admin)",["459","460"],"/home/workhub/work/React-WorkerHub/src/views/Login/index.tsx",["461","462","463","464"],"import React from 'react';\n\nimport {\n    TextField,\n    Button,\n    InputAdornment,\n    Paper,\n    Typography,\n    Divider\n} from '@material-ui/core'\n\nimport isElectron from 'is-electron';\nimport { useMutation } from '@apollo/client';\nimport { getNodeConf, login, setToken } from '../../actions/authActions';\nimport { connect } from 'react-redux';\nimport HubSetup from './hub-setup'\nimport WorkhubLogo from '../../assets/teal.png'\n\nimport './index.css';\n\n\nexport interface LoginProps {\n    getNodeConf: Function;\n    setToken: Function;\n    history: any;\n}\n\nconst Login : React.FC<LoginProps> = (props) => {\n    const [ error, setError ] = React.useState<boolean>(false);\n\n    const [ workhub, setWorkhub ] = React.useState(localStorage.getItem('workhub-api'))\n    const [ username, setUsername ] = React.useState('')\n    const [ password, setPassword ] = React.useState('')\n\n\n    const tryLogin = () => {\n        login(username, password).then((r) => {\n            console.log(r)\n            if(r.token){\n                props.getNodeConf()\n                props.setToken(r.token)\n                props.history.push('/dashboard')\n            }else if(r.error){\n                setError(r.error)\n            }\n        })\n    }\n\n    const renderLogin = () => {\n        return (\n            <div className=\"login-view\">\n                <div className=\"image-banner\">\n           \n                </div>\n                <Paper style={{display: 'flex', flex: 0.3, flexDirection: 'column', padding: 8}}>\n                    <div style={{display: 'flex', alignItems: 'center', paddingBottom: 8}}>\n                        <img style={{height: 70, marginRight: 12}} src={WorkhubLogo} />\n                        <Typography style={{color: 'teal'}} variant=\"h4\">WorkHub</Typography>\n    \n                    </div>\n                    <Divider style={{marginBottom: 22}} />\n    \n                {isElectron() && (\n                    <TextField  \n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">.workhub.services</InputAdornment>\n                        }}\n                        disabled\n                        margin=\"normal\"\n                        value={workhub}\n                        onChange={e => {\n                            setWorkhub(e.target.value)\n                            localStorage.setItem('workhub-api', e.target.value)\n                        }}\n                        label=\"Workhub URL\"\n                        />\n                )}\n                <TextField \n                    margin=\"normal\"\n                    error={error}\n                    label=\"Username\" \n                    value={username} \n                    onChange={(e) => setUsername(e.target.value)}/>\n                <TextField \n                    margin=\"normal\"\n                    error={error}\n                    label=\"Password\" \n                    type=\"password\" \n                    value={password} \n                    onKeyDown={(e) => {if(e.keyCode == 13) {tryLogin()}}}\n                    onChange={(e) => setPassword(e.target.value)}/>\n                <Button \n                    onClick={tryLogin}\n                    style={{marginTop: 33}} \n                    color=\"primary\" \n                    variant=\"contained\">Login</Button>\n                </Paper>\n    \n            </div>\n        )\n    }\n\n    return renderLogin() /*isElectron() && (!workhub || workhub.length < 1) ? (\n        <HubSetup onHub={(url) => {\n            setWorkhub(url)  \n        }}/>\n    ) : renderLogin()*/\n\n   \n}\n\nexport default connect(null, (dispatch : any) => ({\n    setToken: (token : string) => dispatch(setToken(token)),\n    getNodeConf: () => dispatch(getNodeConf())\n}))(Login)",["465","466"],"/home/workhub/work/React-WorkerHub/src/views/Login/hub-setup.tsx",["467"],"/home/workhub/work/React-WorkerHub/src/tabs/project/team.tsx",[],"/home/workhub/work/React-WorkerHub/src/actions/teamActions.ts",[],"/home/workhub/work/React-WorkerHub/src/reducers/projects.js",[],"/home/workhub/work/React-WorkerHub/src/nodes/MongoDBServerNode.tsx",["468","469"],"import React from 'react'\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\n\nexport const type = 'mongo server'\n\nconst _modal = (props) => {\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField label=\"Connection Name\" value={props.node.data.label} onChange={(e) => {\n            props.editor.updateNode(props.node.id, (node) => {\n                node.data.label = e.target.value;\n                return node;\n            })\n        }}/>\n        <TextField label=\"Host IP:Host Port\" value={props.node.data.host} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.host = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Database Name\" value={props.node.data.db} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.db = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Username\" value={props.node.data.username} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.username = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Password\" type=\"password\" value={props.node.data.password} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.password = e.target.value;\n            return node;\n          })\n        }} />\n    </div>\n  )\n}\n\nexport const modal = withEditor(_modal)\n\nexport interface NodeProps{\n  editor: any;\n  id: any;\n  data: any;\n}\n\nconst _node : React.FC<NodeProps> = (props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <span style={{fontSize: 11}}>MongoDB</span>\n        <span>{props.id && props.data.label || \"MongoDB Server\"}</span>\n     </div>\n    </NodeWrapper>\n    )\n}\n\nexport const node = withEditor(_node)","/home/workhub/work/React-WorkerHub/src/actions/authActions.ts",[],"/home/workhub/work/React-WorkerHub/src/actions/contactActions.ts",[],"/home/workhub/work/React-WorkerHub/src/tabs/project/files.tsx",["470","471","472","473"],"import React from 'react';\n\nimport {\n    Add\n} from '@material-ui/icons';\n\nimport {\n    Fab,\n    List,\n    ListItem\n} from '@material-ui/core';\n\nimport { useMutation } from '@apollo/client';\nimport { YContext } from '../../graph/yjs';\n\nimport { FileBrowser } from '@workerhive/react-ui';\n\nimport { attachFile } from '../../actions/fileActions';\nconst FileDialog = require('../../components/dialogs/file-dialog')\n\nexport interface FileTabProps {\n    y: any;\n    project: any;\n}\n\nexport const FileTab : React.FC<FileTabProps> = (props) => {\n\n    const [ dialogOpen, openDialog ] = React.useState(false)\n    const [ files, setFiles ] = React.useState([])\n\n    React.useEffect(() => {\n        if(props.y){\n            console.log(\"Y\", props.y.toJSON())\n            setFiles(props.y.toJSON()['attachments'] || [])\n        }\n    }, [props.y])\n\n    return (\n        <div style={{flex: 1, display: 'flex', position: 'relative'}}>\n            <FileBrowser loading={false} title={props.project.name} files={files}/>\n            <FileDialog onAttach={(selected : any) => {\n                for(var k in selected){\n                    attachFile(props.project.id, k);\n                    \n                }\n    \n            }} open={dialogOpen} onClose={() => openDialog(false)} />\n            <Fab style={{position: 'absolute', bottom: 12, right: 12}} color=\"primary\" onClick={() => openDialog(true)}>\n                <Add />\n            </Fab>\n\n        </div>\n    )\n}",["474","475"],"/home/workhub/work/React-WorkerHub/src/actions/projectActions.ts",[],["476","477"],"/home/workhub/work/React-WorkerHub/src/graph/index.ts",["478","479","480"],"/home/workhub/work/React-WorkerHub/src/actions/knowledgeActions.ts",[],["481","482"],"/home/workhub/work/React-WorkerHub/src/views/Dashboard/index.tsx",[],["483","484"],"/home/workhub/work/React-WorkerHub/src/nodes/ProjectItemNode.tsx",["485","486","487","488","489","490","491","492","493","494","495"],"import React from 'react'\n\nimport {\n  Autocomplete\n} from '@material-ui/lab';\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\n\nimport { getColumns, getTables, getViews } from '../actions/adminActions'\nimport async from 'async';\nimport moment from 'moment';\nimport './MSSQLNode.css';\n\nexport const type = 'mssqlAdapter'\n\nexport const modal = withEditor((props) => {\n\n  const [ tables, setTables ] = React.useState([])\n\n  const [ table, setTable ] = React.useState(null)\n\n  const [ columns, setColumns ] = React.useState([])\n\n  React.useEffect(() => {\n    let source = getSource();\n    getTables(source.id).then((tables) => {\n      setTables(tables)\n    })\n    console.log(getSource())\n  }, [])\n\n  const getSource = () => {\n      let links = props.editor.links.filter((a) => a.source == props.node.id)\n      if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.target)[0])\n        if(nodes && nodes.length > 0){\n            return nodes[0]\n        }\n      }\n  }\n\n  const renderFields = () => {\n    let links = props.editor.links.filter((a) => a.target == props.node.id)\n    if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.source)[0])\n        if(nodes && nodes.length > 0){\n            let type = nodes[0].data.typedef;\n            let ret : Array<any> = []\n            for(var k in type){\n                let changeKey = k\n                ret.push(\n                <div style={{marginTop: 4, display: 'flex', alignItems: 'center'}}>\n                    <div style={{width: 100}}>\n                      {k}\n                    </div>: \n                    <select \n                      value={props.node && props.node.data && props.node.data.provides && props.node.data.provides[k]}\n                      onChange={(e) => {\n                    \n                        props.editor.updateNode(props.node.id, (node) => {\n                          if(!node.data.provides) node.data.provides = {}\n                          console.log(e.target.value, \" provides \", changeKey)\n                          node.data.provides[changeKey] = e.target.value;\n                          return node;\n                        })\n                      }}>\n                      {(props.node.data.availableColumns || []).concat([{name: \"N/A\"}]).map((x) => (\n                        <option value={x.name}>\n                          {x.name}\n                        </option>))}\n                      </select>\n                </div>\n                )\n            }\n            return ret;\n        }\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField disabled error={!getSource()} label=\"Connection Name\" value={getSource().data.label}/>\n\n        <Autocomplete \n          value={props.node.data.table}\n          onChange={(e, newVal) => {\n            console.log(e, newVal)\n            if(newVal && newVal.name){\n           // setTable(newVal)\n              props.editor.updateNode(props.node.id, (node) => {\n                node.data.table = newVal;\n                return node;\n              })\n              getColumns(getSource().id, newVal.name).then((r) => {\n                console.log(\"Searching for cols\", newVal.name, r)\n                props.editor.updateNode(props.node.id, (node) => {\n                  node.data.availableColumns = r;\n                  node.data.provides = {}\n                  return node;\n                })\n              })\n            }\n          }}\n          options={tables}\n          getOptionLabel={(x) => x.name}\n          autoHighlight\n          renderInput={(params) => (\n            <TextField {...params} margin=\"normal\" label=\"Table\" />\n          )} />\n        <div style={{marginTop: 8}}>\n        {renderFields()}\n        </div>\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n        <textarea \n          onChange={(e) => props.editor.updateNode(props.id, (node) => {return {data: {label: e.target.value}}})}\n          value={props.data && props.data.label} \n          rows={4}\n          placeholder=\"Project Title\" />\n        <div style={{display: 'flex'}}>\n            {props.data && props.data.dueDate && \"ETA:\"} {props.data && moment(new Date(props.data.dueDate * 1000)).format('DD/MM/yyyy')}\n        </div>\n    </NodeWrapper>\n    )\n})","/home/workhub/work/React-WorkerHub/src/actions/adminActions.ts",[],["496","497"],"/home/workhub/work/React-WorkerHub/src/actions/types.ts",[],"/home/workhub/work/React-WorkerHub/src/actions/fileActions.ts",[],["498","499"],"/home/workhub/work/React-WorkerHub/src/nodes/TypeDefNode.tsx",["500","501"],"import React from 'react'\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\nimport  ReactJson from 'react-json-view'\nexport const type = 'typeDef'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{flex: 1}}>\n      <ReactJson src={props.node.data.typedef} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"type-def\">\n        {props.id && props.data.label || \"Type Def\"}\n     </div>\n    </NodeWrapper>\n    )\n})","/home/workhub/work/React-WorkerHub/src/reducers/knowledge.js",[],["502","503"],"/home/workhub/work/React-WorkerHub/src/tabs/project/settings.tsx",[],"/home/workhub/work/React-WorkerHub/src/nodes/MSSQLServerNode.tsx",["504","505"],"import React from 'react'\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\n\nexport const type = 'mssql server'\n\nexport const modal = withEditor((props) => {\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField label=\"Connection Name\" value={props.node.data.label} onChange={(e) => {\n            props.editor.updateNode(props.node.id, (node) => {\n                node.data.label = e.target.value;\n                return node;\n            })\n        }}/>\n        <TextField label=\"Host IP:Host Port\" value={props.node.data.host} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.host = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Database Name\" value={props.node.data.db} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.db = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Username\" value={props.node.data.username} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.username = e.target.value;\n            return node;\n          })\n        }}/>\n        <TextField label=\"Password\" type=\"password\" value={props.node.data.password} onChange={(e) => {\n          props.editor.updateNode(props.node.id, (node) => {\n            node.data.password = e.target.value;\n            return node;\n          })\n        }} />\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <span style={{fontSize: 11}}>MSSQL</span>\n        <span>{props.id && props.data.label || \"MSSQL Server\"}</span>\n     </div>\n    </NodeWrapper>\n    )\n})",["506","507"],"/home/workhub/work/React-WorkerHub/src/graph/yjs/context.tsx",[],"/home/workhub/work/React-WorkerHub/src/actions/calendarActions.ts",[],["508","509"],"/home/workhub/work/React-WorkerHub/src/App.tsx",["510"],"/home/workhub/work/React-WorkerHub/src/actions/equipmentActions.ts",[],"/home/workhub/work/React-WorkerHub/src/graph/ipfs/p2p-stack.js",["511"],"import MPLEX from 'libp2p-mplex';\nimport {NOISE} from 'libp2p-noise';\nimport Protector, {generate} from 'libp2p/src/pnet';\nimport WebRTCStar from 'libp2p-webrtc-star'\n\nconst transportKey = WebRTCStar.prototype[Symbol.toStringTag]\n\nexport const P2PStack = (swarmKey) => ({\n    modules: {\n        transport: [WebRTCStar],\n        streamMuxer: [MPLEX],\n        connEncryption: [NOISE],\n        connProtector: new Protector(Buffer.from(swarmKey))\n    },\n    config: {\n        transport: {\n            [transportKey]: {\n                enabled: true\n            }\n        },\n        peerDiscovery: {\n            autoDial: true,\n            [WebRTCStar.tag]: {\n                enabled: true\n            }\n        }\n    }\n})","/home/workhub/work/React-WorkerHub/src/nodes/MSSQLNode.tsx",["512","513","514","515","516","517","518","519","520","521","522","523","524"],"import React from 'react'\n\nimport {\n  Autocomplete\n} from '@material-ui/lab';\n\nimport {\n    TextField\n} from '@material-ui/core';\n\nimport { NodeWrapper, withEditor } from '@workerhive/hive-flow';\n\nimport { getColumns, getTables, getViews } from '../actions/adminActions'\nimport async from 'async';\nimport './MSSQLNode.css';\n\nexport const type = 'mssqlAdapter'\n\nexport const modal = withEditor((props) => {\n\n  const [ tables, setTables ] = React.useState([])\n\n  const [ table, setTable ] = React.useState(null)\n\n  const [ columns, setColumns ] = React.useState([])\n\n  React.useEffect(() => {\n    let source = getSource();\n    getTables(source.id).then((tables) => {\n      setTables(tables)\n    })\n    console.log(getSource())\n  }, [])\n\n  const getSource = () => {\n      let links = props.editor.links.filter((a) => a.source == props.node.id)\n      if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.target)[0])\n        if(nodes && nodes.length > 0){\n            return nodes[0]\n        }\n      }\n  }\n\n  const renderFields = () => {\n    let links = props.editor.links.filter((a) => a.target == props.node.id)\n    if(links && links.length > 0){\n        let nodes = links.map((x) => props.editor.nodes.filter((a) => a.id == x.source)[0])\n        if(nodes && nodes.length > 0){\n            let type = nodes[0].data.typedef;\n            let ret : Array<any> = []\n            for(var k in type){\n                let changeKey = k\n                ret.push(\n                <div style={{marginTop: 4, display: 'flex', alignItems: 'center'}}>\n                    <div style={{width: 100}}>\n                      {k}\n                    </div>: \n                    <select \n                      value={props.node && props.node.data && props.node.data.provides && props.node.data.provides[k]}\n                      onChange={(e) => {\n                    \n                        props.editor.updateNode(props.node.id, (node) => {\n                          if(!node.data.provides) node.data.provides = {}\n                          console.log(e.target.value, \" provides \", changeKey)\n                          node.data.provides[changeKey] = e.target.value;\n                          return node;\n                        })\n                      }}>\n                      {(props.node.data.availableColumns || []).concat([{name: \"N/A\"}]).map((x) => (\n                        <option value={x.name}>\n                          {x.name}\n                        </option>))}\n                      </select>\n                </div>\n                )\n            }\n            return ret;\n        }\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', flex: 1, flexDirection: 'column'}}>\n        <TextField disabled error={!getSource()} label=\"Connection Name\" value={getSource().data.label}/>\n\n        <Autocomplete \n          value={props.node.data.table}\n          onChange={(e, newVal) => {\n            console.log(e, newVal)\n            if(newVal && newVal.name){\n           // setTable(newVal)\n              props.editor.updateNode(props.node.id, (node) => {\n                node.data.table = newVal;\n                return node;\n              })\n              getColumns(getSource().id, newVal.name).then((r) => {\n                console.log(\"Searching for cols\", newVal.name, r)\n                props.editor.updateNode(props.node.id, (node) => {\n                  node.data.availableColumns = r;\n                  node.data.provides = {}\n                  return node;\n                })\n              })\n            }\n          }}\n          options={tables}\n          getOptionLabel={(x) => x.name}\n          autoHighlight\n          renderInput={(params) => (\n            <TextField {...params} margin=\"normal\" label=\"Table\" />\n          )} />\n        <div style={{marginTop: 8}}>\n        {renderFields()}\n        </div>\n    </div>\n  )\n})\n\nexport const node = withEditor((props) => {\n    return (\n    <NodeWrapper {...props}>\n      <div style={{padding: 8}} className=\"mssql-adapter\">\n        <div className=\"adapter-header\">\n        {props.id && props.data.label || \"MSSQL Adapter\"}\n        </div>\n        <div className=\"adapter-info\">\n          {props.id && props.data && props.data.table && props.data.table.name}\n        </div>\n     </div>\n    </NodeWrapper>\n    )\n})","/home/workhub/work/React-WorkerHub/src/tabs/project/calendar.tsx",["525","526","527","528"],"import React from 'react';\nimport {YContext} from '../../graph/yjs';\nimport { connect } from 'react-redux';\nimport { setStatus } from '../../actions/authActions';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport * as Y from 'yjs';\nimport './calendar.css';\n\nlet yDoc : any;\n\nconst localizer = momentLocalizer(moment)\n\nexport interface CalendarTabProps{\n  project: any;\n}\n\nconst CalendarTab : React.FC<CalendarTabProps> = (props) => {\n    const {ydoc} = React.useContext(YContext);\n\n    const [ bookings, setBookings ] = React.useState([])\n    const [ nodes, setNodes ] = React.useState([])\n    const [ doc, setDoc ] = React.useState<Y.Map<any>>()\n    const [ docProject, setProject ] = React.useState<any>({})\n\n    const observer = () => {\n        if(yDoc){\n          let obj = yDoc.toJSON()\n          console.log(\"OBSERVE\", obj)\n          if(obj.nodes != null){\n            setNodes(obj.nodes.map((x : any) => Object.assign({}, x)))\n          }\n        \n        }\n      }\n  \n      React.useEffect(() => {\n        console.log(\"YDC\", props)\n        if(props.project && ydoc && props.project.id != docProject.id){\n          if(doc) doc.unobserve(observer);\n  \n          console.log(\"Setting up YDOC\")\n          let _doc = ydoc.getMap(`plan-${props.project.id}`)\n          yDoc = _doc;\n            setDoc(_doc)\n          _doc.observe(observer)\n  \n          setProject(props.project)\n          \n          let init = _doc.toJSON();\n  \n          if(init.nodes != null) setNodes(init.nodes)\n        }\n      }, [props.project, doc])\n\n    return (\n        <div className=\"calendar-tab\">\n            <Calendar\n                localizer={localizer}\n                events={nodes.filter((a : any) => a.data && a.data.dueDate).map((x : any) => ({\n                    id: x.id,\n                    title: x.data.label,\n                    allDay: false,\n                    start: new Date(((x.data.dueDate)*1000) -( 5 * 1000 * 60)),\n                    end: new Date((x.data.dueDate)* 1000)\n                }))}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                style={{ flex: 1 }} />\n        </div>\n    )\n}\n\nexport default connect(null, (dispatch : any) => ({\n  setStatus: (status : any) => dispatch(setStatus(status))\n}))(CalendarTab)","/home/workhub/work/React-WorkerHub/src/components/dialogs/calendar-dialog/index.tsx",["529","530","531","532","533","534","535","536","537"],"/home/workhub/work/React-WorkerHub/src/configureStore.ts",["538"],"/home/workhub/work/React-WorkerHub/src/tabs/project/index.tsx",["539"],{"ruleId":"540","severity":1,"message":"541","line":17,"column":13,"nodeType":"542","messageId":"543","endLine":17,"endColumn":15},{"ruleId":"544","severity":1,"message":"545","line":54,"column":17,"nodeType":"546","messageId":"547","endLine":54,"endColumn":21},{"ruleId":"548","severity":1,"message":"549","line":54,"column":24,"nodeType":"550","endLine":54,"endColumn":28},{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","replacedBy":"554"},{"ruleId":"555","severity":1,"message":"556","line":4,"column":3,"nodeType":"546","messageId":"557","endLine":4,"endColumn":9},{"ruleId":"555","severity":1,"message":"558","line":5,"column":3,"nodeType":"546","messageId":"557","endLine":5,"endColumn":7},{"ruleId":"555","severity":1,"message":"559","line":6,"column":3,"nodeType":"546","messageId":"557","endLine":6,"endColumn":10},{"ruleId":"555","severity":1,"message":"560","line":7,"column":3,"nodeType":"546","messageId":"557","endLine":7,"endColumn":11},{"ruleId":"555","severity":1,"message":"561","line":8,"column":3,"nodeType":"546","messageId":"557","endLine":8,"endColumn":8},{"ruleId":"555","severity":1,"message":"562","line":9,"column":3,"nodeType":"546","messageId":"557","endLine":9,"endColumn":13},{"ruleId":"555","severity":1,"message":"563","line":15,"column":3,"nodeType":"546","messageId":"557","endLine":15,"endColumn":16},{"ruleId":"555","severity":1,"message":"564","line":16,"column":3,"nodeType":"546","messageId":"557","endLine":16,"endColumn":14},{"ruleId":"555","severity":1,"message":"565","line":17,"column":3,"nodeType":"546","messageId":"557","endLine":17,"endColumn":12},{"ruleId":"555","severity":1,"message":"566","line":18,"column":3,"nodeType":"546","messageId":"557","endLine":18,"endColumn":16},{"ruleId":"555","severity":1,"message":"567","line":19,"column":3,"nodeType":"546","messageId":"557","endLine":19,"endColumn":20},{"ruleId":"555","severity":1,"message":"568","line":20,"column":3,"nodeType":"546","messageId":"557","endLine":20,"endColumn":17},{"ruleId":"555","severity":1,"message":"569","line":21,"column":3,"nodeType":"546","messageId":"557","endLine":21,"endColumn":14},{"ruleId":"555","severity":1,"message":"570","line":22,"column":3,"nodeType":"546","messageId":"557","endLine":22,"endColumn":11},{"ruleId":"555","severity":1,"message":"571","line":43,"column":21,"nodeType":"546","messageId":"557","endLine":43,"endColumn":32},{"ruleId":"555","severity":1,"message":"572","line":46,"column":8,"nodeType":"546","messageId":"557","endLine":46,"endColumn":16},{"ruleId":"555","severity":1,"message":"573","line":48,"column":8,"nodeType":"546","messageId":"557","endLine":48,"endColumn":19},{"ruleId":"548","severity":1,"message":"574","line":60,"column":19,"nodeType":"575","endLine":67,"endColumn":4},{"ruleId":"548","severity":1,"message":"576","line":67,"column":6,"nodeType":"577","endLine":67,"endColumn":8,"suggestions":"578"},{"ruleId":"555","severity":1,"message":"579","line":69,"column":9,"nodeType":"546","messageId":"557","endLine":69,"endColumn":20},{"ruleId":"580","severity":1,"message":"581","line":70,"column":5,"nodeType":"582","messageId":"583","endLine":84,"endColumn":6},{"ruleId":"555","severity":1,"message":"584","line":87,"column":9,"nodeType":"546","messageId":"557","endLine":87,"endColumn":26},{"ruleId":"551","replacedBy":"585"},{"ruleId":"553","replacedBy":"586"},{"ruleId":"555","severity":1,"message":"556","line":4,"column":5,"nodeType":"546","messageId":"557","endLine":4,"endColumn":11},{"ruleId":"555","severity":1,"message":"563","line":15,"column":5,"nodeType":"546","messageId":"557","endLine":15,"endColumn":18},{"ruleId":"587","severity":1,"message":"588","line":87,"column":12,"nodeType":"589","endLine":87,"endColumn":90},{"ruleId":"540","severity":1,"message":"541","line":99,"column":108,"nodeType":"542","messageId":"543","endLine":99,"endColumn":110},{"ruleId":"551","replacedBy":"590"},{"ruleId":"553","replacedBy":"591"},{"ruleId":"551","replacedBy":"592"},{"ruleId":"553","replacedBy":"593"},{"ruleId":"555","severity":1,"message":"594","line":17,"column":10,"nodeType":"546","messageId":"557","endLine":17,"endColumn":17},{"ruleId":"587","severity":1,"message":"588","line":40,"column":25,"nodeType":"589","endLine":40,"endColumn":82},{"ruleId":"548","severity":1,"message":"574","line":56,"column":22,"nodeType":"575","endLine":69,"endColumn":6},{"ruleId":"548","severity":1,"message":"595","line":69,"column":8,"nodeType":"577","endLine":69,"endColumn":32,"suggestions":"596"},{"ruleId":"551","replacedBy":"597"},{"ruleId":"553","replacedBy":"598"},{"ruleId":"555","severity":1,"message":"599","line":20,"column":10,"nodeType":"546","messageId":"557","endLine":20,"endColumn":23},{"ruleId":"555","severity":1,"message":"600","line":25,"column":22,"nodeType":"546","messageId":"557","endLine":25,"endColumn":32},{"ruleId":"540","severity":1,"message":"541","line":58,"column":74,"nodeType":"542","messageId":"543","endLine":58,"endColumn":76},{"ruleId":"551","replacedBy":"601"},{"ruleId":"553","replacedBy":"602"},{"ruleId":"551","replacedBy":"603"},{"ruleId":"553","replacedBy":"604"},{"ruleId":"555","severity":1,"message":"605","line":12,"column":5,"nodeType":"546","messageId":"557","endLine":12,"endColumn":13},{"ruleId":"555","severity":1,"message":"606","line":27,"column":10,"nodeType":"546","messageId":"557","endLine":27,"endColumn":20},{"ruleId":"551","replacedBy":"607"},{"ruleId":"553","replacedBy":"608"},{"ruleId":"551","replacedBy":"609"},{"ruleId":"553","replacedBy":"610"},{"ruleId":"555","severity":1,"message":"611","line":45,"column":11,"nodeType":"546","messageId":"557","endLine":45,"endColumn":18},{"ruleId":"555","severity":1,"message":"612","line":5,"column":5,"nodeType":"546","messageId":"557","endLine":5,"endColumn":13},{"ruleId":"540","severity":1,"message":"541","line":21,"column":70,"nodeType":"542","messageId":"543","endLine":21,"endColumn":72},{"ruleId":"540","severity":1,"message":"541","line":21,"column":86,"nodeType":"542","messageId":"543","endLine":21,"endColumn":88},{"ruleId":"540","severity":1,"message":"541","line":27,"column":49,"nodeType":"542","messageId":"543","endLine":27,"endColumn":51},{"ruleId":"540","severity":1,"message":"541","line":28,"column":66,"nodeType":"542","messageId":"543","endLine":28,"endColumn":68},{"ruleId":"540","severity":1,"message":"541","line":50,"column":57,"nodeType":"542","messageId":"543","endLine":50,"endColumn":59},{"ruleId":"551","replacedBy":"613"},{"ruleId":"553","replacedBy":"614"},{"ruleId":"555","severity":1,"message":"562","line":13,"column":5,"nodeType":"546","messageId":"557","endLine":13,"endColumn":15},{"ruleId":"540","severity":1,"message":"615","line":34,"column":37,"nodeType":"542","messageId":"543","endLine":34,"endColumn":39},{"ruleId":"548","severity":1,"message":"595","line":37,"column":8,"nodeType":"577","endLine":37,"endColumn":20,"suggestions":"616"},{"ruleId":"551","replacedBy":"617"},{"ruleId":"553","replacedBy":"618"},{"ruleId":"619","severity":1,"message":"561","line":4,"column":3,"nodeType":"546","messageId":"557","endLine":4,"endColumn":8},{"ruleId":"619","severity":1,"message":"558","line":5,"column":3,"nodeType":"546","messageId":"557","endLine":5,"endColumn":7},{"ruleId":"548","severity":1,"message":"576","line":35,"column":6,"nodeType":"577","endLine":35,"endColumn":8,"suggestions":"620"},{"ruleId":"540","severity":1,"message":"541","line":66,"column":23,"nodeType":"542","messageId":"543","endLine":66,"endColumn":25},{"ruleId":"540","severity":1,"message":"541","line":96,"column":52,"nodeType":"542","messageId":"543","endLine":96,"endColumn":54},{"ruleId":"540","severity":1,"message":"541","line":97,"column":65,"nodeType":"542","messageId":"543","endLine":97,"endColumn":67},{"ruleId":"619","severity":1,"message":"561","line":4,"column":3,"nodeType":"546","messageId":"557","endLine":4,"endColumn":8},{"ruleId":"619","severity":1,"message":"558","line":6,"column":3,"nodeType":"546","messageId":"557","endLine":6,"endColumn":7},{"ruleId":"619","severity":1,"message":"621","line":20,"column":10,"nodeType":"546","messageId":"557","endLine":20,"endColumn":21},{"ruleId":"548","severity":1,"message":"576","line":43,"column":6,"nodeType":"577","endLine":43,"endColumn":8,"suggestions":"622"},{"ruleId":"551","replacedBy":"592"},{"ruleId":"553","replacedBy":"593"},{"ruleId":"619","severity":1,"message":"623","line":8,"column":5,"nodeType":"546","messageId":"557","endLine":8,"endColumn":13},{"ruleId":"619","severity":1,"message":"612","line":9,"column":5,"nodeType":"546","messageId":"557","endLine":9,"endColumn":13},{"ruleId":"619","severity":1,"message":"624","line":12,"column":8,"nodeType":"546","messageId":"557","endLine":12,"endColumn":14},{"ruleId":"619","severity":1,"message":"625","line":18,"column":10,"nodeType":"546","messageId":"557","endLine":18,"endColumn":20},{"ruleId":"619","severity":1,"message":"626","line":18,"column":22,"nodeType":"546","messageId":"557","endLine":18,"endColumn":32},{"ruleId":"619","severity":1,"message":"627","line":36,"column":13,"nodeType":"546","messageId":"557","endLine":36,"endColumn":23},{"ruleId":"619","severity":1,"message":"628","line":36,"column":25,"nodeType":"546","messageId":"557","endLine":36,"endColumn":38},{"ruleId":"619","severity":1,"message":"629","line":37,"column":13,"nodeType":"546","messageId":"557","endLine":37,"endColumn":22},{"ruleId":"619","severity":1,"message":"630","line":41,"column":12,"nodeType":"546","messageId":"557","endLine":41,"endColumn":20},{"ruleId":"619","severity":1,"message":"631","line":41,"column":22,"nodeType":"546","messageId":"557","endLine":41,"endColumn":33},{"ruleId":"548","severity":1,"message":"576","line":50,"column":8,"nodeType":"577","endLine":50,"endColumn":10,"suggestions":"632"},{"ruleId":"540","severity":1,"message":"541","line":100,"column":70,"nodeType":"542","messageId":"543","endLine":100,"endColumn":72},{"ruleId":"633","severity":1,"message":"634","line":118,"column":69,"nodeType":"550","messageId":"635","endLine":118,"endColumn":70,"suggestions":"636"},{"ruleId":"633","severity":1,"message":"634","line":119,"column":58,"nodeType":"550","messageId":"635","endLine":119,"endColumn":59,"suggestions":"637"},{"ruleId":"551","replacedBy":"607"},{"ruleId":"553","replacedBy":"608"},{"ruleId":"619","severity":1,"message":"638","line":14,"column":7,"nodeType":"546","messageId":"557","endLine":14,"endColumn":24},{"ruleId":"619","severity":1,"message":"639","line":15,"column":7,"nodeType":"546","messageId":"557","endLine":15,"endColumn":23},{"ruleId":"619","severity":1,"message":"640","line":16,"column":7,"nodeType":"546","messageId":"557","endLine":16,"endColumn":22},{"ruleId":"619","severity":1,"message":"641","line":28,"column":10,"nodeType":"546","messageId":"557","endLine":28,"endColumn":20},{"ruleId":"619","severity":1,"message":"642","line":29,"column":10,"nodeType":"546","messageId":"557","endLine":29,"endColumn":20},{"ruleId":"619","severity":1,"message":"643","line":30,"column":10,"nodeType":"546","messageId":"557","endLine":30,"endColumn":22},{"ruleId":"548","severity":1,"message":"576","line":47,"column":6,"nodeType":"577","endLine":47,"endColumn":8,"suggestions":"644"},{"ruleId":"548","severity":1,"message":"576","line":38,"column":8,"nodeType":"577","endLine":38,"endColumn":10,"suggestions":"645"},{"ruleId":"646","severity":1,"message":"647","line":52,"column":50,"nodeType":"648","messageId":"649","endLine":52,"endColumn":52},{"ruleId":"646","severity":1,"message":"647","line":52,"column":98,"nodeType":"648","messageId":"649","endLine":52,"endColumn":100},{"ruleId":"540","severity":1,"message":"541","line":70,"column":106,"nodeType":"542","messageId":"543","endLine":70,"endColumn":108},{"ruleId":"540","severity":1,"message":"541","line":103,"column":59,"nodeType":"542","messageId":"543","endLine":103,"endColumn":61},{"ruleId":"540","severity":1,"message":"541","line":104,"column":72,"nodeType":"542","messageId":"543","endLine":104,"endColumn":74},{"ruleId":"551","replacedBy":"650"},{"ruleId":"553","replacedBy":"651"},{"ruleId":"551","replacedBy":"652"},{"ruleId":"553","replacedBy":"653"},{"ruleId":"619","severity":1,"message":"654","line":9,"column":10,"nodeType":"546","messageId":"557","endLine":9,"endColumn":17},{"ruleId":"619","severity":1,"message":"655","line":9,"column":19,"nodeType":"546","messageId":"557","endLine":9,"endColumn":24},{"ruleId":"548","severity":1,"message":"656","line":74,"column":6,"nodeType":"577","endLine":74,"endColumn":21,"suggestions":"657"},{"ruleId":"540","severity":1,"message":"541","line":113,"column":45,"nodeType":"542","messageId":"543","endLine":113,"endColumn":47},{"ruleId":"540","severity":1,"message":"541","line":184,"column":77,"nodeType":"542","messageId":"543","endLine":184,"endColumn":79},{"ruleId":"540","severity":1,"message":"541","line":222,"column":56,"nodeType":"542","messageId":"543","endLine":222,"endColumn":58},{"ruleId":"619","severity":1,"message":"658","line":4,"column":3,"nodeType":"546","messageId":"557","endLine":4,"endColumn":15},{"ruleId":"619","severity":1,"message":"659","line":5,"column":3,"nodeType":"546","messageId":"557","endLine":5,"endColumn":13},{"ruleId":"619","severity":1,"message":"660","line":6,"column":3,"nodeType":"546","messageId":"557","endLine":6,"endColumn":9},{"ruleId":"619","severity":1,"message":"661","line":7,"column":3,"nodeType":"546","messageId":"557","endLine":7,"endColumn":6},{"ruleId":"619","severity":1,"message":"558","line":11,"column":3,"nodeType":"546","messageId":"557","endLine":11,"endColumn":7},{"ruleId":"619","severity":1,"message":"662","line":13,"column":3,"nodeType":"546","messageId":"557","endLine":13,"endColumn":17},{"ruleId":"619","severity":1,"message":"663","line":14,"column":3,"nodeType":"546","messageId":"557","endLine":14,"endColumn":14},{"ruleId":"619","severity":1,"message":"664","line":15,"column":3,"nodeType":"546","messageId":"557","endLine":15,"endColumn":9},{"ruleId":"619","severity":1,"message":"561","line":16,"column":3,"nodeType":"546","messageId":"557","endLine":16,"endColumn":8},{"ruleId":"619","severity":1,"message":"559","line":17,"column":3,"nodeType":"546","messageId":"557","endLine":17,"endColumn":10},{"ruleId":"619","severity":1,"message":"665","line":18,"column":3,"nodeType":"546","messageId":"557","endLine":18,"endColumn":12},{"ruleId":"619","severity":1,"message":"666","line":19,"column":3,"nodeType":"546","messageId":"557","endLine":19,"endColumn":6},{"ruleId":"619","severity":1,"message":"621","line":23,"column":10,"nodeType":"546","messageId":"557","endLine":23,"endColumn":21},{"ruleId":"548","severity":1,"message":"576","line":54,"column":6,"nodeType":"577","endLine":54,"endColumn":8,"suggestions":"667"},{"ruleId":"540","severity":1,"message":"615","line":59,"column":88,"nodeType":"542","messageId":"543","endLine":59,"endColumn":90},{"ruleId":"540","severity":1,"message":"541","line":61,"column":14,"nodeType":"542","messageId":"543","endLine":61,"endColumn":16},{"ruleId":"646","severity":1,"message":"647","line":71,"column":38,"nodeType":"648","messageId":"649","endLine":71,"endColumn":40},{"ruleId":"646","severity":1,"message":"647","line":71,"column":86,"nodeType":"648","messageId":"649","endLine":71,"endColumn":88},{"ruleId":"540","severity":1,"message":"541","line":90,"column":72,"nodeType":"542","messageId":"543","endLine":90,"endColumn":74},{"ruleId":"540","severity":1,"message":"541","line":129,"column":58,"nodeType":"542","messageId":"543","endLine":129,"endColumn":60},{"ruleId":"540","severity":1,"message":"541","line":130,"column":71,"nodeType":"542","messageId":"543","endLine":130,"endColumn":73},{"ruleId":"619","severity":1,"message":"561","line":4,"column":3,"nodeType":"546","messageId":"557","endLine":4,"endColumn":8},{"ruleId":"619","severity":1,"message":"559","line":5,"column":3,"nodeType":"546","messageId":"557","endLine":5,"endColumn":10},{"ruleId":"619","severity":1,"message":"558","line":7,"column":3,"nodeType":"546","messageId":"557","endLine":7,"endColumn":7},{"ruleId":"619","severity":1,"message":"668","line":8,"column":3,"nodeType":"546","messageId":"557","endLine":8,"endColumn":13},{"ruleId":"619","severity":1,"message":"560","line":10,"column":3,"nodeType":"546","messageId":"557","endLine":10,"endColumn":11},{"ruleId":"619","severity":1,"message":"669","line":13,"column":10,"nodeType":"546","messageId":"557","endLine":13,"endColumn":18},{"ruleId":"619","severity":1,"message":"599","line":18,"column":10,"nodeType":"546","messageId":"557","endLine":18,"endColumn":23},{"ruleId":"619","severity":1,"message":"670","line":18,"column":25,"nodeType":"546","messageId":"557","endLine":18,"endColumn":41},{"ruleId":"619","severity":1,"message":"671","line":33,"column":23,"nodeType":"546","messageId":"557","endLine":33,"endColumn":36},{"ruleId":"619","severity":1,"message":"672","line":34,"column":11,"nodeType":"546","messageId":"557","endLine":34,"endColumn":17},{"ruleId":"619","severity":1,"message":"673","line":34,"column":19,"nodeType":"546","messageId":"557","endLine":34,"endColumn":28},{"ruleId":"548","severity":1,"message":"576","line":48,"column":6,"nodeType":"577","endLine":48,"endColumn":8,"suggestions":"674"},{"ruleId":"551","replacedBy":"613"},{"ruleId":"553","replacedBy":"614"},{"ruleId":"548","severity":1,"message":"576","line":30,"column":8,"nodeType":"577","endLine":30,"endColumn":10,"suggestions":"675"},{"ruleId":"551","replacedBy":"676"},{"ruleId":"553","replacedBy":"677"},{"ruleId":"619","severity":1,"message":"621","line":13,"column":10,"nodeType":"546","messageId":"557","endLine":13,"endColumn":21},{"ruleId":"619","severity":1,"message":"678","line":16,"column":8,"nodeType":"546","messageId":"557","endLine":16,"endColumn":16},{"ruleId":"587","severity":1,"message":"588","line":57,"column":25,"nodeType":"589","endLine":57,"endColumn":88},{"ruleId":"540","severity":1,"message":"541","line":90,"column":53,"nodeType":"542","messageId":"543","endLine":90,"endColumn":55},{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","replacedBy":"554"},{"ruleId":"540","severity":1,"message":"541","line":41,"column":38,"nodeType":"542","messageId":"543","endLine":41,"endColumn":40},{"ruleId":"646","severity":1,"message":"647","line":62,"column":25,"nodeType":"648","messageId":"649","endLine":62,"endColumn":27},{"ruleId":"646","severity":1,"message":"647","line":62,"column":45,"nodeType":"648","messageId":"649","endLine":62,"endColumn":47},{"ruleId":"619","severity":1,"message":"558","line":9,"column":5,"nodeType":"546","messageId":"557","endLine":9,"endColumn":9},{"ruleId":"619","severity":1,"message":"560","line":10,"column":5,"nodeType":"546","messageId":"557","endLine":10,"endColumn":13},{"ruleId":"619","severity":1,"message":"621","line":13,"column":10,"nodeType":"546","messageId":"557","endLine":13,"endColumn":21},{"ruleId":"619","severity":1,"message":"679","line":14,"column":10,"nodeType":"546","messageId":"557","endLine":14,"endColumn":18},{"ruleId":"551","replacedBy":"601"},{"ruleId":"553","replacedBy":"602"},{"ruleId":"551","replacedBy":"585"},{"ruleId":"553","replacedBy":"586"},{"ruleId":"619","severity":1,"message":"680","line":1,"column":8,"nodeType":"546","messageId":"557","endLine":1,"endColumn":13},{"ruleId":"619","severity":1,"message":"681","line":6,"column":5,"nodeType":"546","messageId":"557","endLine":6,"endColumn":13},{"ruleId":"540","severity":1,"message":"541","line":22,"column":33,"nodeType":"542","messageId":"543","endLine":22,"endColumn":35},{"ruleId":"551","replacedBy":"682"},{"ruleId":"553","replacedBy":"683"},{"ruleId":"551","replacedBy":"684"},{"ruleId":"553","replacedBy":"685"},{"ruleId":"619","severity":1,"message":"686","line":13,"column":33,"nodeType":"546","messageId":"557","endLine":13,"endColumn":41},{"ruleId":"619","severity":1,"message":"687","line":14,"column":8,"nodeType":"546","messageId":"557","endLine":14,"endColumn":13},{"ruleId":"619","severity":1,"message":"688","line":24,"column":11,"nodeType":"546","messageId":"557","endLine":24,"endColumn":16},{"ruleId":"619","severity":1,"message":"689","line":24,"column":18,"nodeType":"546","messageId":"557","endLine":24,"endColumn":26},{"ruleId":"619","severity":1,"message":"690","line":26,"column":11,"nodeType":"546","messageId":"557","endLine":26,"endColumn":18},{"ruleId":"619","severity":1,"message":"691","line":26,"column":20,"nodeType":"546","messageId":"557","endLine":26,"endColumn":30},{"ruleId":"548","severity":1,"message":"692","line":34,"column":6,"nodeType":"577","endLine":34,"endColumn":8,"suggestions":"693"},{"ruleId":"540","severity":1,"message":"541","line":37,"column":61,"nodeType":"542","messageId":"543","endLine":37,"endColumn":63},{"ruleId":"540","severity":1,"message":"541","line":39,"column":76,"nodeType":"542","messageId":"543","endLine":39,"endColumn":78},{"ruleId":"540","severity":1,"message":"541","line":47,"column":59,"nodeType":"542","messageId":"543","endLine":47,"endColumn":61},{"ruleId":"540","severity":1,"message":"541","line":49,"column":76,"nodeType":"542","messageId":"543","endLine":49,"endColumn":78},{"ruleId":"551","replacedBy":"597"},{"ruleId":"553","replacedBy":"598"},{"ruleId":"551","replacedBy":"617"},{"ruleId":"553","replacedBy":"618"},{"ruleId":"646","severity":1,"message":"647","line":20,"column":19,"nodeType":"648","messageId":"649","endLine":20,"endColumn":21},{"ruleId":"646","severity":1,"message":"647","line":20,"column":39,"nodeType":"648","messageId":"649","endLine":20,"endColumn":41},{"ruleId":"551","replacedBy":"694"},{"ruleId":"553","replacedBy":"695"},{"ruleId":"646","severity":1,"message":"647","line":54,"column":25,"nodeType":"648","messageId":"649","endLine":54,"endColumn":27},{"ruleId":"646","severity":1,"message":"647","line":54,"column":45,"nodeType":"648","messageId":"649","endLine":54,"endColumn":47},{"ruleId":"551","replacedBy":"696"},{"ruleId":"553","replacedBy":"697"},{"ruleId":"551","replacedBy":"603"},{"ruleId":"553","replacedBy":"604"},{"ruleId":"619","severity":1,"message":"698","line":18,"column":8,"nodeType":"546","messageId":"557","endLine":18,"endColumn":15},{"ruleId":"555","severity":1,"message":"699","line":3,"column":20,"nodeType":"546","messageId":"557","endLine":3,"endColumn":28},{"ruleId":"619","severity":1,"message":"686","line":13,"column":33,"nodeType":"546","messageId":"557","endLine":13,"endColumn":41},{"ruleId":"619","severity":1,"message":"687","line":14,"column":8,"nodeType":"546","messageId":"557","endLine":14,"endColumn":13},{"ruleId":"619","severity":1,"message":"688","line":23,"column":11,"nodeType":"546","messageId":"557","endLine":23,"endColumn":16},{"ruleId":"619","severity":1,"message":"689","line":23,"column":18,"nodeType":"546","messageId":"557","endLine":23,"endColumn":26},{"ruleId":"619","severity":1,"message":"690","line":25,"column":11,"nodeType":"546","messageId":"557","endLine":25,"endColumn":18},{"ruleId":"619","severity":1,"message":"691","line":25,"column":20,"nodeType":"546","messageId":"557","endLine":25,"endColumn":30},{"ruleId":"548","severity":1,"message":"692","line":33,"column":6,"nodeType":"577","endLine":33,"endColumn":8,"suggestions":"700"},{"ruleId":"540","severity":1,"message":"541","line":36,"column":61,"nodeType":"542","messageId":"543","endLine":36,"endColumn":63},{"ruleId":"540","severity":1,"message":"541","line":38,"column":76,"nodeType":"542","messageId":"543","endLine":38,"endColumn":78},{"ruleId":"540","severity":1,"message":"541","line":46,"column":59,"nodeType":"542","messageId":"543","endLine":46,"endColumn":61},{"ruleId":"540","severity":1,"message":"541","line":48,"column":76,"nodeType":"542","messageId":"543","endLine":48,"endColumn":78},{"ruleId":"646","severity":1,"message":"647","line":125,"column":19,"nodeType":"648","messageId":"649","endLine":125,"endColumn":21},{"ruleId":"646","severity":1,"message":"647","line":125,"column":39,"nodeType":"648","messageId":"649","endLine":125,"endColumn":41},{"ruleId":"619","severity":1,"message":"701","line":21,"column":13,"nodeType":"546","messageId":"557","endLine":21,"endColumn":21},{"ruleId":"619","severity":1,"message":"702","line":21,"column":23,"nodeType":"546","messageId":"557","endLine":21,"endColumn":34},{"ruleId":"540","severity":1,"message":"615","line":39,"column":54,"nodeType":"542","messageId":"543","endLine":39,"endColumn":56},{"ruleId":"548","severity":1,"message":"703","line":54,"column":10,"nodeType":"577","endLine":54,"endColumn":30,"suggestions":"704"},{"ruleId":"548","severity":1,"message":"705","line":63,"column":8,"nodeType":"577","endLine":63,"endColumn":10,"suggestions":"706"},{"ruleId":"540","severity":1,"message":"541","line":66,"column":17,"nodeType":"542","messageId":"543","endLine":66,"endColumn":19},{"ruleId":"540","severity":1,"message":"541","line":196,"column":41,"nodeType":"542","messageId":"543","endLine":196,"endColumn":43},{"ruleId":"646","severity":1,"message":"647","line":198,"column":76,"nodeType":"648","messageId":"649","endLine":198,"endColumn":78},{"ruleId":"646","severity":1,"message":"647","line":198,"column":108,"nodeType":"648","messageId":"649","endLine":198,"endColumn":110},{"ruleId":"540","severity":1,"message":"541","line":202,"column":61,"nodeType":"542","messageId":"543","endLine":202,"endColumn":63},{"ruleId":"540","severity":1,"message":"541","line":253,"column":44,"nodeType":"542","messageId":"543","endLine":253,"endColumn":46},{"ruleId":"540","severity":1,"message":"541","line":253,"column":98,"nodeType":"542","messageId":"543","endLine":253,"endColumn":100},{"ruleId":"540","severity":1,"message":"541","line":254,"column":93,"nodeType":"542","messageId":"543","endLine":254,"endColumn":95},{"ruleId":"707","severity":1,"message":"708","line":13,"column":1,"nodeType":"709","endLine":18,"endColumn":2},{"ruleId":"707","severity":1,"message":"710","line":7,"column":1,"nodeType":"709","endLine":13,"endColumn":2},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-const-assign","'ipfs' is constant.","Identifier","const","react-hooks/exhaustive-deps","Assignments to the 'ipfs' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Literal","no-native-reassign",["711"],"no-negated-in-lhs",["712"],"no-unused-vars","'Drawer' is defined but never used.","unusedVar","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'Notifications' is defined but never used.","'AccountTree' is defined but never used.","'Dashboard' is defined but never used.","'CalendarToday' is defined but never used.","'SupervisorAccount' is defined but never used.","'BusinessCenter' is defined but never used.","'Description' is defined but never used.","'Settings' is defined but never used.","'getNodeConf' is defined but never used.","'YActions' is defined but never used.","'HexagonGrid' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["713"],"'renderTitle' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'renderActionBlock' is assigned a value but never used.",["711"],["712"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["711"],["712"],["711"],["712"],"'connect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["714"],["711"],["712"],"'getConverters' is defined but never used.","'setFormats' is assigned a value but never used.",["711"],["712"],["711"],["712"],"'MenuItem' is defined but never used.","'attachFile' is defined but never used.",["711"],["712"],["711"],["712"],"'classes' is assigned a value but never used.","'TreeItem' is defined but never used.",["711"],["712"],"Expected '!==' and instead saw '!='.",["715"],["711"],["712"],"@typescript-eslint/no-unused-vars",["716"],"'useMutation' is defined but never used.",["717"],"'TreeView' is defined but never used.","'Editor' is defined but never used.","'ExpandMore' is defined but never used.","'ExpandLess' is defined but never used.","'editorData' is assigned a value but never used.","'setEditorData' is assigned a value but never used.","'editorMap' is assigned a value but never used.","'branches' is assigned a value but never used.","'setBranches' is assigned a value but never used.",["718"],"no-useless-escape","Unnecessary escape character: \\[.","unnecessaryEscape",["719","720"],["721","722"],"'FilePreviewDialog' is assigned a value but never used.","'FileUploadDialog' is assigned a value but never used.","'ConverterDialog' is assigned a value but never used.","'dialogOpen' is assigned a value but never used.","'convertDoc' is assigned a value but never used.","'selectedData' is assigned a value but never used.",["723"],["724"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["711"],["712"],["711"],["712"],"'isArray' is defined but never used.","'merge' is defined but never used.","React Hook React.useEffect has missing dependencies: 'observer', 'projectDoc', and 'ydoc'. Either include them or remove the dependency array.",["725"],"'ViewHeadline' is defined but never used.","'ViewModule' is defined but never used.","'Search' is defined but never used.","'Add' is defined but never used.","'InputAdornment' is defined but never used.","'ButtonGroup' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Fab' is defined but never used.",["726"],"'IconButton' is defined but never used.","'MoreVert' is defined but never used.","'installConverter' is defined but never used.","'setConverters' is assigned a value but never used.","'stores' is assigned a value but never used.","'setStores' is assigned a value but never used.",["727"],["728"],["711"],["712"],"'HubSetup' is defined but never used.","'YContext' is defined but never used.","'React' is defined but never used.","'settings' is defined but never used.",["711"],["712"],["711"],["712"],"'getViews' is defined but never used.","'async' is defined but never used.","'table' is assigned a value but never used.","'setTable' is assigned a value but never used.","'columns' is assigned a value but never used.","'setColumns' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getSource'. Either include it or remove the dependency array.",["729"],["711"],["712"],["711"],["712"],"'GClient' is defined but never used.","'generate' is defined but never used.",["730"],"'bookings' is assigned a value but never used.","'setBookings' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'docProject.id', 'props', and 'ydoc'. Either include them or remove the dependency array.",["731"],"React Hook React.useEffect has a missing dependency: 'ydoc'. Either include it or remove the dependency array.",["732"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"733","fix":"739"},{"desc":"733","fix":"740"},{"desc":"733","fix":"741"},{"messageId":"742","fix":"743","desc":"744"},{"messageId":"745","fix":"746","desc":"747"},{"messageId":"742","fix":"748","desc":"744"},{"messageId":"745","fix":"749","desc":"747"},{"desc":"733","fix":"750"},{"desc":"733","fix":"751"},{"desc":"752","fix":"753"},{"desc":"733","fix":"754"},{"desc":"733","fix":"755"},{"desc":"733","fix":"756"},{"desc":"757","fix":"758"},{"desc":"757","fix":"759"},{"desc":"760","fix":"761"},{"desc":"762","fix":"763"},"Update the dependencies array to be: [props]",{"range":"764","text":"765"},"Update the dependencies array to be: [data, props.file, props.ipfs]",{"range":"766","text":"767"},"Update the dependencies array to be: [data, props.data]",{"range":"768","text":"769"},{"range":"770","text":"765"},{"range":"771","text":"765"},{"range":"772","text":"765"},"removeEscape",{"range":"773","text":"774"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"775","text":"776"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"777","text":"774"},{"range":"778","text":"776"},{"range":"779","text":"765"},{"range":"780","text":"765"},"Update the dependencies array to be: [observer, projectDoc, props.project, ydoc]",{"range":"781","text":"782"},{"range":"783","text":"765"},{"range":"784","text":"765"},{"range":"785","text":"765"},"Update the dependencies array to be: [getSource]",{"range":"786","text":"787"},{"range":"788","text":"787"},"Update the dependencies array to be: [props.project, doc, props, ydoc, docProject.id]",{"range":"789","text":"790"},"Update the dependencies array to be: [ydoc]",{"range":"791","text":"792"},[1675,1677],"[props]",[1889,1913],"[data, props.file, props.ipfs]",[614,626],"[data, props.data]",[841,843],[935,937],[1325,1327],[4009,4010],"",[4009,4009],"\\",[4116,4117],[4116,4116],[1381,1383],[957,959],[2207,2222],"[observer, projectDoc, props.project, ydoc]",[1124,1126],[1109,1111],[896,898],[759,761],"[getSource]",[730,732],[1551,1571],"[props.project, doc, props, ydoc, docProject.id]",[1594,1596],"[ydoc]"]